<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老菜的菜单</title>
  
  <subtitle>记录点技术点滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.fh123.co/"/>
  <updated>2021-02-21T02:31:53.425Z</updated>
  <id>https://www.fh123.co/</id>
  
  <author>
    <name>Liuuuuuuuuu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在ArchLnix中搭建Docker mysql持久化学习环境</title>
    <link href="https://www.fh123.co/2021/02/21/mysql%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/"/>
    <id>https://www.fh123.co/2021/02/21/mysql%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/</id>
    <published>2021-02-21T01:14:33.000Z</published>
    <updated>2021-02-21T02:31:53.425Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在ArchLnix中搭建Docker-mysql持久化学习环境"><a href="#在ArchLnix中搭建Docker-mysql持久化学习环境" class="headerlink" title="在ArchLnix中搭建Docker mysql持久化学习环境"></a>在ArchLnix中搭建Docker mysql持久化学习环境</h2><h3 id="0x1-Pull-mysql镜像"><a href="#0x1-Pull-mysql镜像" class="headerlink" title="0x1. Pull mysql镜像"></a>0x1. Pull mysql镜像</h3><blockquote><p>Mysql 8.0访问机制出现改变，先使用5.7版本搭建学习环境</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure><h3 id="0x2-启动Mysql"><a href="#0x2-启动Mysql" class="headerlink" title="0x2. 启动Mysql"></a>0x2. 启动Mysql</h3><blockquote><p>给root用户远程访问权限</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD&#x3D;123456 -e MYSQL_ROOT_HOST&#x3D;% -v &#x2F;usr&#x2F;local&#x2F;docker&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -d mysql:5.7</span><br></pre></td></tr></table></figure><blockquote><p>-v参数:宿主机存储数据目录:容器数据目录</p></blockquote><blockquote><p>创建一个新用户并赋予远程访问权限</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD&#x3D;password  -e MYSQL_USER&#x3D;new_username </span><br><span class="line">-e MYSQL_PASSWORD&#x3D;new_user_password </span><br><span class="line">-e MYSQL_DATABASE&#x3D;user_database  -v &#x2F;usr&#x2F;local&#x2F;docker&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -d mysql:5.7</span><br></pre></td></tr></table></figure><h5 id="预留测试8-0版本-0x3-修改root权限及增加远程访问用户"><a href="#预留测试8-0版本-0x3-修改root权限及增加远程访问用户" class="headerlink" title="预留测试8.0版本 0x3. 修改root权限及增加远程访问用户"></a><del>预留测试8.0版本 0x3. 修改root权限及增加远程访问用户</del></h5><blockquote><p><del>进入docker镜像</del></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql bash </span><br></pre></td></tr></table></figure><blockquote><p><del>登陆mysql</del></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -h 127.0.0.1 -P 3306</span><br><span class="line">##注意：源镜像中未指定clinet用户使用sock连接，必须使用上述参数连接</span><br><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;</span><br></pre></td></tr></table></figure><blockquote><p><del>添加远程登录用户</del></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#39;laocai&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456!&#39;;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;laocai&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure><p>)<br>~~</p><h5 id="使用远程连接测试即可"><a href="#使用远程连接测试即可" class="headerlink" title="使用远程连接测试即可"></a>使用远程连接测试即可</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;在ArchLnix中搭建Docker-mysql持久化学习环境&quot;&gt;&lt;a href=&quot;#在ArchLnix中搭建Docker-mysql持久化学习环境&quot; class=&quot;headerlink&quot; title=&quot;在ArchLnix中搭建Docker mysql持久化学习环
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="编程" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Archlinux" scheme="https://www.fh123.co/tags/Archlinux/"/>
    
      <category term="Linux" scheme="https://www.fh123.co/tags/Linux/"/>
    
      <category term="Docker" scheme="https://www.fh123.co/tags/Docker/"/>
    
      <category term="Mysql" scheme="https://www.fh123.co/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>ArchLinux中单机Kafka学习环境搭建</title>
    <link href="https://www.fh123.co/2021/02/01/Linux%E4%B8%AD%E5%8D%95%E6%9C%BAKafka%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.fh123.co/2021/02/01/Linux%E4%B8%AD%E5%8D%95%E6%9C%BAKafka%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-02-01T01:50:07.000Z</published>
    <updated>2021-02-21T01:13:13.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ArchLinux环境中搭建Kafka单机学习环境"><a href="#ArchLinux环境中搭建Kafka单机学习环境" class="headerlink" title="ArchLinux环境中搭建Kafka单机学习环境"></a>ArchLinux环境中搭建Kafka单机学习环境</h2><h3 id="1-下载Kafka源码"><a href="#1-下载Kafka源码" class="headerlink" title="1.下载Kafka源码"></a>1.下载Kafka源码</h3><p><a href="https://archive.apache.org/dist/kafka/2.7.0/kafka_2.12-2.7.0.tgz">https://archive.apache.org/dist/kafka/2.7.0/kafka_2.12-2.7.0.tgz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &#x2F;&#x2F;解压</span><br><span class="line"> tar zxvf kafka_2.12-2.7.0.tgz &#x2F;opt&#x2F;kafka</span><br><span class="line">&#x2F;&#x2F;安装jdk环境</span><br><span class="line"> pacman -S jdk-openjdk</span><br></pre></td></tr></table></figure><h3 id="2-进入bin目录"><a href="#2-进入bin目录" class="headerlink" title="2.进入bin目录"></a>2.进入bin目录</h3><p>主要的操作都在bin目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;kafka&#x2F;bin</span><br></pre></td></tr></table></figure><h3 id="3-启动-zookeeper"><a href="#3-启动-zookeeper" class="headerlink" title="3.启动 zookeeper"></a>3.启动 zookeeper</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;zookeeper-server-start.sh ..&#x2F;config&#x2F;zookeeper.properties </span><br></pre></td></tr></table></figure><h3 id="4-测试-zookeeper"><a href="#4-测试-zookeeper" class="headerlink" title="4.测试 zookeeper"></a>4.测试 zookeeper</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;zookeeper-shell.sh localhost:2181</span><br></pre></td></tr></table></figure><h3 id="5-启动kafka服务"><a href="#5-启动kafka服务" class="headerlink" title="5.启动kafka服务"></a>5.启动kafka服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;kafka-server-start.sh ..&#x2F;config&#x2F;server.properties </span><br></pre></td></tr></table></figure><blockquote><p><strong>Tips</strong>：修改 server.properties<br>advertised.listeners=PLAINTEXT://本机ip地址:9092<br>host.name=0.0.0.0</p></blockquote><h3 id="6-测试kafka服务"><a href="#6-测试kafka服务" class="headerlink" title="6.测试kafka服务"></a>6.测试kafka服务</h3><h4 id="6-1-创建一个topic"><a href="#6-1-创建一个topic" class="headerlink" title="6.1 创建一个topic"></a>6.1 创建一个topic</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test</span><br></pre></td></tr></table></figure><h4 id="6-2-生产者发送消息"><a href="#6-2-生产者发送消息" class="headerlink" title="6.2 生产者发送消息"></a>6.2 生产者发送消息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;kafka-console-producer.sh --broker-list localhost:9092 --topic test</span><br></pre></td></tr></table></figure><h4 id="6-3-消费者接受消息"><a href="#6-3-消费者接受消息" class="headerlink" title="6.3 消费者接受消息"></a>6.3 消费者接受消息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic test --from-beginning</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ArchLinux环境中搭建Kafka单机学习环境&quot;&gt;&lt;a href=&quot;#ArchLinux环境中搭建Kafka单机学习环境&quot; class=&quot;headerlink&quot; title=&quot;ArchLinux环境中搭建Kafka单机学习环境&quot;&gt;&lt;/a&gt;ArchLinux环境
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="编程" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Archlinux" scheme="https://www.fh123.co/tags/Archlinux/"/>
    
      <category term="Linux" scheme="https://www.fh123.co/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>vscode中golint出现的other declaration of main错误解决</title>
    <link href="https://www.fh123.co/2021/01/19/vscode%E4%B8%ADgolint%E5%87%BA%E7%8E%B0%E7%9A%84other-declaration-of-main%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/"/>
    <id>https://www.fh123.co/2021/01/19/vscode%E4%B8%ADgolint%E5%87%BA%E7%8E%B0%E7%9A%84other-declaration-of-main%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/</id>
    <published>2021-01-19T02:28:05.000Z</published>
    <updated>2021-01-19T02:39:56.839Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>最近在学习Go语言，用Vscode随手在demo目录下写一些片段练习，但是总是出现大量的报错提示。其中最多的是<br>**<em>other declaration of main**</em><br>类型的提示。搜了半天好像全网都没有像我这样的错误，找到这个<a href="https://stackoverflow.com/questions/55684090/is-it-wrong-duplicate-func-main-in-package-main-and-why-it-is-wrong"><strong>帖子</strong></a><br>才明白是我自己的随手写的代码不符合编译要求。所有的xxx_demo.go文件都在一个目录下，每个go文件中都有一个main()的主函数，所以IDE在编译的过程会将多个main()函数合并编译，所以出现错误提示。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>为每个demo建立一个目录，将所在的xxx_demo.go文件移动到所在的目录即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;最近在学习Go语言，用Vscode随手在demo目录下写一些片段练习，但是总是出现大量的报错提示。其中最多的是&lt;br&gt;**&lt;em&gt;other
      
    
    </summary>
    
    
      <category term="编程" scheme="https://www.fh123.co/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="go" scheme="https://www.fh123.co/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>tgbotapi创建Bot时的代理设置</title>
    <link href="https://www.fh123.co/2021/01/12/tgbotapi%E5%88%9B%E5%BB%BABot%E6%97%B6%E7%9A%84%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/"/>
    <id>https://www.fh123.co/2021/01/12/tgbotapi%E5%88%9B%E5%BB%BABot%E6%97%B6%E7%9A%84%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</id>
    <published>2021-01-12T03:51:33.000Z</published>
    <updated>2021-01-12T04:03:55.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用go-telegram-bot-api的代理设置"><a href="#使用go-telegram-bot-api的代理设置" class="headerlink" title="使用go-telegram-bot-api的代理设置"></a>使用go-telegram-bot-api的代理设置</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">proxyUrl, err :&#x3D; url.Parse(&quot;http:&#x2F;&#x2F;127.0.0.1:8001&quot;) &#x2F;&#x2F;设置代理http或sock5</span><br><span class="line">    myClient :&#x3D; &amp;http.Client&#123;Transport: &amp;http.Transport&#123;Proxy: http.ProxyURL(proxyUrl)&#125;&#125; &#x2F;&#x2F;使用代理</span><br><span class="line">    bot, err :&#x3D; tgbotapi.NewBotAPIWithClient(&quot;Telegram Token&quot;, myClient)</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>不能使用tgbotapi的NewBotAPI方法，该方法的传参只能是一个string类型的Token。<br>源码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func NewBotAPI(token string) (*BotAPI, error) &#123;</span><br><span class="line">    return NewBotAPIWithClient(token, APIEndpoint, &amp;http.Client&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际上还是调用的NewBotWithClient(),源码如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">func NewBotAPIWithClient(token, apiEndpoint string, client HttpClient) (*BotAPI, error) &#123;</span><br><span class="line">    bot :&#x3D; &amp;BotAPI&#123;</span><br><span class="line">        Token:           token,</span><br><span class="line">        Client:          client,</span><br><span class="line">        Buffer:          100,</span><br><span class="line">        shutdownChannel: make(chan interface&#123;&#125;),</span><br><span class="line"></span><br><span class="line">        apiEndpoint: apiEndpoint,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    self, err :&#x3D; bot.GetMe()</span><br><span class="line">    if err !&#x3D; nil &#123;</span><br><span class="line">        return nil, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bot.Self &#x3D; self</span><br><span class="line"></span><br><span class="line">    return bot, nil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用go-telegram-bot-api的代理设置&quot;&gt;&lt;a href=&quot;#使用go-telegram-bot-api的代理设置&quot; class=&quot;headerlink&quot; title=&quot;使用go-telegram-bot-api的代理设置&quot;&gt;&lt;/a&gt;使用go-tel
      
    
    </summary>
    
    
      <category term="编程" scheme="https://www.fh123.co/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="go" scheme="https://www.fh123.co/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>使用youtube-dl下载YouTube播放列表</title>
    <link href="https://www.fh123.co/2020/09/12/%E4%BD%BF%E7%94%A8youtube-dl%E4%B8%8B%E8%BD%BDYouTube%E6%92%AD%E6%94%BE%E5%88%97%E8%A1%A8/"/>
    <id>https://www.fh123.co/2020/09/12/%E4%BD%BF%E7%94%A8youtube-dl%E4%B8%8B%E8%BD%BDYouTube%E6%92%AD%E6%94%BE%E5%88%97%E8%A1%A8/</id>
    <published>2020-09-12T02:22:32.000Z</published>
    <updated>2020-09-12T02:41:44.489Z</updated>
    
    <content type="html"><![CDATA[<p>本人是一个重度的音频依赖者，有很多国内的站点因为版权原因不能放松的视频在YouTube上都能找到，但是我又特别喜欢听某些剧集的音频，以前一些比较少的剧集我都是通过Chrome的插件获取到音频地址从而保存为本地的webm然后通过FFmpeg转换为MP3格式（因为要在车上听）。</p><p>现在遇到一个特别喜欢的剧集但是有120多集实在无法人肉通过手动点击的办法一集一集的下载，所以我找到了一个堪称下载神器的<a href="https://github.com/ytdl-org/youtube-dl">youtube-dl</a>工具，youtube-dl参数非常的详细可以支持相当多的下载粒度。值得每个视频搬运工详细的研究。这里我只说一下批量下载剧集的办法。</p><h3 id="1-首先获取剧集的url"><a href="#1-首先获取剧集的url" class="headerlink" title="1.首先获取剧集的url"></a>1.首先获取剧集的url</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">它应该是一个这样的url</span><br><span class="line">https:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;TheLinuxFoundation&#x2F;playlists</span><br></pre></td></tr></table></figure><h3 id="2-命令格式"><a href="#2-命令格式" class="headerlink" title="2.命令格式"></a>2.命令格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl -x --audio-format mp3 -o &#39;%(title)s.%(ext)s&#39; https:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;TheLinuxFoundation&#x2F;playlists</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-1-–audio-format-mp3-保存为MP3格式，具体的流程是先下载一个临时的m4a原文件，然后调用FFmpeg转存为MP3文件。所以一定注意在使用youtube-dl时必须安装了ffmpeg。"><a href="#2-1-–audio-format-mp3-保存为MP3格式，具体的流程是先下载一个临时的m4a原文件，然后调用FFmpeg转存为MP3文件。所以一定注意在使用youtube-dl时必须安装了ffmpeg。" class="headerlink" title="2.1 –audio-format mp3 保存为MP3格式，具体的流程是先下载一个临时的m4a原文件，然后调用FFmpeg转存为MP3文件。所以一定注意在使用youtube-dl时必须安装了ffmpeg。"></a><em>2.1</em> –audio-format mp3 保存为MP3格式，具体的流程是先下载一个临时的m4a原文件，然后调用FFmpeg转存为MP3文件。所以一定注意在使用youtube-dl时必须安装了ffmpeg。</h4><h4 id="2-2-o-‘-title-s-ext-s’-详细参阅-输出格式，如果使用默认参数会出现以剧集名-视频ID的名字为文件名，比如-LINUX教程09-dsdhCGS-mp3-这种命名格式，对于分集比价多的播放列表不利于后期整理。"><a href="#2-2-o-‘-title-s-ext-s’-详细参阅-输出格式，如果使用默认参数会出现以剧集名-视频ID的名字为文件名，比如-LINUX教程09-dsdhCGS-mp3-这种命名格式，对于分集比价多的播放列表不利于后期整理。" class="headerlink" title="2.2 -o ‘%(title)s.%(ext)s’ 详细参阅 输出格式，如果使用默认参数会出现以剧集名+视频ID的名字为文件名，比如  LINUX教程09-dsdhCGS.mp3  这种命名格式，对于分集比价多的播放列表不利于后期整理。"></a><em>2.2</em> -o ‘%(title)s.%(ext)s’ <a href="https://github.com/ytdl-org/youtube-dl#output-template">详细参阅</a> 输出格式，如果使用默认参数会出现以剧集名+视频ID的名字为文件名，比如  LINUX教程09-dsdhCGS.mp3  这种命名格式，对于分集比价多的播放列表不利于后期整理。</h4><p>我现在挂在google cloud的虚拟机上下载，下载速度能跑到15M左右.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本人是一个重度的音频依赖者，有很多国内的站点因为版权原因不能放松的视频在YouTube上都能找到，但是我又特别喜欢听某些剧集的音频，以前一些比较少的剧集我都是通过Chrome的插件获取到音频地址从而保存为本地的webm然后通过FFmpeg转换为MP3格式（因为要在车上听）。
      
    
    </summary>
    
    
      <category term="音视频" scheme="https://www.fh123.co/categories/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
    
      <category term="YouTube" scheme="https://www.fh123.co/tags/YouTube/"/>
    
      <category term="FFmpeg" scheme="https://www.fh123.co/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>wordpress内网服务器设置技巧</title>
    <link href="https://www.fh123.co/2020/08/26/wordpress%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BE%E7%BD%AE%E6%8A%80%E5%B7%A7/"/>
    <id>https://www.fh123.co/2020/08/26/wordpress%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BE%E7%BD%AE%E6%8A%80%E5%B7%A7/</id>
    <published>2020-08-26T07:25:21.000Z</published>
    <updated>2020-08-26T07:35:48.436Z</updated>
    
    <content type="html"><![CDATA[<h3 id="wordpress内网服务器设置技巧点。"><a href="#wordpress内网服务器设置技巧点。" class="headerlink" title="wordpress内网服务器设置技巧点。"></a>wordpress内网服务器设置技巧点。</h3><p>我们希望使用内网服务器采集网络中相关的信息到wordpress中然后通过wordpress再生成静态页面，通过rsync同步到外网去。然后内网服务器也需要向外网的专门负责动态搜索的服务器同步自己数据库。</p><p>但是在实际的生产过程中我们发现在内网服务器中需要将后天的网站地址修改为相应的域名。<br>技巧点在于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一定要修改内网服务器的hosts文件</span><br><span class="line">127.0.0.1  xxx.xxx.xxx #实际域名</span><br></pre></td></tr></table></figure><p>往往很多人会忽略这个点。</p><p>设置后可以完成生成静态页面中实际指向的是真实域名，同步后即可使用，不用二次修改数据库和静态文件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;wordpress内网服务器设置技巧点。&quot;&gt;&lt;a href=&quot;#wordpress内网服务器设置技巧点。&quot; class=&quot;headerlink&quot; title=&quot;wordpress内网服务器设置技巧点。&quot;&gt;&lt;/a&gt;wordpress内网服务器设置技巧点。&lt;/h3&gt;&lt;
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="wordpress" scheme="https://www.fh123.co/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>Hexo dawn主题安装Mermaid支持</title>
    <link href="https://www.fh123.co/2020/08/24/dawn%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85Mermaid%E6%94%AF%E6%8C%81/"/>
    <id>https://www.fh123.co/2020/08/24/dawn%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85Mermaid%E6%94%AF%E6%8C%81/</id>
    <published>2020-08-24T10:22:35.000Z</published>
    <updated>2020-08-25T01:14:22.141Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mermaid介绍"><a href="#Mermaid介绍" class="headerlink" title="Mermaid介绍"></a>Mermaid介绍</h2><p>mermaid是一个非常优秀的JS渲染流程图、甘特图、时序图的JS库可以非常方便的嵌入到各种的Markdow编辑器之中。</p><p>网上也有很多教程教大家将mermaid嵌入到hexo中，但是大部分的教程都是基于hexo的主题是.swig作为模板文件的。</p><p>本blog使用的是<a href="http://cofess.github.io/">dawn</a>主题，这个主题非常的简介而且集成了很多的功能，可以看出作者还是非常的用心的，但是作者使用的.ejs作为模板。这样就使得嵌入mermaid的时候有了些许的不同。</p><h3 id="第一步-npm-安装-mermaid"><a href="#第一步-npm-安装-mermaid" class="headerlink" title="第一步 npm 安装 mermaid"></a>第一步 npm 安装 mermaid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-mermaid-diagrams --save</span><br><span class="line">或</span><br><span class="line">cnpm install hexo-filter-mermaid-diagrams --save</span><br></pre></td></tr></table></figure><h3 id="第二步-手动增加一个-mermaid-ejs文件"><a href="#第二步-手动增加一个-mermaid-ejs文件" class="headerlink" title="第二步 手动增加一个 mermaid.ejs文件"></a>第二步 手动增加一个 mermaid.ejs文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在themes&#x2F;dawn&#x2F;layout&#x2F;_script&#x2F;下新建一个mermaid.ejs文件</span><br><span class="line">内容为</span><br><span class="line">&lt;% if (theme.mermaid.enable) &#123; %&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;mermaid@&lt;%- theme.mermaid.version %&gt;&#x2F;dist&#x2F;mermaid.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h3 id="第三步-修改主题目录下的-config-yml文件"><a href="#第三步-修改主题目录下的-config-yml文件" class="headerlink" title="第三步 修改主题目录下的_config.yml文件"></a>第三步 修改主题目录下的_config.yml文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">文件末尾增加</span><br><span class="line"></span><br><span class="line">  # mermaid chart</span><br><span class="line">mermaid: ## mermaid url https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid</span><br><span class="line">  enable: true  # default true</span><br><span class="line">  version: &quot;8.7.0&quot; # default v7.1.2,可以手动修改为最新的版本，不然还是按照默认7.1.2版本。</span><br><span class="line">  options:  # find more api options from https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid&#x2F;blob&#x2F;master&#x2F;src&#x2F;mermaidAPI.js</span><br><span class="line">       #startOnload: true  &#x2F;&#x2F; default true</span><br></pre></td></tr></table></figure><h3 id="第四步-重新生成页面"><a href="#第四步-重新生成页面" class="headerlink" title="第四步 重新生成页面"></a>第四步 重新生成页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d </span><br></pre></td></tr></table></figure><h3 id="Tips-注意mermaid的语法问题-一定要使用"><a href="#Tips-注意mermaid的语法问题-一定要使用" class="headerlink" title="Tips.注意mermaid的语法问题,一定要使用"></a>Tips.注意mermaid的语法问题,一定要使用</h3><pre><code>``` mermaid 包裹</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Mermaid介绍&quot;&gt;&lt;a href=&quot;#Mermaid介绍&quot; class=&quot;headerlink&quot; title=&quot;Mermaid介绍&quot;&gt;&lt;/a&gt;Mermaid介绍&lt;/h2&gt;&lt;p&gt;mermaid是一个非常优秀的JS渲染流程图、甘特图、时序图的JS库可以非常方便的嵌
      
    
    </summary>
    
    
      <category term="blog" scheme="https://www.fh123.co/categories/blog/"/>
    
    
      <category term="hexo" scheme="https://www.fh123.co/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu中配置Mail命令使用外部STMP发送邮件</title>
    <link href="https://www.fh123.co/2020/08/17/Ubuntu%E4%B8%AD%E9%85%8D%E7%BD%AEMail%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8STMP%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>https://www.fh123.co/2020/08/17/Ubuntu%E4%B8%AD%E9%85%8D%E7%BD%AEMail%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8STMP%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</id>
    <published>2020-08-17T04:15:43.000Z</published>
    <updated>2020-08-17T04:37:03.645Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu中配置mail命令使用外部的stmp发送邮件"><a href="#Ubuntu中配置mail命令使用外部的stmp发送邮件" class="headerlink" title="Ubuntu中配置mail命令使用外部的stmp发送邮件"></a>Ubuntu中配置mail命令使用外部的stmp发送邮件</h1><p>因为在日常运维过程中我们需要使用mail命令，实时的发送服务器的一些状态参数或者监控服务器的运行状态，所以在mail的日常应用中还是非常的高频，鉴于我们做的站点大部分不开启自己本身的邮箱服务所以我们还是尽量使用外部的stmp邮箱服务来完成我们这个发信过程。</p><p>！！！注意！！！Ubuntu于其他发行版的不同，需要注意安装mail命令和相关软件包时的几个坑</p><h3 id="1-安装heirloom-mailx-mailutils"><a href="#1-安装heirloom-mailx-mailutils" class="headerlink" title="1.安装heirloom-mailx mailutils"></a>1.安装heirloom-mailx mailutils</h3><p>需要将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;cz.archive.ubuntu.com&#x2F;ubuntu xenial main universe</span><br></pre></td></tr></table></figure><p>添加到/etc/apt/sources.list中并执行apt-get update后再apt install heirloom-mailx mailutils</p><p>因为heirloom-mailx并不在官方的源内。</p><h3 id="2-修改配置文件-etc-s-nail-rc"><a href="#2-修改配置文件-etc-s-nail-rc" class="headerlink" title="2.修改配置文件 /etc/s-nail.rc"></a>2.修改配置文件 /etc/s-nail.rc</h3><p>添加如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set from&#x3D;xxx@xxx.com                  #设置发送邮箱</span><br><span class="line">set smtp&#x3D;smtps:&#x2F;&#x2F;smtp.xxx.com         #设置smtp服务器和端口</span><br><span class="line">set smtp-auth-user&#x3D;cm@xxx.com         #设置用户名，记得加域名啊</span><br><span class="line">set smtp-auth-password&#x3D;xxxxx          #邮箱授权码</span><br><span class="line">set smtp-auth&#x3D;xxx@xxx.com             #用户名</span><br></pre></td></tr></table></figure><h3 id="3-修改服务器的主机名称"><a href="#3-修改服务器的主机名称" class="headerlink" title="3.修改服务器的主机名称"></a>3.修改服务器的主机名称</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&gt; hostname</span><br><span class="line">xxxxx</span><br></pre></td></tr></table></figure><p>一般VPS的名称大部分为一个无序字符串组成，这个字符串在发信时会不符合目的邮件服务器的要求一般会出现550错误，126会出现以下的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;&lt; 550 MI:IMF 126 mx2,IMmowACXz0un8TlfJMPIAg--.47921S3 1597632936 http:&#x2F;&#x2F;mail.163.com&#x2F;help&#x2F;help_spam_16.htm?ip&#x3D;173.82.56.165&amp;hostid&#x3D;mx2&amp;time&#x3D;1597632936</span><br></pre></td></tr></table></figure><p>google也是会出现类似的550错误，这个错误是因为我们的主机名不符合邮件服务器的要求，将你的主机名修改xxx.com类似的形式即可发信成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostname xxx.xxx.com</span><br><span class="line">#临时修改主机名，重启后恢复原字符串主机名</span><br></pre></td></tr></table></figure><p>或者可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;hostname</span><br><span class="line">#永久修改为xxx.xxx.com 注意需reboot重启。</span><br></pre></td></tr></table></figure><h3 id="4-注意尽量使用邮箱给的授权码，不要使用邮箱的登录码"><a href="#4-注意尽量使用邮箱给的授权码，不要使用邮箱的登录码" class="headerlink" title="4.注意尽量使用邮箱给的授权码，不要使用邮箱的登录码"></a>4.注意尽量使用邮箱给的授权码，不要使用邮箱的登录码</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ubuntu中配置mail命令使用外部的stmp发送邮件&quot;&gt;&lt;a href=&quot;#Ubuntu中配置mail命令使用外部的stmp发送邮件&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu中配置mail命令使用外部的stmp发送邮件&quot;&gt;&lt;/a&gt;Ub
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://www.fh123.co/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://www.fh123.co/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>MySQL8.0x的主从同步设置</title>
    <link href="https://www.fh123.co/2020/08/14/mysql8.0.x%E7%9A%84%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E8%AE%BE%E7%BD%AE/"/>
    <id>https://www.fh123.co/2020/08/14/mysql8.0.x%E7%9A%84%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E8%AE%BE%E7%BD%AE/</id>
    <published>2020-08-14T02:47:37.000Z</published>
    <updated>2020-08-25T01:14:22.141Z</updated>
    
    <content type="html"><![CDATA[<p>手动导出主数据库sql文件导入到从数据库中保持数据和表结构的一致性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump　-t　数据库名　-uroot　-p　&gt;　xxx.sql　</span><br></pre></td></tr></table></figure><p>主数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;create user &#39;syncdata&#39;@&#39;localhost&#39; identified by &#39;1234567&#39;;</span><br><span class="line">mysql&gt;grant replication slave on *.* to &#39;syncdata&#39;@&#39;127.0.0.1&#39;;</span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000001 |     1454 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br></pre></td></tr></table></figure><p>从数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql --ssl-mode&#x3D;DISABLED -h172.17.0.2 -uroot -p123456 --get-server-public-key</span><br><span class="line">#先获取主数据库秘钥，因为mysql修改了验证方式，不然会报错。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host&#x3D;&#39;ip&#39;, master_port&#x3D;16123, master_user&#x3D;&#39;syncdata&#39;,master_password&#x3D;&#39;1234567&#39;,master_log_file&#x3D;&#39;mysql-bin.000001&#39;;</span><br><span class="line">mysql&gt; show slave status\G; #查看从数据库状态</span><br></pre></td></tr></table></figure><p>指定数据库同步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">从服务器</span><br><span class="line">mysql&gt; change replication filter replicate_do_db&#x3D;(base_name);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;手动导出主数据库sql文件导入到从数据库中保持数据和表结构的一致性。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="MySQL" scheme="https://www.fh123.co/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Nginx针对Wordpress做动静分离</title>
    <link href="https://www.fh123.co/2020/08/13/Nginx%E9%92%88%E5%AF%B9Wordpress%E5%81%9A%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/"/>
    <id>https://www.fh123.co/2020/08/13/Nginx%E9%92%88%E5%AF%B9Wordpress%E5%81%9A%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/</id>
    <published>2020-08-13T04:32:21.000Z</published>
    <updated>2020-08-13T04:52:40.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx-作高性能反向代理服务器"><a href="#nginx-作高性能反向代理服务器" class="headerlink" title="nginx 作高性能反向代理服务器"></a>nginx 作高性能反向代理服务器</h2><p>nginx作为高性能的web服务器常常用于各种的反向代理和负载均衡服务器，但是今天遇到一个小小的问题为wordpress做一个动静分离需求。</p><p>首先发现这个wordpress使用的url传参并不是使用的访问某个.php页面提交参数，而是直接将参数传给根域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.1.1&#x2F;?s&#x3D;xxx</span><br></pre></td></tr></table></figure><p>如果传统的简单访问某个动态语言编写的页面nginx是非常简单直接写一个类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ *\.php $ &#123;</span><br><span class="line">         proxy_pass http:&#x2F;&#x2F;server_group;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>就可以将参数传递给了动态服务器。</p><p>但是基于这个wordpress的需求我们需要将这么写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> location &#x2F; &#123;</span><br><span class="line">                index index.html index.htm;</span><br><span class="line">                proxy_pass http:&#x2F;&#x2F;html_server_group;</span><br><span class="line">                    if ($query_string ~* &quot;s&#x3D;(.*)$&quot;)&#123;</span><br><span class="line">                        proxy_pass http:&#x2F;&#x2F;server_group;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">#这里$query_string是传参字符串，s是wp系统中指定的传参变量，（.*）正则表示接受后面所有的字符串，如果多个变量以此类推。</span><br></pre></td></tr></table></figure><p>这里我们因为实验环境，使用了ngrok把内网服务器映射到了公网，但是我们的nginx代理服务器在google vps上，这时需要在nginx中使用dns解析内网域名。</p><p>首先在conf中写入dns解析服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resolver 8.8.8.8; #使用google的dns解析域名</span><br></pre></td></tr></table></figure><p>然后写location /为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">                index index.html index.htm;</span><br><span class="line">                proxy_pass http:&#x2F;&#x2F;html_server_group;</span><br><span class="line">                set $serverin e338a4fb64e2.ngrok.io; #定义serverin变量为映射域名</span><br><span class="line">                    if ($query_string ~* &quot;s&#x3D;(.*)$&quot;)&#123;</span><br><span class="line">                       proxy_pass http:&#x2F;&#x2F;$serverin; </span><br><span class="line">                        &#125;</span><br><span class="line">                     &#125;</span><br></pre></td></tr></table></figure><p>测试通过</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nginx-作高性能反向代理服务器&quot;&gt;&lt;a href=&quot;#nginx-作高性能反向代理服务器&quot; class=&quot;headerlink&quot; title=&quot;nginx 作高性能反向代理服务器&quot;&gt;&lt;/a&gt;nginx 作高性能反向代理服务器&lt;/h2&gt;&lt;p&gt;nginx作为高性能
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="nginx" scheme="https://www.fh123.co/tags/nginx/"/>
    
      <category term="wordpress" scheme="https://www.fh123.co/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>Google虚拟机vps的本地化SSH登陆设置</title>
    <link href="https://www.fh123.co/2020/08/11/Google%E8%99%9A%E6%8B%9F%E6%9C%BAvps%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%8C%96SSH%E7%99%BB%E9%99%86%E8%AE%BE%E7%BD%AE/"/>
    <id>https://www.fh123.co/2020/08/11/Google%E8%99%9A%E6%8B%9F%E6%9C%BAvps%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%8C%96SSH%E7%99%BB%E9%99%86%E8%AE%BE%E7%BD%AE/</id>
    <published>2020-08-11T00:50:51.000Z</published>
    <updated>2020-08-11T01:00:06.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Google-cloud-VPS-本地使用SSH登陆"><a href="#Google-cloud-VPS-本地使用SSH登陆" class="headerlink" title="Google cloud VPS 本地使用SSH登陆"></a>Google cloud VPS 本地使用SSH登陆</h2><p>昨天发现google cloud上发现还有2K+的余额，正好最近在学习nginx的负载平衡，拿来做个vps来做nginx的服务器来实例化一下。vps做好后结果发现本地ssh登陆是要做一些小小的设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -f googlekey   </span><br><span class="line">#创建一个googlekey公私钥</span><br><span class="line">cat googlekey.pub</span><br><span class="line">#输出公钥</span><br></pre></td></tr></table></figure><p>打开google cloud的元数据–ssh–修改–添加一项</p><p>将公钥输入保存</p><p>本地终端中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -i googlekey username@ip</span><br><span class="line">#username这时是在元数据中显示的name</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Google-cloud-VPS-本地使用SSH登陆&quot;&gt;&lt;a href=&quot;#Google-cloud-VPS-本地使用SSH登陆&quot; class=&quot;headerlink&quot; title=&quot;Google cloud VPS 本地使用SSH登陆&quot;&gt;&lt;/a&gt;Google c
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Google" scheme="https://www.fh123.co/tags/Google/"/>
    
      <category term="VPS" scheme="https://www.fh123.co/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>Pyspider+python-Wordpress-xmlrpc爬取自动发布</title>
    <link href="https://www.fh123.co/2020/08/08/Pyspider-python-Wordpress-xmlrpc%E7%88%AC%E5%8F%96%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/"/>
    <id>https://www.fh123.co/2020/08/08/Pyspider-python-Wordpress-xmlrpc%E7%88%AC%E5%8F%96%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/</id>
    <published>2020-08-08T03:06:40.000Z</published>
    <updated>2020-08-08T03:11:58.806Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Pyspider-python-wordpress-xmlrpc-爬取站点自动发布"><a href="#Pyspider-python-wordpress-xmlrpc-爬取站点自动发布" class="headerlink" title="Pyspider+python-wordpress-xmlrpc 爬取站点自动发布"></a>Pyspider+python-wordpress-xmlrpc 爬取站点自动发布</h2><p>Pyspider内代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- encoding: utf-8 -*-</span><br><span class="line"># Created on 2020-08-07 01:19:41</span><br><span class="line"># Project: xxxxxx</span><br><span class="line"></span><br><span class="line">from pyspider.libs.base_handler import *</span><br><span class="line">import re</span><br><span class="line">DIR_PATH &#x3D; &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;mystaticsite&#x2F;downimages&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">#coding:utf-8</span><br><span class="line">from wordpress_xmlrpc import Client, WordPressPost</span><br><span class="line">from wordpress_xmlrpc.methods.posts import GetPosts, NewPost</span><br><span class="line">from wordpress_xmlrpc.methods.users import GetUserInfo</span><br><span class="line">from wordpress_xmlrpc.methods import posts</span><br><span class="line">from wordpress_xmlrpc.methods import taxonomies</span><br><span class="line">from wordpress_xmlrpc import WordPressTerm</span><br><span class="line">from wordpress_xmlrpc.compat import xmlrpc_client</span><br><span class="line">from wordpress_xmlrpc.methods import media, posts</span><br><span class="line"></span><br><span class="line">#import importlib</span><br><span class="line">#importlib.reload(sys)</span><br><span class="line">#sys.setdefaultencoding(&#39;utf-8&#39;) #python3下不支持该用法</span><br><span class="line"></span><br><span class="line">class Handler(BaseHandler):</span><br><span class="line">    crawl_config &#x3D; &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    def __init__(self):#继承Deal类</span><br><span class="line">        self.deal &#x3D; Deal()</span><br><span class="line">        </span><br><span class="line">    @every(minutes&#x3D;24 * 60)</span><br><span class="line">    def on_start(self):</span><br><span class="line">        self.crawl(&#39;https:&#x2F;&#x2F;www.xxxxxx.com&#x2F;news&#x2F;index.html&#39;, callback&#x3D;self.index_page)</span><br><span class="line"></span><br><span class="line">    @config(age&#x3D;10 * 24 * 60 * 60)</span><br><span class="line">    def index_page(self, response):</span><br><span class="line">        for each in response.doc(&#39;h3 &gt; a&#39;).items():</span><br><span class="line">            self.crawl(each.attr.href, callback&#x3D;self.detail_page)</span><br><span class="line"></span><br><span class="line">    @config(priority&#x3D;2)</span><br><span class="line">    def detail_page(self, response):</span><br><span class="line">        title &#x3D; response.doc(&#39;h1&#39;).text(),</span><br><span class="line">        tmp_text &#x3D; response.doc(&#39;.loadimg.fadeInUp &gt; p&#39;).text(),</span><br><span class="line">        tmp_text &#x3D; &#39;&#39;.join(str(tmp_text)) #将元组数据转换为字符串</span><br><span class="line">        tmp_text &#x3D; tmp_text.replace(&quot;下面我们一起来看看她最新的番号作品吧！&quot;,&quot;&quot;) </span><br><span class="line">        new_text &#x3D; tmp_text.replace(&quot;(&#39;  &quot;,&quot;&quot;)#清洗掉原文中的标记</span><br><span class="line">        </span><br><span class="line">        for each in response.doc(&#39;.loadimg.fadeInUp &gt; p &gt; img&#39;).items():</span><br><span class="line">           img_url &#x3D; each.attr.src        </span><br><span class="line">           if (&quot;xxxxxx&quot; in img_url): #过滤掉不在xxxxxx站点上的图片连接</span><br><span class="line">               split_url &#x3D; img_url.split(&#39;&#x2F;&#39;)</span><br><span class="line">               dir_name &#x3D; split_url[-2] + &#39;&#x2F;&#39;</span><br><span class="line">               dir_path &#x3D; self.deal.mkDir(dir_name)</span><br><span class="line">               file_name &#x3D; split_url[-1]</span><br><span class="line">               relativpath &#x3D; &#39;&lt;img src&#x3D;&quot;&#x2F;downimages&#x2F;&#39; + dir_name + file_name + &#39;&quot;&gt;&lt;br&gt;&#39;#构建图片显示的相对路径</span><br><span class="line">               new_text &#x3D; relativpath + new_text #将图片插入文章头部</span><br><span class="line">               self.crawl(img_url,callback&#x3D;self.save_img, save&#x3D;&#123;&#39;dir_path&#39;:dir_path ,&#39;file_name&#39;:file_name&#125;)</span><br><span class="line">        title &#x3D; &#39;&#39;.join(str(title)) </span><br><span class="line">        title &#x3D; title.replace(&quot;(&#39;&quot;,&quot;&quot;)</span><br><span class="line">        title &#x3D; title.replace(&quot;&#39;,)&quot;,&quot;&quot;)</span><br><span class="line">        wp &#x3D; Client(&#39;http:&#x2F;&#x2F;server&#x2F;xmlrpc.php&#39;, &#39;username&#39;, &#39;password&#39;)</span><br><span class="line">        post &#x3D; WordPressPost()</span><br><span class="line">        post.title &#x3D; title</span><br><span class="line">        post.content &#x3D; new_text</span><br><span class="line">        post.post_status &#x3D; &#39;publish&#39;</span><br><span class="line">        post.id &#x3D; wp.call(posts.NewPost(post))</span><br><span class="line">        #print(&quot;爬取注入:&quot;+ post.id + &quot;post.title&quot;)</span><br><span class="line">     </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    def save_img(self,response): #保存图片</span><br><span class="line">        content &#x3D; response.content</span><br><span class="line">        dir_path &#x3D; response.save[&#39;dir_path&#39;]</span><br><span class="line">        file_name &#x3D; response.save[&#39;file_name&#39;]</span><br><span class="line">        file_path &#x3D; dir_path + &#39;&#x2F;&#39; + file_name </span><br><span class="line">        self.deal.saveImg(content,file_path)</span><br><span class="line"> </span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">class Deal:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.path &#x3D; DIR_PATH</span><br><span class="line">        if not self.path.endswith(&#39;&#x2F;&#39;):</span><br><span class="line">            self.path &#x3D; self.path + &#39;&#x2F;&#39;</span><br><span class="line">        if not os.path.exists(self.path):</span><br><span class="line">            os.makedirs(self.path)</span><br><span class="line"></span><br><span class="line">    def mkDir(self, path):</span><br><span class="line">        path &#x3D; path.strip()</span><br><span class="line">        dir_path &#x3D; self.path + path</span><br><span class="line">        exists &#x3D; os.path.exists(dir_path)</span><br><span class="line">        if not exists:</span><br><span class="line">            os.makedirs(dir_path)</span><br><span class="line">            return dir_path</span><br><span class="line">        else:</span><br><span class="line">            return dir_path</span><br><span class="line"></span><br><span class="line">    def saveImg(self, content, path):</span><br><span class="line">        f &#x3D; open(path, &#39;wb&#39;)</span><br><span class="line">        f.write(content)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line">    def saveBrief(self, content, dir_path, name):</span><br><span class="line">        file_name &#x3D; dir_path + &quot;&#x2F;&quot; + name + &quot;.txt&quot;</span><br><span class="line">        f &#x3D; open(file_name, &quot;w+&quot;)</span><br><span class="line">        f.write(content.encode(&#39;utf-8&#39;))</span><br><span class="line"></span><br><span class="line">    def getExtension(self, url):</span><br><span class="line">        extension &#x3D; url.split(&#39;.&#39;)[-1]</span><br><span class="line">        return extension</span><br><span class="line"></span><br><span class="line">#        return &#123;</span><br><span class="line">#            &quot;title&quot;: title,</span><br><span class="line">#            &quot;contenttext&quot;: contenttext,</span><br><span class="line">#            </span><br><span class="line">#        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Pyspider-python-wordpress-xmlrpc-爬取站点自动发布&quot;&gt;&lt;a href=&quot;#Pyspider-python-wordpress-xmlrpc-爬取站点自动发布&quot; class=&quot;headerlink&quot; title=&quot;Pyspider+p
      
    
    </summary>
    
    
      <category term="编程" scheme="https://www.fh123.co/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="wordpress" scheme="https://www.fh123.co/tags/wordpress/"/>
    
      <category term="pyspider" scheme="https://www.fh123.co/tags/pyspider/"/>
    
  </entry>
  
  <entry>
    <title>高负载web站点设计 (一)</title>
    <link href="https://www.fh123.co/2020/08/05/%E9%AB%98%E8%B4%9F%E8%BD%BDweb%E7%AB%99%E7%82%B9%E8%AE%BE%E8%AE%A1/"/>
    <id>https://www.fh123.co/2020/08/05/%E9%AB%98%E8%B4%9F%E8%BD%BDweb%E7%AB%99%E7%82%B9%E8%AE%BE%E8%AE%A1/</id>
    <published>2020-08-05T06:08:38.000Z</published>
    <updated>2020-08-24T03:57:54.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-负载平衡服务器"><a href="#A-负载平衡服务器" class="headerlink" title="A.负载平衡服务器"></a>A.负载平衡服务器</h2><ul><li>A.1. ngnix反向代理服务根据B服务组的最短时间或负载来自动均衡。</li></ul><h2 id="B-静态页面服务器集群"><a href="#B-静态页面服务器集群" class="headerlink" title="B.静态页面服务器集群"></a>B.静态页面服务器集群</h2><h3 id="b-1-nginx-WEB业务集群"><a href="#b-1-nginx-WEB业务集群" class="headerlink" title="b.1. nginx WEB业务集群"></a>b.1. nginx WEB业务集群</h3><ul><li>使用rsync服务同步C.1.服务器生成的静态页面和相关的静态资源。（扩展思路：将GIF，JPG等静态资源单独使用dfs服务器分流）</li></ul><h2 id="C-内网动态服务器"><a href="#C-内网动态服务器" class="headerlink" title="C.内网动态服务器"></a>C.内网动态服务器</h2><h3 id="c-1-Wordpress内容生产服务器"><a href="#c-1-Wordpress内容生产服务器" class="headerlink" title="c.1.  Wordpress内容生产服务器"></a>c.1.  Wordpress内容生产服务器</h3><ul><li><p>wordpress服务器使用wp2static插件生成静态页面，wp2static插件可以识别之前生成的页面从而减少服务器负载。</p></li><li><p>wordpress服务器使用inonifywait脚本监控wp2static插件生成的静态页面目录，如果产生文件的变更（创建、删除、修改、移动）和目录结构的变更后，则通过rsync服务器同步远程服务器。</p></li></ul><h3 id="c-2-Pyspider爬虫服务器"><a href="#c-2-Pyspider爬虫服务器" class="headerlink" title="c.2.   Pyspider爬虫服务器"></a>c.2.   Pyspider爬虫服务器</h3><ul><li>Pyspider爬虫框架爬取需要的数据</li><li>安装python-wordpress-xmlrpc库， 使用wordpress的rpc服务接受Pyspider爬取经过清洗后的数据发布到wordpress服务器。</li></ul><pre class="mermaid">graph TDA[用户] -->|访问| B((负载平衡服务器))B --> |用户搜索动作|C{动态服务器}B --> |静态页面|D{静态服务器组}D -->|权重平衡| E[nginx 1]D -->|权重平衡| F[ngnix 2]D -->|权重平衡| I[ngnix 3]D -.-|内网服务器组|G[WP内容生产发布服务器]G -.-|爬取自动发布|H(Pyspider服务器)G -->|MySQL主从同步|C</pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;A-负载平衡服务器&quot;&gt;&lt;a href=&quot;#A-负载平衡服务器&quot; class=&quot;headerlink&quot; title=&quot;A.负载平衡服务器&quot;&gt;&lt;/a&gt;A.负载平衡服务器&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;A.1. ngnix反向代理服务根据B服务组的最短时间或负载来自动均衡。
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="nginx" scheme="https://www.fh123.co/tags/nginx/"/>
    
      <category term="Ubuntu" scheme="https://www.fh123.co/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>rsync+inofity内网向外网同步数据(一)</title>
    <link href="https://www.fh123.co/2020/08/03/rsync-inofity%E5%86%85%E7%BD%91%E5%90%91%E5%A4%96%E7%BD%91%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE/"/>
    <id>https://www.fh123.co/2020/08/03/rsync-inofity%E5%86%85%E7%BD%91%E5%90%91%E5%A4%96%E7%BD%91%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE/</id>
    <published>2020-08-03T03:22:53.000Z</published>
    <updated>2020-08-12T06:41:33.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计要求"><a href="#设计要求" class="headerlink" title="设计要求"></a>设计要求</h2><ul><li>内网web服务器生成html页面</li><li>内网向外网同步生成的html页面和目录</li><li>外网服务器纯静态资源访问</li></ul><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><ul><li>内网 Ubuntu 20.x + Ngnix + PHP + Mysql + Wordpress</li><li>外网 Ubuntu 20.x + Ngnix </li></ul><h3 id="外网服务器配置"><a href="#外网服务器配置" class="headerlink" title="外网服务器配置"></a>外网服务器配置</h3><p>外网服务器必须提供rsync –daemon服务以监听内网服务器发出的同步指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[123]</span><br><span class="line">  comment &#x3D; 123 static html files server</span><br><span class="line">    path &#x3D; &#x2F;var&#x2F;www&#x2F;staichtml&#x2F;</span><br><span class="line">    use chroot &#x3D; no</span><br><span class="line">    max connections&#x3D;20</span><br><span class="line">    lock file &#x3D; &#x2F;var&#x2F;lock&#x2F;rsyncd</span><br><span class="line">    read only &#x3D; no</span><br><span class="line">  write only &#x3D; no</span><br><span class="line">    list &#x3D; yes</span><br><span class="line">    uid &#x3D; rsync</span><br><span class="line">    gid &#x3D; rsync</span><br><span class="line">  auth users &#x3D; rsync_clint</span><br><span class="line">  secrets file &#x3D; &#x2F;etc&#x2F;rsyncd.secrets</span><br><span class="line">    strict modes &#x3D; yes</span><br><span class="line">  port&#x3D;873</span><br><span class="line">  pid file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.pid</span><br><span class="line">  log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log</span><br><span class="line">  log format &#x3D; %t %a %m %f %b</span><br><span class="line">    ignore errors &#x3D; yes</span><br><span class="line">    ignore nonreadable &#x3D; yes</span><br><span class="line">    transfer logging &#x3D; yes</span><br><span class="line">    timeout &#x3D; 600</span><br><span class="line">    refuse options &#x3D; checksum dry-run</span><br><span class="line">    dont compress &#x3D; *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建 /etc/rsyncd.secrets 并 chmod 600 权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync_clint:密码123</span><br></pre></td></tr></table></figure><p>添加一个系统用户为rsync的用户 <em>该用户不具备登录权限</em></p><pre><code>&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;useradd -s &amp;#x2F;sbin&amp;#x2F;nologin -M rsync&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre><p><strong>！！！注意！！！必须 chmod 777 /var/www/staichtml/ 在实际操作中发现没有x权限rsync服务无法写入文件</strong></p><h3 id="内网服务器配置"><a href="#内网服务器配置" class="headerlink" title="内网服务器配置"></a>内网服务器配置</h3><p><em>略过相关web服务配置</em><br>创建 /etc/rsyncd.secrets 并 chmod 600 权限，仅存放密码使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码123</span><br></pre></td></tr></table></figure><p>安装apt install inofity-tool</p><p>编写简单实现的.sh文件并 chmod +x xxxx.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">##测试代码：</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">src&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;mystaticsite&#x2F; #同步目录路径</span><br><span class="line">ip&#x3D;111.111.111.111</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;inotifywait -rm  --timefmt &#39;%d&#x2F;%m&#x2F;%y %H:%M&#39; --format &#39;%T %w%f%e&#39; -e modify,delete,create,attrib,move $src | while read file</span><br><span class="line">   do</span><br><span class="line">     rsync -avz --delete --progress $src rsync_clint@$ip::123 --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br><span class="line">    echo &quot;$&#123;file&#125; was rsynced&quot; &gt;&gt; &#x2F;tmp&#x2F;rsync.log 2&gt;&amp;1</span><br><span class="line">   done</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">！！！注意！！！</span><br><span class="line">必须将$src的位置写在连接之前不能放在连接之后，不然外网服务器无法接受到文件。</span><br><span class="line">这一点与网上很多教程向左，卡了我两天多的时间才发现的:(</span><br></pre></td></tr></table></figure><h3 id="生产环境代码："><a href="#生产环境代码：" class="headerlink" title="生产环境代码："></a>生产环境代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">src&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F; #同步目录路径</span><br><span class="line">user&#x3D;rsync_clint</span><br><span class="line">ip1&#x3D;7xx.xxx.xxx.xxx</span><br><span class="line">ip2&#x3D;1xx.xx.xxx.xx</span><br><span class="line">des&#x3D;123</span><br><span class="line">pswfile&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br><span class="line"></span><br><span class="line">cd $&#123;src&#125;</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;inotifywait -rmq  --format &#39;%Xe %w%f&#39; -e modify,delete,create,attrib,close_write,move .&#x2F; | while read file</span><br><span class="line">   do</span><br><span class="line">      INO_EVENT&#x3D;$(echo $file | awk&#39;&#123;print $1&#125;&#39;)</span><br><span class="line">      INO_FILE&#x3D;$(echo $file | awk&#39;&#123;print $2&#125;&#39;)</span><br><span class="line">      echo &quot;----------------$&#123;data&#125;-----------------&quot;</span><br><span class="line">      echo $file</span><br><span class="line">      </span><br><span class="line">      if [[$INO_EVENT &#x3D;~ &#39;CREATE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MODIFY&#39;]] || [[$INO_EVENT &#x3D;~ &#39;CLOSE_WRITE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MOVE_TO&#39;]]</span><br><span class="line">      then</span><br><span class="line">          echo &#39;Creat or Modify or Close_write or Moved_to&#39;</span><br><span class="line">          rsync -avzcR --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class="line">          rsync -avzcR --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125; </span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">      if [[$INO_EVENT &#x3D;~ &#39;DELETE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MOVE_FROM&#39;]]</span><br><span class="line">      then</span><br><span class="line">          echo &#39;Delete or Moved_from&#39;</span><br><span class="line">          rsync -avzR --delete --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class="line">          rsync -avzR --delete --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125;  </span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">      if [[$INO_EVENT &#x3D;~ &#39;ATTRIB&#39;]]</span><br><span class="line">      then</span><br><span class="line">          echo &#39;Attrib&#39;</span><br><span class="line">          if [ !-d &quot;$INO_FILE&quot; ]</span><br><span class="line">          then</span><br><span class="line">            rsync -avzcR  --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class="line">            rsync -avzcR  --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125;</span><br><span class="line">          fi</span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">   done</span><br></pre></td></tr></table></figure><p>因为inotify不会监控到为启动时的变化，所以直接在crontab里增加一个2小时全量目录同步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">* *&#x2F;2 * * * rsync -avz --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets&#x2F;var&#x2F;www&#x2F;html&#x2F;  rsync_clint@1xxx.xxx.xxx.xxx::123 &amp;&amp; rsync -avz --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets &#x2F;var&#x2F;www&#x2F;html&#x2F; rrsync_clint@7xx.xxx.xxx.xx::123</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设计要求&quot;&gt;&lt;a href=&quot;#设计要求&quot; class=&quot;headerlink&quot; title=&quot;设计要求&quot;&gt;&lt;/a&gt;设计要求&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;内网web服务器生成html页面&lt;/li&gt;
&lt;li&gt;内网向外网同步生成的html页面和目录&lt;/li&gt;
&lt;li&gt;外
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Ubuntu" scheme="https://www.fh123.co/tags/Ubuntu/"/>
    
      <category term="rsync" scheme="https://www.fh123.co/tags/rsync/"/>
    
      <category term="inotify" scheme="https://www.fh123.co/tags/inotify/"/>
    
  </entry>
  
  <entry>
    <title>rsync同步基本配置（基础知识）</title>
    <link href="https://www.fh123.co/2020/08/03/rsync%E5%90%8C%E6%AD%A5%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%EF%BC%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%89/"/>
    <id>https://www.fh123.co/2020/08/03/rsync%E5%90%8C%E6%AD%A5%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%EF%BC%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%89/</id>
    <published>2020-08-03T02:04:38.000Z</published>
    <updated>2020-08-03T03:58:21.709Z</updated>
    
    <content type="html"><![CDATA[<h2 id="rrsync同步基本配置（基础知识）"><a href="#rrsync同步基本配置（基础知识）" class="headerlink" title="rrsync同步基本配置（基础知识）"></a>rrsync同步基本配置（基础知识）</h2><h3 id="Ubuntu-20-x-环境"><a href="#Ubuntu-20-x-环境" class="headerlink" title="Ubuntu 20.x 环境"></a>Ubuntu 20.x 环境</h3><h3 id="服务器端："><a href="#服务器端：" class="headerlink" title="服务器端："></a>服务器端：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[123]</span><br><span class="line"> comment &#x3D; 123 static html files server</span><br><span class="line">path &#x3D; &#x2F;var&#x2F;www&#x2F;html&#x2F;site</span><br><span class="line">use chroot &#x3D; no</span><br><span class="line">max connections&#x3D;20</span><br><span class="line">lock file &#x3D; &#x2F;var&#x2F;lock&#x2F;rsyncd</span><br><span class="line">read only &#x3D; yes</span><br><span class="line">list &#x3D; yes</span><br><span class="line">uid &#x3D; 0</span><br><span class="line">gid &#x3D; 0</span><br><span class="line">     auth users &#x3D; 123clint</span><br><span class="line">     secrets file &#x3D; &#x2F;etc&#x2F;rsyncd.secrets</span><br><span class="line">     strict modes &#x3D; yes</span><br><span class="line">     port&#x3D;873</span><br><span class="line">ignore errors &#x3D; yes</span><br><span class="line">ignore nonreadable &#x3D; yes</span><br><span class="line">transfer logging &#x3D; yes</span><br><span class="line">timeout &#x3D; 600</span><br><span class="line">refuse options &#x3D; checksum dry-run</span><br><span class="line">dont compress &#x3D; *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz</span><br></pre></td></tr></table></figure><p>增加/etc/rsyncd.secrets文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123clint：密码123456</span><br></pre></td></tr></table></figure><p>启动服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;rsync --daemon</span><br></pre></td></tr></table></figure><h3 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h3><p>增加/etc/rsyncd.secrets文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码123456</span><br></pre></td></tr></table></figure><p>客户端连接服务器命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -vzrtopg --delete --progress 123clint@服务器地址::123 &#x2F;var&#x2F;www&#x2F;staichtml（客户端备份目录位置） --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br></pre></td></tr></table></figure><p> <strong>注意</strong><br>客户端和服务器端的rsyncd.secrets 文件均需要chmod 600 权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 rsyncd.secrets </span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;rrsync同步基本配置（基础知识）&quot;&gt;&lt;a href=&quot;#rrsync同步基本配置（基础知识）&quot; class=&quot;headerlink&quot; title=&quot;rrsync同步基本配置（基础知识）&quot;&gt;&lt;/a&gt;rrsync同步基本配置（基础知识）&lt;/h2&gt;&lt;h3 id=&quot;U
      
    
    </summary>
    
    
      <category term="运维" scheme="https://www.fh123.co/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Ubuntu" scheme="https://www.fh123.co/tags/Ubuntu/"/>
    
      <category term="rsync" scheme="https://www.fh123.co/tags/rsync/"/>
    
  </entry>
  
</feed>
