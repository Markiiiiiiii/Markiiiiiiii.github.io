<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老菜的菜单</title>
  
  <subtitle>记录点技术点滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://markiiiiiiii.github.io/"/>
  <updated>2020-08-11T01:00:06.468Z</updated>
  <id>http://markiiiiiiii.github.io/</id>
  
  <author>
    <name>Liuuuuuuuuu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Google虚拟机vps的本地化SSH登陆设置</title>
    <link href="http://markiiiiiiii.github.io/2020/08/11/Google%E8%99%9A%E6%8B%9F%E6%9C%BAvps%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%8C%96SSH%E7%99%BB%E9%99%86%E8%AE%BE%E7%BD%AE/"/>
    <id>http://markiiiiiiii.github.io/2020/08/11/Google%E8%99%9A%E6%8B%9F%E6%9C%BAvps%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%8C%96SSH%E7%99%BB%E9%99%86%E8%AE%BE%E7%BD%AE/</id>
    <published>2020-08-11T00:50:51.000Z</published>
    <updated>2020-08-11T01:00:06.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Google-cloud-VPS-本地使用SSH登陆"><a href="#Google-cloud-VPS-本地使用SSH登陆" class="headerlink" title="Google cloud VPS 本地使用SSH登陆"></a>Google cloud VPS 本地使用SSH登陆</h2><p>昨天发现google cloud上发现还有2K+的余额，正好最近在学习nginx的负载平衡，拿来做个vps来做nginx的服务器来实例化一下。vps做好后结果发现本地ssh登陆是要做一些小小的设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -f googlekey   </span><br><span class="line">#创建一个googlekey公私钥</span><br><span class="line">cat googlekey.pub</span><br><span class="line">#输出公钥</span><br></pre></td></tr></table></figure><p>打开google cloud的元数据–ssh–修改–添加一项</p><p>将公钥输入保存</p><p>本地终端中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -i googlekey username@ip</span><br><span class="line">#username这时是在元数据中显示的name</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Google-cloud-VPS-本地使用SSH登陆&quot;&gt;&lt;a href=&quot;#Google-cloud-VPS-本地使用SSH登陆&quot; class=&quot;headerlink&quot; title=&quot;Google cloud VPS 本地使用SSH登陆&quot;&gt;&lt;/a&gt;Google c
      
    
    </summary>
    
    
      <category term="运维" scheme="http://markiiiiiiii.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Google" scheme="http://markiiiiiiii.github.io/tags/Google/"/>
    
      <category term="VPS" scheme="http://markiiiiiiii.github.io/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>Pyspider+python-Wordpress-xmlrpc爬取自动发布</title>
    <link href="http://markiiiiiiii.github.io/2020/08/08/Pyspider-python-Wordpress-xmlrpc%E7%88%AC%E5%8F%96%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/"/>
    <id>http://markiiiiiiii.github.io/2020/08/08/Pyspider-python-Wordpress-xmlrpc%E7%88%AC%E5%8F%96%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/</id>
    <published>2020-08-08T03:06:40.000Z</published>
    <updated>2020-08-08T03:11:58.806Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Pyspider-python-wordpress-xmlrpc-爬取站点自动发布"><a href="#Pyspider-python-wordpress-xmlrpc-爬取站点自动发布" class="headerlink" title="Pyspider+python-wordpress-xmlrpc 爬取站点自动发布"></a>Pyspider+python-wordpress-xmlrpc 爬取站点自动发布</h2><p>Pyspider内代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- encoding: utf-8 -*-</span><br><span class="line"># Created on 2020-08-07 01:19:41</span><br><span class="line"># Project: xxxxxx</span><br><span class="line"></span><br><span class="line">from pyspider.libs.base_handler import *</span><br><span class="line">import re</span><br><span class="line">DIR_PATH &#x3D; &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;mystaticsite&#x2F;downimages&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">#coding:utf-8</span><br><span class="line">from wordpress_xmlrpc import Client, WordPressPost</span><br><span class="line">from wordpress_xmlrpc.methods.posts import GetPosts, NewPost</span><br><span class="line">from wordpress_xmlrpc.methods.users import GetUserInfo</span><br><span class="line">from wordpress_xmlrpc.methods import posts</span><br><span class="line">from wordpress_xmlrpc.methods import taxonomies</span><br><span class="line">from wordpress_xmlrpc import WordPressTerm</span><br><span class="line">from wordpress_xmlrpc.compat import xmlrpc_client</span><br><span class="line">from wordpress_xmlrpc.methods import media, posts</span><br><span class="line"></span><br><span class="line">#import importlib</span><br><span class="line">#importlib.reload(sys)</span><br><span class="line">#sys.setdefaultencoding(&#39;utf-8&#39;) #python3下不支持该用法</span><br><span class="line"></span><br><span class="line">class Handler(BaseHandler):</span><br><span class="line">    crawl_config &#x3D; &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    def __init__(self):#继承Deal类</span><br><span class="line">        self.deal &#x3D; Deal()</span><br><span class="line">        </span><br><span class="line">    @every(minutes&#x3D;24 * 60)</span><br><span class="line">    def on_start(self):</span><br><span class="line">        self.crawl(&#39;https:&#x2F;&#x2F;www.xxxxxx.com&#x2F;news&#x2F;index.html&#39;, callback&#x3D;self.index_page)</span><br><span class="line"></span><br><span class="line">    @config(age&#x3D;10 * 24 * 60 * 60)</span><br><span class="line">    def index_page(self, response):</span><br><span class="line">        for each in response.doc(&#39;h3 &gt; a&#39;).items():</span><br><span class="line">            self.crawl(each.attr.href, callback&#x3D;self.detail_page)</span><br><span class="line"></span><br><span class="line">    @config(priority&#x3D;2)</span><br><span class="line">    def detail_page(self, response):</span><br><span class="line">        title &#x3D; response.doc(&#39;h1&#39;).text(),</span><br><span class="line">        tmp_text &#x3D; response.doc(&#39;.loadimg.fadeInUp &gt; p&#39;).text(),</span><br><span class="line">        tmp_text &#x3D; &#39;&#39;.join(str(tmp_text)) #将元组数据转换为字符串</span><br><span class="line">        tmp_text &#x3D; tmp_text.replace(&quot;下面我们一起来看看她最新的番号作品吧！&quot;,&quot;&quot;) </span><br><span class="line">        new_text &#x3D; tmp_text.replace(&quot;(&#39;  &quot;,&quot;&quot;)#清洗掉原文中的标记</span><br><span class="line">        </span><br><span class="line">        for each in response.doc(&#39;.loadimg.fadeInUp &gt; p &gt; img&#39;).items():</span><br><span class="line">           img_url &#x3D; each.attr.src        </span><br><span class="line">           if (&quot;xxxxxx&quot; in img_url): #过滤掉不在xxxxxx站点上的图片连接</span><br><span class="line">               split_url &#x3D; img_url.split(&#39;&#x2F;&#39;)</span><br><span class="line">               dir_name &#x3D; split_url[-2] + &#39;&#x2F;&#39;</span><br><span class="line">               dir_path &#x3D; self.deal.mkDir(dir_name)</span><br><span class="line">               file_name &#x3D; split_url[-1]</span><br><span class="line">               relativpath &#x3D; &#39;&lt;img src&#x3D;&quot;&#x2F;downimages&#x2F;&#39; + dir_name + file_name + &#39;&quot;&gt;&lt;br&gt;&#39;#构建图片显示的相对路径</span><br><span class="line">               new_text &#x3D; relativpath + new_text #将图片插入文章头部</span><br><span class="line">               self.crawl(img_url,callback&#x3D;self.save_img, save&#x3D;&#123;&#39;dir_path&#39;:dir_path ,&#39;file_name&#39;:file_name&#125;)</span><br><span class="line">        title &#x3D; &#39;&#39;.join(str(title)) </span><br><span class="line">        title &#x3D; title.replace(&quot;(&#39;&quot;,&quot;&quot;)</span><br><span class="line">        title &#x3D; title.replace(&quot;&#39;,)&quot;,&quot;&quot;)</span><br><span class="line">        wp &#x3D; Client(&#39;http:&#x2F;&#x2F;server&#x2F;xmlrpc.php&#39;, &#39;username&#39;, &#39;password&#39;)</span><br><span class="line">        post &#x3D; WordPressPost()</span><br><span class="line">        post.title &#x3D; title</span><br><span class="line">        post.content &#x3D; new_text</span><br><span class="line">        post.post_status &#x3D; &#39;publish&#39;</span><br><span class="line">        post.id &#x3D; wp.call(posts.NewPost(post))</span><br><span class="line">        #print(&quot;爬取注入:&quot;+ post.id + &quot;post.title&quot;)</span><br><span class="line">     </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    def save_img(self,response): #保存图片</span><br><span class="line">        content &#x3D; response.content</span><br><span class="line">        dir_path &#x3D; response.save[&#39;dir_path&#39;]</span><br><span class="line">        file_name &#x3D; response.save[&#39;file_name&#39;]</span><br><span class="line">        file_path &#x3D; dir_path + &#39;&#x2F;&#39; + file_name </span><br><span class="line">        self.deal.saveImg(content,file_path)</span><br><span class="line"> </span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">class Deal:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.path &#x3D; DIR_PATH</span><br><span class="line">        if not self.path.endswith(&#39;&#x2F;&#39;):</span><br><span class="line">            self.path &#x3D; self.path + &#39;&#x2F;&#39;</span><br><span class="line">        if not os.path.exists(self.path):</span><br><span class="line">            os.makedirs(self.path)</span><br><span class="line"></span><br><span class="line">    def mkDir(self, path):</span><br><span class="line">        path &#x3D; path.strip()</span><br><span class="line">        dir_path &#x3D; self.path + path</span><br><span class="line">        exists &#x3D; os.path.exists(dir_path)</span><br><span class="line">        if not exists:</span><br><span class="line">            os.makedirs(dir_path)</span><br><span class="line">            return dir_path</span><br><span class="line">        else:</span><br><span class="line">            return dir_path</span><br><span class="line"></span><br><span class="line">    def saveImg(self, content, path):</span><br><span class="line">        f &#x3D; open(path, &#39;wb&#39;)</span><br><span class="line">        f.write(content)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line">    def saveBrief(self, content, dir_path, name):</span><br><span class="line">        file_name &#x3D; dir_path + &quot;&#x2F;&quot; + name + &quot;.txt&quot;</span><br><span class="line">        f &#x3D; open(file_name, &quot;w+&quot;)</span><br><span class="line">        f.write(content.encode(&#39;utf-8&#39;))</span><br><span class="line"></span><br><span class="line">    def getExtension(self, url):</span><br><span class="line">        extension &#x3D; url.split(&#39;.&#39;)[-1]</span><br><span class="line">        return extension</span><br><span class="line"></span><br><span class="line">#        return &#123;</span><br><span class="line">#            &quot;title&quot;: title,</span><br><span class="line">#            &quot;contenttext&quot;: contenttext,</span><br><span class="line">#            </span><br><span class="line">#        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Pyspider-python-wordpress-xmlrpc-爬取站点自动发布&quot;&gt;&lt;a href=&quot;#Pyspider-python-wordpress-xmlrpc-爬取站点自动发布&quot; class=&quot;headerlink&quot; title=&quot;Pyspider+p
      
    
    </summary>
    
    
      <category term="编程" scheme="http://markiiiiiiii.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="pyspider" scheme="http://markiiiiiiii.github.io/tags/pyspider/"/>
    
      <category term="wordpress" scheme="http://markiiiiiiii.github.io/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>高负载web站点设计 (一)</title>
    <link href="http://markiiiiiiii.github.io/2020/08/05/%E9%AB%98%E8%B4%9F%E8%BD%BDweb%E7%AB%99%E7%82%B9%E8%AE%BE%E8%AE%A1/"/>
    <id>http://markiiiiiiii.github.io/2020/08/05/%E9%AB%98%E8%B4%9F%E8%BD%BDweb%E7%AB%99%E7%82%B9%E8%AE%BE%E8%AE%A1/</id>
    <published>2020-08-05T06:08:38.000Z</published>
    <updated>2020-08-05T06:28:04.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-负载平衡服务器"><a href="#A-负载平衡服务器" class="headerlink" title="A.负载平衡服务器"></a>A.负载平衡服务器</h2><ul><li>A.1. ngnix反向代理服务根据B服务组的最短时间或负载来自动均衡。</li></ul><h2 id="B-静态页面服务器集群"><a href="#B-静态页面服务器集群" class="headerlink" title="B.静态页面服务器集群"></a>B.静态页面服务器集群</h2><h3 id="b-1-nginx-WEB业务集群"><a href="#b-1-nginx-WEB业务集群" class="headerlink" title="b.1. nginx WEB业务集群"></a>b.1. nginx WEB业务集群</h3><ul><li>使用rsync服务同步C.1.服务器生成的静态页面和相关的静态资源。（扩展思路：将GIF，JPG等静态资源单独使用dfs服务器分流）</li></ul><h2 id="C-内网动态服务器"><a href="#C-内网动态服务器" class="headerlink" title="C.内网动态服务器"></a>C.内网动态服务器</h2><h3 id="c-1-Wordpress内容生产服务器"><a href="#c-1-Wordpress内容生产服务器" class="headerlink" title="c.1.  Wordpress内容生产服务器"></a>c.1.  Wordpress内容生产服务器</h3><ul><li><p>wordpress服务器使用wp2static插件生成静态页面，wp2static插件可以识别之前生成的页面从而减少服务器负载。</p></li><li><p>wordpress服务器使用inonifywait脚本监控wp2static插件生成的静态页面目录，如果产生文件的变更（创建、删除、修改、移动）和目录结构的变更后，则通过rsync服务器同步远程服务器。</p></li></ul><h3 id="c-2-Pyspider爬虫服务器"><a href="#c-2-Pyspider爬虫服务器" class="headerlink" title="c.2.   Pyspider爬虫服务器"></a>c.2.   Pyspider爬虫服务器</h3><ul><li>Pyspider爬虫框架爬取需要的数据</li><li>安装python-wordpress-xmlrpc库， 使用wordpress的rpc服务接受Pyspider爬取经过清洗后的数据发布到wordpress服务器。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;A-负载平衡服务器&quot;&gt;&lt;a href=&quot;#A-负载平衡服务器&quot; class=&quot;headerlink&quot; title=&quot;A.负载平衡服务器&quot;&gt;&lt;/a&gt;A.负载平衡服务器&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;A.1. ngnix反向代理服务根据B服务组的最短时间或负载来自动均衡。
      
    
    </summary>
    
    
      <category term="运维" scheme="http://markiiiiiiii.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Ubuntu" scheme="http://markiiiiiiii.github.io/tags/Ubuntu/"/>
    
      <category term="nginx" scheme="http://markiiiiiiii.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>rsync+inofity内网向外网同步数据(一)</title>
    <link href="http://markiiiiiiii.github.io/2020/08/03/rsync-inofity%E5%86%85%E7%BD%91%E5%90%91%E5%A4%96%E7%BD%91%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE/"/>
    <id>http://markiiiiiiii.github.io/2020/08/03/rsync-inofity%E5%86%85%E7%BD%91%E5%90%91%E5%A4%96%E7%BD%91%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE/</id>
    <published>2020-08-03T03:22:53.000Z</published>
    <updated>2020-08-12T06:41:33.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计要求"><a href="#设计要求" class="headerlink" title="设计要求"></a>设计要求</h2><ul><li>内网web服务器生成html页面</li><li>内网向外网同步生成的html页面和目录</li><li>外网服务器纯静态资源访问</li></ul><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><ul><li>内网 Ubuntu 20.x + Ngnix + PHP + Mysql + Wordpress</li><li>外网 Ubuntu 20.x + Ngnix </li></ul><h3 id="外网服务器配置"><a href="#外网服务器配置" class="headerlink" title="外网服务器配置"></a>外网服务器配置</h3><p>外网服务器必须提供rsync –daemon服务以监听内网服务器发出的同步指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[123]</span><br><span class="line">  comment &#x3D; 123 static html files server</span><br><span class="line">    path &#x3D; &#x2F;var&#x2F;www&#x2F;staichtml&#x2F;</span><br><span class="line">    use chroot &#x3D; no</span><br><span class="line">    max connections&#x3D;20</span><br><span class="line">    lock file &#x3D; &#x2F;var&#x2F;lock&#x2F;rsyncd</span><br><span class="line">    read only &#x3D; no</span><br><span class="line">  write only &#x3D; no</span><br><span class="line">    list &#x3D; yes</span><br><span class="line">    uid &#x3D; rsync</span><br><span class="line">    gid &#x3D; rsync</span><br><span class="line">  auth users &#x3D; rsync_clint</span><br><span class="line">  secrets file &#x3D; &#x2F;etc&#x2F;rsyncd.secrets</span><br><span class="line">    strict modes &#x3D; yes</span><br><span class="line">  port&#x3D;873</span><br><span class="line">  pid file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.pid</span><br><span class="line">  log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log</span><br><span class="line">  log format &#x3D; %t %a %m %f %b</span><br><span class="line">    ignore errors &#x3D; yes</span><br><span class="line">    ignore nonreadable &#x3D; yes</span><br><span class="line">    transfer logging &#x3D; yes</span><br><span class="line">    timeout &#x3D; 600</span><br><span class="line">    refuse options &#x3D; checksum dry-run</span><br><span class="line">    dont compress &#x3D; *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建 /etc/rsyncd.secrets 并 chmod 600 权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync_clint:密码123</span><br></pre></td></tr></table></figure><p>添加一个系统用户为rsync的用户 <em>该用户不具备登录权限</em></p><pre><code>&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;useradd -s &amp;#x2F;sbin&amp;#x2F;nologin -M rsync&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre><p><strong>！！！注意！！！必须 chmod 777 /var/www/staichtml/ 在实际操作中发现没有x权限rsync服务无法写入文件</strong></p><h3 id="内网服务器配置"><a href="#内网服务器配置" class="headerlink" title="内网服务器配置"></a>内网服务器配置</h3><p><em>略过相关web服务配置</em><br>创建 /etc/rsyncd.secrets 并 chmod 600 权限，仅存放密码使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码123</span><br></pre></td></tr></table></figure><p>安装apt install inofity-tool</p><p>编写简单实现的.sh文件并 chmod +x xxxx.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">##测试代码：</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">src&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;mystaticsite&#x2F; #同步目录路径</span><br><span class="line">ip&#x3D;111.111.111.111</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;inotifywait -rm  --timefmt &#39;%d&#x2F;%m&#x2F;%y %H:%M&#39; --format &#39;%T %w%f%e&#39; -e modify,delete,create,attrib,move $src | while read file</span><br><span class="line">   do</span><br><span class="line">     rsync -avz --delete --progress $src rsync_clint@$ip::123 --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br><span class="line">    echo &quot;$&#123;file&#125; was rsynced&quot; &gt;&gt; &#x2F;tmp&#x2F;rsync.log 2&gt;&amp;1</span><br><span class="line">   done</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">！！！注意！！！</span><br><span class="line">必须将$src的位置写在连接之前不能放在连接之后，不然外网服务器无法接受到文件。</span><br><span class="line">这一点与网上很多教程向左，卡了我两天多的时间才发现的:(</span><br></pre></td></tr></table></figure><h3 id="生产环境代码："><a href="#生产环境代码：" class="headerlink" title="生产环境代码："></a>生产环境代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">src&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F; #同步目录路径</span><br><span class="line">user&#x3D;rsync_clint</span><br><span class="line">ip1&#x3D;7xx.xxx.xxx.xxx</span><br><span class="line">ip2&#x3D;1xx.xx.xxx.xx</span><br><span class="line">des&#x3D;123</span><br><span class="line">pswfile&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br><span class="line"></span><br><span class="line">cd $&#123;src&#125;</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;inotifywait -rmq  --format &#39;%Xe %w%f&#39; -e modify,delete,create,attrib,close_write,move .&#x2F; | while read file</span><br><span class="line">   do</span><br><span class="line">      INO_EVENT&#x3D;$(echo $file | awk&#39;&#123;print $1&#125;&#39;)</span><br><span class="line">      INO_FILE&#x3D;$(echo $file | awk&#39;&#123;print $2&#125;&#39;)</span><br><span class="line">      echo &quot;----------------$&#123;data&#125;-----------------&quot;</span><br><span class="line">      echo $file</span><br><span class="line">      </span><br><span class="line">      if [[$INO_EVENT &#x3D;~ &#39;CREATE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MODIFY&#39;]] || [[$INO_EVENT &#x3D;~ &#39;CLOSE_WRITE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MOVE_TO&#39;]]</span><br><span class="line">      then</span><br><span class="line">          echo &#39;Creat or Modify or Close_write or Moved_to&#39;</span><br><span class="line">          rsync -avzcR --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class="line">          rsync -avzcR --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125; </span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">      if [[$INO_EVENT &#x3D;~ &#39;DELETE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MOVE_FROM&#39;]]</span><br><span class="line">      then</span><br><span class="line">          echo &#39;Delete or Moved_from&#39;</span><br><span class="line">          rsync -avzR --delete --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class="line">          rsync -avzR --delete --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125;  </span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">      if [[$INO_EVENT &#x3D;~ &#39;ATTRIB&#39;]]</span><br><span class="line">      then</span><br><span class="line">          echo &#39;Attrib&#39;</span><br><span class="line">          if [ !-d &quot;$INO_FILE&quot; ]</span><br><span class="line">          then</span><br><span class="line">            rsync -avzcR  --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class="line">            rsync -avzcR  --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125;</span><br><span class="line">          fi</span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">   done</span><br></pre></td></tr></table></figure><p>因为inotify不会监控到为启动时的变化，所以直接在crontab里增加一个2小时全量目录同步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">* *&#x2F;2 * * * rsync -avz --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets&#x2F;var&#x2F;www&#x2F;html&#x2F;  rsync_clint@1xxx.xxx.xxx.xxx::123 &amp;&amp; rsync -avz --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets &#x2F;var&#x2F;www&#x2F;html&#x2F; rrsync_clint@7xx.xxx.xxx.xx::123</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设计要求&quot;&gt;&lt;a href=&quot;#设计要求&quot; class=&quot;headerlink&quot; title=&quot;设计要求&quot;&gt;&lt;/a&gt;设计要求&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;内网web服务器生成html页面&lt;/li&gt;
&lt;li&gt;内网向外网同步生成的html页面和目录&lt;/li&gt;
&lt;li&gt;外
      
    
    </summary>
    
    
      <category term="运维" scheme="http://markiiiiiiii.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Ubuntu" scheme="http://markiiiiiiii.github.io/tags/Ubuntu/"/>
    
      <category term="rsync" scheme="http://markiiiiiiii.github.io/tags/rsync/"/>
    
      <category term="inotify" scheme="http://markiiiiiiii.github.io/tags/inotify/"/>
    
  </entry>
  
  <entry>
    <title>rsync同步基本配置（基础知识）</title>
    <link href="http://markiiiiiiii.github.io/2020/08/03/rsync%E5%90%8C%E6%AD%A5%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%EF%BC%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%89/"/>
    <id>http://markiiiiiiii.github.io/2020/08/03/rsync%E5%90%8C%E6%AD%A5%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%EF%BC%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%89/</id>
    <published>2020-08-03T02:04:38.000Z</published>
    <updated>2020-08-03T03:58:21.709Z</updated>
    
    <content type="html"><![CDATA[<h2 id="rrsync同步基本配置（基础知识）"><a href="#rrsync同步基本配置（基础知识）" class="headerlink" title="rrsync同步基本配置（基础知识）"></a>rrsync同步基本配置（基础知识）</h2><h3 id="Ubuntu-20-x-环境"><a href="#Ubuntu-20-x-环境" class="headerlink" title="Ubuntu 20.x 环境"></a>Ubuntu 20.x 环境</h3><h3 id="服务器端："><a href="#服务器端：" class="headerlink" title="服务器端："></a>服务器端：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[123]</span><br><span class="line"> comment &#x3D; 123 static html files server</span><br><span class="line">path &#x3D; &#x2F;var&#x2F;www&#x2F;html&#x2F;site</span><br><span class="line">use chroot &#x3D; no</span><br><span class="line">max connections&#x3D;20</span><br><span class="line">lock file &#x3D; &#x2F;var&#x2F;lock&#x2F;rsyncd</span><br><span class="line">read only &#x3D; yes</span><br><span class="line">list &#x3D; yes</span><br><span class="line">uid &#x3D; 0</span><br><span class="line">gid &#x3D; 0</span><br><span class="line">     auth users &#x3D; 123clint</span><br><span class="line">     secrets file &#x3D; &#x2F;etc&#x2F;rsyncd.secrets</span><br><span class="line">     strict modes &#x3D; yes</span><br><span class="line">     port&#x3D;873</span><br><span class="line">ignore errors &#x3D; yes</span><br><span class="line">ignore nonreadable &#x3D; yes</span><br><span class="line">transfer logging &#x3D; yes</span><br><span class="line">timeout &#x3D; 600</span><br><span class="line">refuse options &#x3D; checksum dry-run</span><br><span class="line">dont compress &#x3D; *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz</span><br></pre></td></tr></table></figure><p>增加/etc/rsyncd.secrets文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123clint：密码123456</span><br></pre></td></tr></table></figure><p>启动服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;rsync --daemon</span><br></pre></td></tr></table></figure><h3 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h3><p>增加/etc/rsyncd.secrets文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码123456</span><br></pre></td></tr></table></figure><p>客户端连接服务器命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -vzrtopg --delete --progress 123clint@服务器地址::123 &#x2F;var&#x2F;www&#x2F;staichtml（客户端备份目录位置） --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br></pre></td></tr></table></figure><p> <strong>注意</strong><br>客户端和服务器端的rsyncd.secrets 文件均需要chmod 600 权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 rsyncd.secrets </span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;rrsync同步基本配置（基础知识）&quot;&gt;&lt;a href=&quot;#rrsync同步基本配置（基础知识）&quot; class=&quot;headerlink&quot; title=&quot;rrsync同步基本配置（基础知识）&quot;&gt;&lt;/a&gt;rrsync同步基本配置（基础知识）&lt;/h2&gt;&lt;h3 id=&quot;U
      
    
    </summary>
    
    
      <category term="运维" scheme="http://markiiiiiiii.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Ubuntu" scheme="http://markiiiiiiii.github.io/tags/Ubuntu/"/>
    
      <category term="rsync" scheme="http://markiiiiiiii.github.io/tags/rsync/"/>
    
  </entry>
  
</feed>
