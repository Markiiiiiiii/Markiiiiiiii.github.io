{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/dawn/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/dawn/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/dawn/source/css/style.min.css","path":"css/style.min.css","modified":1,"renderable":1},{"_id":"themes/dawn/source/fonts/README.md","path":"fonts/README.md","modified":1,"renderable":1},{"_id":"themes/dawn/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/dawn/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/dawn/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/dawn/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/dawn/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/dawn/source/images/thumb-default.png","path":"images/thumb-default.png","modified":1,"renderable":1},{"_id":"themes/dawn/source/images/xingqiu-qrcode111.jpg","path":"images/xingqiu-qrcode111.jpg","modified":1,"renderable":1},{"_id":"themes/dawn/source/js/application.js","path":"js/application.js","modified":1,"renderable":1},{"_id":"themes/dawn/source/js/application.min.js","path":"js/application.min.js","modified":1,"renderable":1},{"_id":"themes/dawn/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/dawn/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/dawn/source/js/plugin.js","path":"js/plugin.js","modified":1,"renderable":1},{"_id":"themes/dawn/source/js/plugin.js.map","path":"js/plugin.js.map","modified":1,"renderable":1},{"_id":"themes/dawn/source/js/plugin.min.js","path":"js/plugin.min.js","modified":1,"renderable":1},{"_id":"themes/dawn/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":1,"renderable":1},{"_id":"themes/dawn/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":1,"renderable":1},{"_id":"themes/dawn/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":1,"renderable":1},{"_id":"themes/dawn/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":1,"renderable":1},{"_id":"themes/dawn/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/Ubuntu中配置Mail命令使用外部STMP发送邮件.md","hash":"77a94c09987befa25fab0a838548cb5c74fbf9fa","modified":1597639023645},{"_id":"source/_posts/Google虚拟机vps的本地化SSH登陆设置.md","hash":"27047f694ea249680a9cf47fedfd9d495cf21f8b","modified":1597107606468},{"_id":"source/_posts/Nginx针对Wordpress做动静分离.md","hash":"413742097788445c404c0f1af4588ac1b284d3e8","modified":1597294360968},{"_id":"source/_posts/Pyspider-python-Wordpress-xmlrpc爬取自动发布.md","hash":"af0c8a6da39a1324c0c83b96b7412ca2875a0144","modified":1596856318806},{"_id":"source/_posts/高负载web站点设计.md","hash":"c7dc71a48d5e305364d9eb974923e1bd5ba4905a","modified":1598241474954},{"_id":"source/_posts/rsync-inofity内网向外网同步数据.md","hash":"bebe54f89972db48d918dbe1cde6637b177f895f","modified":1597214493171},{"_id":"source/_posts/rsync同步基本配置（基础知识）.md","hash":"dd71e50d389d80b3d1829e56be87be1a508e89dc","modified":1596427101709},{"_id":"source/categories/index.md","hash":"db391f894ca0a2c57bc4f9dfd628442749ef691d","modified":1596426960368},{"_id":"source/tags/index.md","hash":"fb971d92329949d2ea42b790c59c84a568a6e9a7","modified":1596427034411},{"_id":"themes/dawn/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1596421641996},{"_id":"source/_posts/mysql8.0.x的主从同步设置.md","hash":"ece67333c20f3ea29876cd4daa834e410d37bb24","modified":1597386712376},{"_id":"themes/dawn/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1596421641997},{"_id":"themes/dawn/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1596421641997},{"_id":"themes/dawn/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1596421641997},{"_id":"themes/dawn/.DS_Store","hash":"543ca3ddf06cdf9f55b75798fdf44266f15e8e4f","modified":1596434014071},{"_id":"themes/dawn/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1596421641997},{"_id":"themes/dawn/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1596421642053},{"_id":"themes/dawn/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1596421641999},{"_id":"themes/dawn/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1596421641999},{"_id":"themes/dawn/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1596421641999},{"_id":"themes/dawn/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1596421641999},{"_id":"themes/dawn/_config.yml","hash":"fc23be596b2035afb6f7dc8d22cef5d14505d9d7","modified":1598238190749},{"_id":"themes/dawn/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1596421642052},{"_id":"themes/dawn/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1596421642052},{"_id":"themes/dawn/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1596421642052},{"_id":"themes/dawn/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1596421642052},{"_id":"themes/dawn/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1596421642052},{"_id":"themes/dawn/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1596421642052},{"_id":"themes/dawn/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1596421642052},{"_id":"themes/dawn/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1596421642053},{"_id":"themes/dawn/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1596421642053},{"_id":"themes/dawn/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1596421642053},{"_id":"themes/dawn/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1596421642053},{"_id":"themes/dawn/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1596421642053},{"_id":"themes/dawn/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1596421642053},{"_id":"themes/dawn/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1596421642067},{"_id":"themes/dawn/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1596421642065},{"_id":"themes/dawn/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1596421641997},{"_id":"themes/dawn/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1596421641998},{"_id":"themes/dawn/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1596421641998},{"_id":"themes/dawn/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1596421641998},{"_id":"themes/dawn/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1596421641998},{"_id":"themes/dawn/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1596421641998},{"_id":"themes/dawn/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1596421641998},{"_id":"themes/dawn/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1596421641998},{"_id":"themes/dawn/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1596421641999},{"_id":"themes/dawn/layout/_common/footer.ejs","hash":"2d78bff34c10c0b3f1899cdc9e762df1d0fb3823","modified":1598238550357},{"_id":"themes/dawn/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1596421642000},{"_id":"themes/dawn/source/.DS_Store","hash":"9ced38b96dcda78e87c7080f962a6fad42102aa2","modified":1596434014070},{"_id":"themes/dawn/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1598239130470},{"_id":"themes/dawn/layout/_common/script.ejs","hash":"c17d789383c68eef816ae8b7ee6f8c2aa047bb11","modified":1598240074689},{"_id":"themes/dawn/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1596421642000},{"_id":"themes/dawn/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1596421642000},{"_id":"themes/dawn/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1596421642000},{"_id":"themes/dawn/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1596421642000},{"_id":"themes/dawn/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1596421642000},{"_id":"themes/dawn/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1596421642000},{"_id":"themes/dawn/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1596421642000},{"_id":"themes/dawn/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1596421642003},{"_id":"themes/dawn/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1596421642003},{"_id":"themes/dawn/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1596421642003},{"_id":"themes/dawn/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1596421642004},{"_id":"themes/dawn/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1596421642004},{"_id":"themes/dawn/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1596421642004},{"_id":"themes/dawn/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1596421642005},{"_id":"themes/dawn/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1596421642005},{"_id":"themes/dawn/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1596421642005},{"_id":"themes/dawn/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1596421642005},{"_id":"themes/dawn/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1596421642005},{"_id":"themes/dawn/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1596421642005},{"_id":"themes/dawn/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1596421642005},{"_id":"themes/dawn/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1596421642005},{"_id":"themes/dawn/layout/_script/mermaid.ejs","hash":"5f05286b39c800639c85645828855e09be2f5f14","modified":1598240147176},{"_id":"themes/dawn/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1596421642005},{"_id":"themes/dawn/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1596421642051},{"_id":"themes/dawn/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1596421642051},{"_id":"themes/dawn/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1596421642051},{"_id":"themes/dawn/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1596421642051},{"_id":"themes/dawn/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1596421642051},{"_id":"themes/dawn/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1596421642051},{"_id":"themes/dawn/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1596421642051},{"_id":"themes/dawn/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1596421642067},{"_id":"themes/dawn/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1596421642068},{"_id":"themes/dawn/source/images/avatar.jpg","hash":"fc61aac7533758a7d3644174a41f9f1223a5b9af","modified":1596422809080},{"_id":"themes/dawn/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1596421642069},{"_id":"themes/dawn/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1596421642069},{"_id":"themes/dawn/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1596421642071},{"_id":"themes/dawn/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1596421642070},{"_id":"themes/dawn/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1596421642071},{"_id":"themes/dawn/source/images/xingqiu-qrcode111.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1596421642071},{"_id":"themes/dawn/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1596421642071},{"_id":"themes/dawn/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1596421642001},{"_id":"themes/dawn/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1596421642002},{"_id":"themes/dawn/source/images/.DS_Store","hash":"fd0420b2c616af723783eecb719321e94fcdea39","modified":1596434222206},{"_id":"themes/dawn/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1596421642002},{"_id":"themes/dawn/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1596421642002},{"_id":"themes/dawn/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1596421642002},{"_id":"themes/dawn/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1596421642002},{"_id":"themes/dawn/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1596421642002},{"_id":"themes/dawn/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1596421642002},{"_id":"themes/dawn/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1596421642002},{"_id":"themes/dawn/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1596421642002},{"_id":"themes/dawn/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1596421642003},{"_id":"themes/dawn/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1596421642003},{"_id":"themes/dawn/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1596421642003},{"_id":"themes/dawn/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1596421642003},{"_id":"themes/dawn/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1596421642003},{"_id":"themes/dawn/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1596421642004},{"_id":"themes/dawn/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1596421642004},{"_id":"themes/dawn/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1596421642004},{"_id":"themes/dawn/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1596421642004},{"_id":"themes/dawn/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1596421642004},{"_id":"themes/dawn/source/images/donate/alipayimg.png","hash":"81eeb2a36274148b1690dec45c12e056a3b7dd93","modified":1596434193929},{"_id":"themes/dawn/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1596421642004},{"_id":"themes/dawn/source/images/donate/wechatpayimg.png","hash":"2b59916fb9d53e2043f5d2801f8e9156be7a580b","modified":1596434279077},{"_id":"themes/dawn/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1596421642070},{"_id":"themes/dawn/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1596421642070},{"_id":"themes/dawn/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1596421642070},{"_id":"themes/dawn/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1596421642054},{"_id":"themes/dawn/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1596421642055},{"_id":"themes/dawn/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1596421642055},{"_id":"themes/dawn/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1596421642056},{"_id":"themes/dawn/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1596421642074},{"_id":"themes/dawn/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1596421642072},{"_id":"themes/dawn/source/images/donate/.DS_Store","hash":"da49df89a485516829ae11c56229ce2f58be1ea1","modified":1596434219080},{"_id":"themes/dawn/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1596421642066},{"_id":"themes/dawn/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1596421642067},{"_id":"themes/dawn/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1596421642069},{"_id":"themes/dawn/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1596421642057},{"_id":"themes/dawn/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1596421642072},{"_id":"themes/dawn/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1596421642073},{"_id":"themes/dawn/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1596421642065},{"_id":"public/baidu_urls.txt","hash":"cc089a135acf61f42480ad7985c2a09eb309014c","modified":1598241514813},{"_id":"public/baidusitemap.xml","hash":"254664d059483281a6939c5e782bfa131d083687","modified":1598241514813},{"_id":"public/atom.xml","hash":"8fc2327e5cfb0de6f6c7a0f00c7ea16c2300bf14","modified":1598241514813},{"_id":"public/content.json","hash":"7c90adbb1f755ab042069571b472e253b835528a","modified":1598241514813},{"_id":"public/sitemap.xml","hash":"cc4a3e51b39790770b936d3aaf7ff8bfd65fea6b","modified":1598241514813},{"_id":"public/categories/index.html","hash":"65afd58975d732144dae109b38b163432f48716b","modified":1598241514813},{"_id":"public/tags/index.html","hash":"2d80ee424ab323852c464631a8e2921028c72762","modified":1598241514813},{"_id":"public/archives/index.html","hash":"5aacdcf5d7efea0465e53d11dd6eebcced22d82f","modified":1598241514813},{"_id":"public/archives/2020/08/index.html","hash":"984b99b2278d900c4b93498d05e32c532a93a035","modified":1598241514813},{"_id":"public/archives/2020/index.html","hash":"4c148fa4501219c1387a0505c161570397fcaebb","modified":1598241514813},{"_id":"public/categories/运维/index.html","hash":"d1ab4ded678b49df186d3b628088a0e3f22bc39a","modified":1598241514813},{"_id":"public/categories/编程/index.html","hash":"8ec3a728b34862e10b3af72077652c10b289d97f","modified":1598241514813},{"_id":"public/tags/VPS/index.html","hash":"f1777449c45a9b64b953f6c6b9ddfef16bc98427","modified":1598241514813},{"_id":"public/tags/Google/index.html","hash":"1d0e7555aa9653818a5e44fa00bcc193737f65c4","modified":1598241514813},{"_id":"public/tags/wordpress/index.html","hash":"7e1d0de13efeb4a198fc5c3016ad579aa81536d9","modified":1598241514813},{"_id":"public/tags/nginx/index.html","hash":"1da50085734d4ae693fa41efc71f9dd9316a2eea","modified":1598241514813},{"_id":"public/tags/pyspider/index.html","hash":"897f2f3d8649f9166e3db501b72593728751ffe8","modified":1598241514813},{"_id":"public/tags/Ubuntu/index.html","hash":"4e4fcfdaf9f16b0d6392815531d01b54158881a9","modified":1598241514813},{"_id":"public/tags/Linux/index.html","hash":"b4d29a07004d8ed28363aba4634babce5e2e2b35","modified":1598241514813},{"_id":"public/tags/rsync/index.html","hash":"d33faa7dbc6f2567685f9db939e64f070a51032f","modified":1598241514813},{"_id":"public/tags/inotify/index.html","hash":"95c1b12e7f234d64293e8e4f28774ed97e880fa8","modified":1598241514813},{"_id":"public/2020/08/17/Ubuntu中配置Mail命令使用外部STMP发送邮件/index.html","hash":"a9046f8e7fa654078b2349f13168f56dc580756b","modified":1598241514813},{"_id":"public/2020/08/14/mysql8.0.x的主从同步设置/index.html","hash":"a0c80034ef6cadda79d5a1234c4e41ce2707fc2a","modified":1598241514813},{"_id":"public/2020/08/13/Nginx针对Wordpress做动静分离/index.html","hash":"ac6548dc973b4a55ba21e74c09ad98248128ed0b","modified":1598241514813},{"_id":"public/2020/08/11/Google虚拟机vps的本地化SSH登陆设置/index.html","hash":"1fd9fdb2529d89b26fcae6899c6749c971a91048","modified":1598241514813},{"_id":"public/2020/08/08/Pyspider-python-Wordpress-xmlrpc爬取自动发布/index.html","hash":"470d2857eeb55ff0e2a93b3d10d8d766a1c6261b","modified":1598241514813},{"_id":"public/2020/08/03/rsync-inofity内网向外网同步数据/index.html","hash":"37a416ae9c67c56b9a93429c2e2d4b333d71468d","modified":1598241514813},{"_id":"public/2020/08/05/高负载web站点设计/index.html","hash":"316b3759384db45a073614b00dd67f8f210b27c0","modified":1598241514813},{"_id":"public/2020/08/03/rsync同步基本配置（基础知识）/index.html","hash":"f511169b69a2c5d01b5e983e620621157b6d7481","modified":1598241514813},{"_id":"public/index.html","hash":"36032a1055f377a61d6931f43630605485643774","modified":1598241514813},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1598241514813},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1598241514813},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1598241514813},{"_id":"public/images/avatar.jpg","hash":"fc61aac7533758a7d3644174a41f9f1223a5b9af","modified":1598241514813},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1598241514813},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1598241514813},{"_id":"public/images/xingqiu-qrcode111.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1598241514813},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1598241514813},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1598241514813},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1598241514813},{"_id":"public/images/donate/wechatpayimg.png","hash":"2b59916fb9d53e2043f5d2801f8e9156be7a580b","modified":1598241514813},{"_id":"public/images/donate/alipayimg.png","hash":"81eeb2a36274148b1690dec45c12e056a3b7dd93","modified":1598241514813},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1598241514813},{"_id":"public/fonts/README.html","hash":"f74a3f2ae8b6d0d95c72eb29535c2928b83446d0","modified":1598241514813},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1598241514813},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1598241514813},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1598241514813},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1598241514813},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1598241514813},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1598241514813},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1598241514813},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1598241514813},{"_id":"public/css/style.css","hash":"a38e4360e37a4214110acd32c8b2729add0fc342","modified":1598241514813}],"Category":[{"name":"运维","_id":"cke7zqgbm0004in3d31nffs57"},{"name":"编程","_id":"cke7zqgbu000ein3dd8wacr8u"}],"Data":[],"Page":[{"title":"分类","date":"2020-08-03T03:52:25.000Z","type":"分类","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2020-08-03 11:52:25\ntype: \"分类\"\n\n---\n","updated":"2020-08-03T03:56:00.368Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cke7zqgbf0000in3d4lfagyg3","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-08-03T03:56:56.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-08-03 11:56:56\ntype: \"tags\"\n---\n","updated":"2020-08-03T03:57:14.411Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cke7zqgbk0002in3d8z0r4f41","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Google虚拟机vps的本地化SSH登陆设置","date":"2020-08-11T00:50:51.000Z","_content":"## Google cloud VPS 本地使用SSH登陆\n昨天发现google cloud上发现还有2K+的余额，正好最近在学习nginx的负载平衡，拿来做个vps来做nginx的服务器来实例化一下。vps做好后结果发现本地ssh登陆是要做一些小小的设置。\n```\nssh-keygen -f googlekey   \n#创建一个googlekey公私钥\ncat googlekey.pub\n#输出公钥\n```\n打开google cloud的元数据--ssh--修改--添加一项\n\n将公钥输入保存\n\n本地终端中输入：\n```\nssh -i googlekey username@ip\n#username这时是在元数据中显示的name\n```","source":"_posts/Google虚拟机vps的本地化SSH登陆设置.md","raw":"---\ntitle: Google虚拟机vps的本地化SSH登陆设置\ndate: 2020-08-11 08:50:51\ntags:\n- Google\n- VPS\ncategories:\n- 运维\n---\n## Google cloud VPS 本地使用SSH登陆\n昨天发现google cloud上发现还有2K+的余额，正好最近在学习nginx的负载平衡，拿来做个vps来做nginx的服务器来实例化一下。vps做好后结果发现本地ssh登陆是要做一些小小的设置。\n```\nssh-keygen -f googlekey   \n#创建一个googlekey公私钥\ncat googlekey.pub\n#输出公钥\n```\n打开google cloud的元数据--ssh--修改--添加一项\n\n将公钥输入保存\n\n本地终端中输入：\n```\nssh -i googlekey username@ip\n#username这时是在元数据中显示的name\n```","slug":"Google虚拟机vps的本地化SSH登陆设置","published":1,"updated":"2020-08-11T01:00:06.468Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke7zqgbi0001in3dh91qemew","content":"<h2 id=\"Google-cloud-VPS-本地使用SSH登陆\"><a href=\"#Google-cloud-VPS-本地使用SSH登陆\" class=\"headerlink\" title=\"Google cloud VPS 本地使用SSH登陆\"></a>Google cloud VPS 本地使用SSH登陆</h2><p>昨天发现google cloud上发现还有2K+的余额，正好最近在学习nginx的负载平衡，拿来做个vps来做nginx的服务器来实例化一下。vps做好后结果发现本地ssh登陆是要做一些小小的设置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -f googlekey   </span><br><span class=\"line\">#创建一个googlekey公私钥</span><br><span class=\"line\">cat googlekey.pub</span><br><span class=\"line\">#输出公钥</span><br></pre></td></tr></table></figure>\n<p>打开google cloud的元数据–ssh–修改–添加一项</p>\n<p>将公钥输入保存</p>\n<p>本地终端中输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -i googlekey username@ip</span><br><span class=\"line\">#username这时是在元数据中显示的name</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Google-cloud-VPS-本地使用SSH登陆\"><a href=\"#Google-cloud-VPS-本地使用SSH登陆\" class=\"headerlink\" title=\"Google cloud VPS 本地使用SSH登陆\"></a>Google cloud VPS 本地使用SSH登陆</h2><p>昨天发现google cloud上发现还有2K+的余额，正好最近在学习nginx的负载平衡，拿来做个vps来做nginx的服务器来实例化一下。vps做好后结果发现本地ssh登陆是要做一些小小的设置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -f googlekey   </span><br><span class=\"line\">#创建一个googlekey公私钥</span><br><span class=\"line\">cat googlekey.pub</span><br><span class=\"line\">#输出公钥</span><br></pre></td></tr></table></figure>\n<p>打开google cloud的元数据–ssh–修改–添加一项</p>\n<p>将公钥输入保存</p>\n<p>本地终端中输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -i googlekey username@ip</span><br><span class=\"line\">#username这时是在元数据中显示的name</span><br></pre></td></tr></table></figure>"},{"title":"Nginx针对Wordpress做动静分离","date":"2020-08-13T04:32:21.000Z","_content":"## nginx 作高性能反向代理服务器\nnginx作为高性能的web服务器常常用于各种的反向代理和负载均衡服务器，但是今天遇到一个小小的问题为wordpress做一个动静分离需求。\n\n首先发现这个wordpress使用的url传参并不是使用的访问某个.php页面提交参数，而是直接将参数传给根域名\n```\nhttp://192.168.1.1/?s=xxx\n```\n如果传统的简单访问某个动态语言编写的页面nginx是非常简单直接写一个类似：\n```\nlocation ~ *\\.php $ {\n         proxy_pass http://server_group;\n        }\n```\n就可以将参数传递给了动态服务器。\n\n但是基于这个wordpress的需求我们需要将这么写\n```\n location / {\n                index index.html index.htm;\n                proxy_pass http://html_server_group;\n                    if ($query_string ~* \"s=(.*)$\"){\n                        proxy_pass http://server_group;\n                        }\n                    }\n#这里$query_string是传参字符串，s是wp系统中指定的传参变量，（.*）正则表示接受后面所有的字符串，如果多个变量以此类推。\n```\n\n这里我们因为实验环境，使用了ngrok把内网服务器映射到了公网，但是我们的nginx代理服务器在google vps上，这时需要在nginx中使用dns解析内网域名。\n\n首先在conf中写入dns解析服务器\n```\nresolver 8.8.8.8; #使用google的dns解析域名\n```\n然后写location /为：\n```\nlocation / {\n                index index.html index.htm;\n                proxy_pass http://html_server_group;\n                set $serverin e338a4fb64e2.ngrok.io; #定义serverin变量为映射域名\n                    if ($query_string ~* \"s=(.*)$\"){\n                       proxy_pass http://$serverin; \n                        }\n                     }\n```\n测试通过","source":"_posts/Nginx针对Wordpress做动静分离.md","raw":"---\ntitle: Nginx针对Wordpress做动静分离\ndate: 2020-08-13 12:32:21\ntags: \n- nginx\n- wordpress\ncategories:\n- 运维\n---\n## nginx 作高性能反向代理服务器\nnginx作为高性能的web服务器常常用于各种的反向代理和负载均衡服务器，但是今天遇到一个小小的问题为wordpress做一个动静分离需求。\n\n首先发现这个wordpress使用的url传参并不是使用的访问某个.php页面提交参数，而是直接将参数传给根域名\n```\nhttp://192.168.1.1/?s=xxx\n```\n如果传统的简单访问某个动态语言编写的页面nginx是非常简单直接写一个类似：\n```\nlocation ~ *\\.php $ {\n         proxy_pass http://server_group;\n        }\n```\n就可以将参数传递给了动态服务器。\n\n但是基于这个wordpress的需求我们需要将这么写\n```\n location / {\n                index index.html index.htm;\n                proxy_pass http://html_server_group;\n                    if ($query_string ~* \"s=(.*)$\"){\n                        proxy_pass http://server_group;\n                        }\n                    }\n#这里$query_string是传参字符串，s是wp系统中指定的传参变量，（.*）正则表示接受后面所有的字符串，如果多个变量以此类推。\n```\n\n这里我们因为实验环境，使用了ngrok把内网服务器映射到了公网，但是我们的nginx代理服务器在google vps上，这时需要在nginx中使用dns解析内网域名。\n\n首先在conf中写入dns解析服务器\n```\nresolver 8.8.8.8; #使用google的dns解析域名\n```\n然后写location /为：\n```\nlocation / {\n                index index.html index.htm;\n                proxy_pass http://html_server_group;\n                set $serverin e338a4fb64e2.ngrok.io; #定义serverin变量为映射域名\n                    if ($query_string ~* \"s=(.*)$\"){\n                       proxy_pass http://$serverin; \n                        }\n                     }\n```\n测试通过","slug":"Nginx针对Wordpress做动静分离","published":1,"updated":"2020-08-13T04:52:40.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke7zqgbl0003in3dcch35k21","content":"<h2 id=\"nginx-作高性能反向代理服务器\"><a href=\"#nginx-作高性能反向代理服务器\" class=\"headerlink\" title=\"nginx 作高性能反向代理服务器\"></a>nginx 作高性能反向代理服务器</h2><p>nginx作为高性能的web服务器常常用于各种的反向代理和负载均衡服务器，但是今天遇到一个小小的问题为wordpress做一个动静分离需求。</p>\n<p>首先发现这个wordpress使用的url传参并不是使用的访问某个.php页面提交参数，而是直接将参数传给根域名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.1.1&#x2F;?s&#x3D;xxx</span><br></pre></td></tr></table></figure>\n<p>如果传统的简单访问某个动态语言编写的页面nginx是非常简单直接写一个类似：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ *\\.php $ &#123;</span><br><span class=\"line\">         proxy_pass http:&#x2F;&#x2F;server_group;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<p>就可以将参数传递给了动态服务器。</p>\n<p>但是基于这个wordpress的需求我们需要将这么写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> location &#x2F; &#123;</span><br><span class=\"line\">                index index.html index.htm;</span><br><span class=\"line\">                proxy_pass http:&#x2F;&#x2F;html_server_group;</span><br><span class=\"line\">                    if ($query_string ~* &quot;s&#x3D;(.*)$&quot;)&#123;</span><br><span class=\"line\">                        proxy_pass http:&#x2F;&#x2F;server_group;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">#这里$query_string是传参字符串，s是wp系统中指定的传参变量，（.*）正则表示接受后面所有的字符串，如果多个变量以此类推。</span><br></pre></td></tr></table></figure>\n\n<p>这里我们因为实验环境，使用了ngrok把内网服务器映射到了公网，但是我们的nginx代理服务器在google vps上，这时需要在nginx中使用dns解析内网域名。</p>\n<p>首先在conf中写入dns解析服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolver 8.8.8.8; #使用google的dns解析域名</span><br></pre></td></tr></table></figure>\n<p>然后写location /为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location &#x2F; &#123;</span><br><span class=\"line\">                index index.html index.htm;</span><br><span class=\"line\">                proxy_pass http:&#x2F;&#x2F;html_server_group;</span><br><span class=\"line\">                set $serverin e338a4fb64e2.ngrok.io; #定义serverin变量为映射域名</span><br><span class=\"line\">                    if ($query_string ~* &quot;s&#x3D;(.*)$&quot;)&#123;</span><br><span class=\"line\">                       proxy_pass http:&#x2F;&#x2F;$serverin; </span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                     &#125;</span><br></pre></td></tr></table></figure>\n<p>测试通过</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"nginx-作高性能反向代理服务器\"><a href=\"#nginx-作高性能反向代理服务器\" class=\"headerlink\" title=\"nginx 作高性能反向代理服务器\"></a>nginx 作高性能反向代理服务器</h2><p>nginx作为高性能的web服务器常常用于各种的反向代理和负载均衡服务器，但是今天遇到一个小小的问题为wordpress做一个动静分离需求。</p>\n<p>首先发现这个wordpress使用的url传参并不是使用的访问某个.php页面提交参数，而是直接将参数传给根域名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;192.168.1.1&#x2F;?s&#x3D;xxx</span><br></pre></td></tr></table></figure>\n<p>如果传统的简单访问某个动态语言编写的页面nginx是非常简单直接写一个类似：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ *\\.php $ &#123;</span><br><span class=\"line\">         proxy_pass http:&#x2F;&#x2F;server_group;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<p>就可以将参数传递给了动态服务器。</p>\n<p>但是基于这个wordpress的需求我们需要将这么写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> location &#x2F; &#123;</span><br><span class=\"line\">                index index.html index.htm;</span><br><span class=\"line\">                proxy_pass http:&#x2F;&#x2F;html_server_group;</span><br><span class=\"line\">                    if ($query_string ~* &quot;s&#x3D;(.*)$&quot;)&#123;</span><br><span class=\"line\">                        proxy_pass http:&#x2F;&#x2F;server_group;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">#这里$query_string是传参字符串，s是wp系统中指定的传参变量，（.*）正则表示接受后面所有的字符串，如果多个变量以此类推。</span><br></pre></td></tr></table></figure>\n\n<p>这里我们因为实验环境，使用了ngrok把内网服务器映射到了公网，但是我们的nginx代理服务器在google vps上，这时需要在nginx中使用dns解析内网域名。</p>\n<p>首先在conf中写入dns解析服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolver 8.8.8.8; #使用google的dns解析域名</span><br></pre></td></tr></table></figure>\n<p>然后写location /为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location &#x2F; &#123;</span><br><span class=\"line\">                index index.html index.htm;</span><br><span class=\"line\">                proxy_pass http:&#x2F;&#x2F;html_server_group;</span><br><span class=\"line\">                set $serverin e338a4fb64e2.ngrok.io; #定义serverin变量为映射域名</span><br><span class=\"line\">                    if ($query_string ~* &quot;s&#x3D;(.*)$&quot;)&#123;</span><br><span class=\"line\">                       proxy_pass http:&#x2F;&#x2F;$serverin; </span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                     &#125;</span><br></pre></td></tr></table></figure>\n<p>测试通过</p>\n"},{"title":"Pyspider+python-Wordpress-xmlrpc爬取自动发布","date":"2020-08-08T03:06:40.000Z","_content":"## Pyspider+python-wordpress-xmlrpc 爬取站点自动发布\nPyspider内代码：\n```\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n# Created on 2020-08-07 01:19:41\n# Project: xxxxxx\n\nfrom pyspider.libs.base_handler import *\nimport re\nDIR_PATH = '/var/www/html/mystaticsite/downimages/'\n\n#coding:utf-8\nfrom wordpress_xmlrpc import Client, WordPressPost\nfrom wordpress_xmlrpc.methods.posts import GetPosts, NewPost\nfrom wordpress_xmlrpc.methods.users import GetUserInfo\nfrom wordpress_xmlrpc.methods import posts\nfrom wordpress_xmlrpc.methods import taxonomies\nfrom wordpress_xmlrpc import WordPressTerm\nfrom wordpress_xmlrpc.compat import xmlrpc_client\nfrom wordpress_xmlrpc.methods import media, posts\n\n#import importlib\n#importlib.reload(sys)\n#sys.setdefaultencoding('utf-8') #python3下不支持该用法\n\nclass Handler(BaseHandler):\n    crawl_config = {\n    }\n    \n    def __init__(self):#继承Deal类\n        self.deal = Deal()\n        \n    @every(minutes=24 * 60)\n    def on_start(self):\n        self.crawl('https://www.xxxxxx.com/news/index.html', callback=self.index_page)\n\n    @config(age=10 * 24 * 60 * 60)\n    def index_page(self, response):\n        for each in response.doc('h3 > a').items():\n            self.crawl(each.attr.href, callback=self.detail_page)\n\n    @config(priority=2)\n    def detail_page(self, response):\n        title = response.doc('h1').text(),\n        tmp_text = response.doc('.loadimg.fadeInUp > p').text(),\n        tmp_text = ''.join(str(tmp_text)) #将元组数据转换为字符串\n        tmp_text = tmp_text.replace(\"下面我们一起来看看她最新的番号作品吧！\",\"\") \n        new_text = tmp_text.replace(\"('  \",\"\")#清洗掉原文中的标记\n        \n        for each in response.doc('.loadimg.fadeInUp > p > img').items():\n           img_url = each.attr.src        \n           if (\"xxxxxx\" in img_url): #过滤掉不在xxxxxx站点上的图片连接\n               split_url = img_url.split('/')\n               dir_name = split_url[-2] + '/'\n               dir_path = self.deal.mkDir(dir_name)\n               file_name = split_url[-1]\n               relativpath = '<img src=\"/downimages/' + dir_name + file_name + '\"><br>'#构建图片显示的相对路径\n               new_text = relativpath + new_text #将图片插入文章头部\n               self.crawl(img_url,callback=self.save_img, save={'dir_path':dir_path ,'file_name':file_name})\n        title = ''.join(str(title)) \n        title = title.replace(\"('\",\"\")\n        title = title.replace(\"',)\",\"\")\n        wp = Client('http://server/xmlrpc.php', 'username', 'password')\n        post = WordPressPost()\n        post.title = title\n        post.content = new_text\n        post.post_status = 'publish'\n        post.id = wp.call(posts.NewPost(post))\n        #print(\"爬取注入:\"+ post.id + \"post.title\")\n     \n   \n\n    def save_img(self,response): #保存图片\n        content = response.content\n        dir_path = response.save['dir_path']\n        file_name = response.save['file_name']\n        file_path = dir_path + '/' + file_name \n        self.deal.saveImg(content,file_path)\n \nimport os\n\nclass Deal:\n    def __init__(self):\n        self.path = DIR_PATH\n        if not self.path.endswith('/'):\n            self.path = self.path + '/'\n        if not os.path.exists(self.path):\n            os.makedirs(self.path)\n\n    def mkDir(self, path):\n        path = path.strip()\n        dir_path = self.path + path\n        exists = os.path.exists(dir_path)\n        if not exists:\n            os.makedirs(dir_path)\n            return dir_path\n        else:\n            return dir_path\n\n    def saveImg(self, content, path):\n        f = open(path, 'wb')\n        f.write(content)\n        f.close()\n\n    def saveBrief(self, content, dir_path, name):\n        file_name = dir_path + \"/\" + name + \".txt\"\n        f = open(file_name, \"w+\")\n        f.write(content.encode('utf-8'))\n\n    def getExtension(self, url):\n        extension = url.split('.')[-1]\n        return extension\n\n#        return {\n#            \"title\": title,\n#            \"contenttext\": contenttext,\n#            \n#        }\n\n```","source":"_posts/Pyspider-python-Wordpress-xmlrpc爬取自动发布.md","raw":"---\ntitle: Pyspider+python-Wordpress-xmlrpc爬取自动发布\ndate: 2020-08-08 11:06:40\ntags:\n- pyspider\n- wordpress\ncategories:\n- 编程\n---\n## Pyspider+python-wordpress-xmlrpc 爬取站点自动发布\nPyspider内代码：\n```\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n# Created on 2020-08-07 01:19:41\n# Project: xxxxxx\n\nfrom pyspider.libs.base_handler import *\nimport re\nDIR_PATH = '/var/www/html/mystaticsite/downimages/'\n\n#coding:utf-8\nfrom wordpress_xmlrpc import Client, WordPressPost\nfrom wordpress_xmlrpc.methods.posts import GetPosts, NewPost\nfrom wordpress_xmlrpc.methods.users import GetUserInfo\nfrom wordpress_xmlrpc.methods import posts\nfrom wordpress_xmlrpc.methods import taxonomies\nfrom wordpress_xmlrpc import WordPressTerm\nfrom wordpress_xmlrpc.compat import xmlrpc_client\nfrom wordpress_xmlrpc.methods import media, posts\n\n#import importlib\n#importlib.reload(sys)\n#sys.setdefaultencoding('utf-8') #python3下不支持该用法\n\nclass Handler(BaseHandler):\n    crawl_config = {\n    }\n    \n    def __init__(self):#继承Deal类\n        self.deal = Deal()\n        \n    @every(minutes=24 * 60)\n    def on_start(self):\n        self.crawl('https://www.xxxxxx.com/news/index.html', callback=self.index_page)\n\n    @config(age=10 * 24 * 60 * 60)\n    def index_page(self, response):\n        for each in response.doc('h3 > a').items():\n            self.crawl(each.attr.href, callback=self.detail_page)\n\n    @config(priority=2)\n    def detail_page(self, response):\n        title = response.doc('h1').text(),\n        tmp_text = response.doc('.loadimg.fadeInUp > p').text(),\n        tmp_text = ''.join(str(tmp_text)) #将元组数据转换为字符串\n        tmp_text = tmp_text.replace(\"下面我们一起来看看她最新的番号作品吧！\",\"\") \n        new_text = tmp_text.replace(\"('  \",\"\")#清洗掉原文中的标记\n        \n        for each in response.doc('.loadimg.fadeInUp > p > img').items():\n           img_url = each.attr.src        \n           if (\"xxxxxx\" in img_url): #过滤掉不在xxxxxx站点上的图片连接\n               split_url = img_url.split('/')\n               dir_name = split_url[-2] + '/'\n               dir_path = self.deal.mkDir(dir_name)\n               file_name = split_url[-1]\n               relativpath = '<img src=\"/downimages/' + dir_name + file_name + '\"><br>'#构建图片显示的相对路径\n               new_text = relativpath + new_text #将图片插入文章头部\n               self.crawl(img_url,callback=self.save_img, save={'dir_path':dir_path ,'file_name':file_name})\n        title = ''.join(str(title)) \n        title = title.replace(\"('\",\"\")\n        title = title.replace(\"',)\",\"\")\n        wp = Client('http://server/xmlrpc.php', 'username', 'password')\n        post = WordPressPost()\n        post.title = title\n        post.content = new_text\n        post.post_status = 'publish'\n        post.id = wp.call(posts.NewPost(post))\n        #print(\"爬取注入:\"+ post.id + \"post.title\")\n     \n   \n\n    def save_img(self,response): #保存图片\n        content = response.content\n        dir_path = response.save['dir_path']\n        file_name = response.save['file_name']\n        file_path = dir_path + '/' + file_name \n        self.deal.saveImg(content,file_path)\n \nimport os\n\nclass Deal:\n    def __init__(self):\n        self.path = DIR_PATH\n        if not self.path.endswith('/'):\n            self.path = self.path + '/'\n        if not os.path.exists(self.path):\n            os.makedirs(self.path)\n\n    def mkDir(self, path):\n        path = path.strip()\n        dir_path = self.path + path\n        exists = os.path.exists(dir_path)\n        if not exists:\n            os.makedirs(dir_path)\n            return dir_path\n        else:\n            return dir_path\n\n    def saveImg(self, content, path):\n        f = open(path, 'wb')\n        f.write(content)\n        f.close()\n\n    def saveBrief(self, content, dir_path, name):\n        file_name = dir_path + \"/\" + name + \".txt\"\n        f = open(file_name, \"w+\")\n        f.write(content.encode('utf-8'))\n\n    def getExtension(self, url):\n        extension = url.split('.')[-1]\n        return extension\n\n#        return {\n#            \"title\": title,\n#            \"contenttext\": contenttext,\n#            \n#        }\n\n```","slug":"Pyspider-python-Wordpress-xmlrpc爬取自动发布","published":1,"updated":"2020-08-08T03:11:58.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke7zqgbo0006in3d6c78bgdb","content":"<h2 id=\"Pyspider-python-wordpress-xmlrpc-爬取站点自动发布\"><a href=\"#Pyspider-python-wordpress-xmlrpc-爬取站点自动发布\" class=\"headerlink\" title=\"Pyspider+python-wordpress-xmlrpc 爬取站点自动发布\"></a>Pyspider+python-wordpress-xmlrpc 爬取站点自动发布</h2><p>Pyspider内代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class=\"line\"># -*- encoding: utf-8 -*-</span><br><span class=\"line\"># Created on 2020-08-07 01:19:41</span><br><span class=\"line\"># Project: xxxxxx</span><br><span class=\"line\"></span><br><span class=\"line\">from pyspider.libs.base_handler import *</span><br><span class=\"line\">import re</span><br><span class=\"line\">DIR_PATH &#x3D; &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;mystaticsite&#x2F;downimages&#x2F;&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">from wordpress_xmlrpc import Client, WordPressPost</span><br><span class=\"line\">from wordpress_xmlrpc.methods.posts import GetPosts, NewPost</span><br><span class=\"line\">from wordpress_xmlrpc.methods.users import GetUserInfo</span><br><span class=\"line\">from wordpress_xmlrpc.methods import posts</span><br><span class=\"line\">from wordpress_xmlrpc.methods import taxonomies</span><br><span class=\"line\">from wordpress_xmlrpc import WordPressTerm</span><br><span class=\"line\">from wordpress_xmlrpc.compat import xmlrpc_client</span><br><span class=\"line\">from wordpress_xmlrpc.methods import media, posts</span><br><span class=\"line\"></span><br><span class=\"line\">#import importlib</span><br><span class=\"line\">#importlib.reload(sys)</span><br><span class=\"line\">#sys.setdefaultencoding(&#39;utf-8&#39;) #python3下不支持该用法</span><br><span class=\"line\"></span><br><span class=\"line\">class Handler(BaseHandler):</span><br><span class=\"line\">    crawl_config &#x3D; &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    def __init__(self):#继承Deal类</span><br><span class=\"line\">        self.deal &#x3D; Deal()</span><br><span class=\"line\">        </span><br><span class=\"line\">    @every(minutes&#x3D;24 * 60)</span><br><span class=\"line\">    def on_start(self):</span><br><span class=\"line\">        self.crawl(&#39;https:&#x2F;&#x2F;www.xxxxxx.com&#x2F;news&#x2F;index.html&#39;, callback&#x3D;self.index_page)</span><br><span class=\"line\"></span><br><span class=\"line\">    @config(age&#x3D;10 * 24 * 60 * 60)</span><br><span class=\"line\">    def index_page(self, response):</span><br><span class=\"line\">        for each in response.doc(&#39;h3 &gt; a&#39;).items():</span><br><span class=\"line\">            self.crawl(each.attr.href, callback&#x3D;self.detail_page)</span><br><span class=\"line\"></span><br><span class=\"line\">    @config(priority&#x3D;2)</span><br><span class=\"line\">    def detail_page(self, response):</span><br><span class=\"line\">        title &#x3D; response.doc(&#39;h1&#39;).text(),</span><br><span class=\"line\">        tmp_text &#x3D; response.doc(&#39;.loadimg.fadeInUp &gt; p&#39;).text(),</span><br><span class=\"line\">        tmp_text &#x3D; &#39;&#39;.join(str(tmp_text)) #将元组数据转换为字符串</span><br><span class=\"line\">        tmp_text &#x3D; tmp_text.replace(&quot;下面我们一起来看看她最新的番号作品吧！&quot;,&quot;&quot;) </span><br><span class=\"line\">        new_text &#x3D; tmp_text.replace(&quot;(&#39;  &quot;,&quot;&quot;)#清洗掉原文中的标记</span><br><span class=\"line\">        </span><br><span class=\"line\">        for each in response.doc(&#39;.loadimg.fadeInUp &gt; p &gt; img&#39;).items():</span><br><span class=\"line\">           img_url &#x3D; each.attr.src        </span><br><span class=\"line\">           if (&quot;xxxxxx&quot; in img_url): #过滤掉不在xxxxxx站点上的图片连接</span><br><span class=\"line\">               split_url &#x3D; img_url.split(&#39;&#x2F;&#39;)</span><br><span class=\"line\">               dir_name &#x3D; split_url[-2] + &#39;&#x2F;&#39;</span><br><span class=\"line\">               dir_path &#x3D; self.deal.mkDir(dir_name)</span><br><span class=\"line\">               file_name &#x3D; split_url[-1]</span><br><span class=\"line\">               relativpath &#x3D; &#39;&lt;img src&#x3D;&quot;&#x2F;downimages&#x2F;&#39; + dir_name + file_name + &#39;&quot;&gt;&lt;br&gt;&#39;#构建图片显示的相对路径</span><br><span class=\"line\">               new_text &#x3D; relativpath + new_text #将图片插入文章头部</span><br><span class=\"line\">               self.crawl(img_url,callback&#x3D;self.save_img, save&#x3D;&#123;&#39;dir_path&#39;:dir_path ,&#39;file_name&#39;:file_name&#125;)</span><br><span class=\"line\">        title &#x3D; &#39;&#39;.join(str(title)) </span><br><span class=\"line\">        title &#x3D; title.replace(&quot;(&#39;&quot;,&quot;&quot;)</span><br><span class=\"line\">        title &#x3D; title.replace(&quot;&#39;,)&quot;,&quot;&quot;)</span><br><span class=\"line\">        wp &#x3D; Client(&#39;http:&#x2F;&#x2F;server&#x2F;xmlrpc.php&#39;, &#39;username&#39;, &#39;password&#39;)</span><br><span class=\"line\">        post &#x3D; WordPressPost()</span><br><span class=\"line\">        post.title &#x3D; title</span><br><span class=\"line\">        post.content &#x3D; new_text</span><br><span class=\"line\">        post.post_status &#x3D; &#39;publish&#39;</span><br><span class=\"line\">        post.id &#x3D; wp.call(posts.NewPost(post))</span><br><span class=\"line\">        #print(&quot;爬取注入:&quot;+ post.id + &quot;post.title&quot;)</span><br><span class=\"line\">     </span><br><span class=\"line\">   </span><br><span class=\"line\"></span><br><span class=\"line\">    def save_img(self,response): #保存图片</span><br><span class=\"line\">        content &#x3D; response.content</span><br><span class=\"line\">        dir_path &#x3D; response.save[&#39;dir_path&#39;]</span><br><span class=\"line\">        file_name &#x3D; response.save[&#39;file_name&#39;]</span><br><span class=\"line\">        file_path &#x3D; dir_path + &#39;&#x2F;&#39; + file_name </span><br><span class=\"line\">        self.deal.saveImg(content,file_path)</span><br><span class=\"line\"> </span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">class Deal:</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.path &#x3D; DIR_PATH</span><br><span class=\"line\">        if not self.path.endswith(&#39;&#x2F;&#39;):</span><br><span class=\"line\">            self.path &#x3D; self.path + &#39;&#x2F;&#39;</span><br><span class=\"line\">        if not os.path.exists(self.path):</span><br><span class=\"line\">            os.makedirs(self.path)</span><br><span class=\"line\"></span><br><span class=\"line\">    def mkDir(self, path):</span><br><span class=\"line\">        path &#x3D; path.strip()</span><br><span class=\"line\">        dir_path &#x3D; self.path + path</span><br><span class=\"line\">        exists &#x3D; os.path.exists(dir_path)</span><br><span class=\"line\">        if not exists:</span><br><span class=\"line\">            os.makedirs(dir_path)</span><br><span class=\"line\">            return dir_path</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return dir_path</span><br><span class=\"line\"></span><br><span class=\"line\">    def saveImg(self, content, path):</span><br><span class=\"line\">        f &#x3D; open(path, &#39;wb&#39;)</span><br><span class=\"line\">        f.write(content)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    def saveBrief(self, content, dir_path, name):</span><br><span class=\"line\">        file_name &#x3D; dir_path + &quot;&#x2F;&quot; + name + &quot;.txt&quot;</span><br><span class=\"line\">        f &#x3D; open(file_name, &quot;w+&quot;)</span><br><span class=\"line\">        f.write(content.encode(&#39;utf-8&#39;))</span><br><span class=\"line\"></span><br><span class=\"line\">    def getExtension(self, url):</span><br><span class=\"line\">        extension &#x3D; url.split(&#39;.&#39;)[-1]</span><br><span class=\"line\">        return extension</span><br><span class=\"line\"></span><br><span class=\"line\">#        return &#123;</span><br><span class=\"line\">#            &quot;title&quot;: title,</span><br><span class=\"line\">#            &quot;contenttext&quot;: contenttext,</span><br><span class=\"line\">#            </span><br><span class=\"line\">#        &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Pyspider-python-wordpress-xmlrpc-爬取站点自动发布\"><a href=\"#Pyspider-python-wordpress-xmlrpc-爬取站点自动发布\" class=\"headerlink\" title=\"Pyspider+python-wordpress-xmlrpc 爬取站点自动发布\"></a>Pyspider+python-wordpress-xmlrpc 爬取站点自动发布</h2><p>Pyspider内代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class=\"line\"># -*- encoding: utf-8 -*-</span><br><span class=\"line\"># Created on 2020-08-07 01:19:41</span><br><span class=\"line\"># Project: xxxxxx</span><br><span class=\"line\"></span><br><span class=\"line\">from pyspider.libs.base_handler import *</span><br><span class=\"line\">import re</span><br><span class=\"line\">DIR_PATH &#x3D; &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;mystaticsite&#x2F;downimages&#x2F;&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">from wordpress_xmlrpc import Client, WordPressPost</span><br><span class=\"line\">from wordpress_xmlrpc.methods.posts import GetPosts, NewPost</span><br><span class=\"line\">from wordpress_xmlrpc.methods.users import GetUserInfo</span><br><span class=\"line\">from wordpress_xmlrpc.methods import posts</span><br><span class=\"line\">from wordpress_xmlrpc.methods import taxonomies</span><br><span class=\"line\">from wordpress_xmlrpc import WordPressTerm</span><br><span class=\"line\">from wordpress_xmlrpc.compat import xmlrpc_client</span><br><span class=\"line\">from wordpress_xmlrpc.methods import media, posts</span><br><span class=\"line\"></span><br><span class=\"line\">#import importlib</span><br><span class=\"line\">#importlib.reload(sys)</span><br><span class=\"line\">#sys.setdefaultencoding(&#39;utf-8&#39;) #python3下不支持该用法</span><br><span class=\"line\"></span><br><span class=\"line\">class Handler(BaseHandler):</span><br><span class=\"line\">    crawl_config &#x3D; &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    def __init__(self):#继承Deal类</span><br><span class=\"line\">        self.deal &#x3D; Deal()</span><br><span class=\"line\">        </span><br><span class=\"line\">    @every(minutes&#x3D;24 * 60)</span><br><span class=\"line\">    def on_start(self):</span><br><span class=\"line\">        self.crawl(&#39;https:&#x2F;&#x2F;www.xxxxxx.com&#x2F;news&#x2F;index.html&#39;, callback&#x3D;self.index_page)</span><br><span class=\"line\"></span><br><span class=\"line\">    @config(age&#x3D;10 * 24 * 60 * 60)</span><br><span class=\"line\">    def index_page(self, response):</span><br><span class=\"line\">        for each in response.doc(&#39;h3 &gt; a&#39;).items():</span><br><span class=\"line\">            self.crawl(each.attr.href, callback&#x3D;self.detail_page)</span><br><span class=\"line\"></span><br><span class=\"line\">    @config(priority&#x3D;2)</span><br><span class=\"line\">    def detail_page(self, response):</span><br><span class=\"line\">        title &#x3D; response.doc(&#39;h1&#39;).text(),</span><br><span class=\"line\">        tmp_text &#x3D; response.doc(&#39;.loadimg.fadeInUp &gt; p&#39;).text(),</span><br><span class=\"line\">        tmp_text &#x3D; &#39;&#39;.join(str(tmp_text)) #将元组数据转换为字符串</span><br><span class=\"line\">        tmp_text &#x3D; tmp_text.replace(&quot;下面我们一起来看看她最新的番号作品吧！&quot;,&quot;&quot;) </span><br><span class=\"line\">        new_text &#x3D; tmp_text.replace(&quot;(&#39;  &quot;,&quot;&quot;)#清洗掉原文中的标记</span><br><span class=\"line\">        </span><br><span class=\"line\">        for each in response.doc(&#39;.loadimg.fadeInUp &gt; p &gt; img&#39;).items():</span><br><span class=\"line\">           img_url &#x3D; each.attr.src        </span><br><span class=\"line\">           if (&quot;xxxxxx&quot; in img_url): #过滤掉不在xxxxxx站点上的图片连接</span><br><span class=\"line\">               split_url &#x3D; img_url.split(&#39;&#x2F;&#39;)</span><br><span class=\"line\">               dir_name &#x3D; split_url[-2] + &#39;&#x2F;&#39;</span><br><span class=\"line\">               dir_path &#x3D; self.deal.mkDir(dir_name)</span><br><span class=\"line\">               file_name &#x3D; split_url[-1]</span><br><span class=\"line\">               relativpath &#x3D; &#39;&lt;img src&#x3D;&quot;&#x2F;downimages&#x2F;&#39; + dir_name + file_name + &#39;&quot;&gt;&lt;br&gt;&#39;#构建图片显示的相对路径</span><br><span class=\"line\">               new_text &#x3D; relativpath + new_text #将图片插入文章头部</span><br><span class=\"line\">               self.crawl(img_url,callback&#x3D;self.save_img, save&#x3D;&#123;&#39;dir_path&#39;:dir_path ,&#39;file_name&#39;:file_name&#125;)</span><br><span class=\"line\">        title &#x3D; &#39;&#39;.join(str(title)) </span><br><span class=\"line\">        title &#x3D; title.replace(&quot;(&#39;&quot;,&quot;&quot;)</span><br><span class=\"line\">        title &#x3D; title.replace(&quot;&#39;,)&quot;,&quot;&quot;)</span><br><span class=\"line\">        wp &#x3D; Client(&#39;http:&#x2F;&#x2F;server&#x2F;xmlrpc.php&#39;, &#39;username&#39;, &#39;password&#39;)</span><br><span class=\"line\">        post &#x3D; WordPressPost()</span><br><span class=\"line\">        post.title &#x3D; title</span><br><span class=\"line\">        post.content &#x3D; new_text</span><br><span class=\"line\">        post.post_status &#x3D; &#39;publish&#39;</span><br><span class=\"line\">        post.id &#x3D; wp.call(posts.NewPost(post))</span><br><span class=\"line\">        #print(&quot;爬取注入:&quot;+ post.id + &quot;post.title&quot;)</span><br><span class=\"line\">     </span><br><span class=\"line\">   </span><br><span class=\"line\"></span><br><span class=\"line\">    def save_img(self,response): #保存图片</span><br><span class=\"line\">        content &#x3D; response.content</span><br><span class=\"line\">        dir_path &#x3D; response.save[&#39;dir_path&#39;]</span><br><span class=\"line\">        file_name &#x3D; response.save[&#39;file_name&#39;]</span><br><span class=\"line\">        file_path &#x3D; dir_path + &#39;&#x2F;&#39; + file_name </span><br><span class=\"line\">        self.deal.saveImg(content,file_path)</span><br><span class=\"line\"> </span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">class Deal:</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.path &#x3D; DIR_PATH</span><br><span class=\"line\">        if not self.path.endswith(&#39;&#x2F;&#39;):</span><br><span class=\"line\">            self.path &#x3D; self.path + &#39;&#x2F;&#39;</span><br><span class=\"line\">        if not os.path.exists(self.path):</span><br><span class=\"line\">            os.makedirs(self.path)</span><br><span class=\"line\"></span><br><span class=\"line\">    def mkDir(self, path):</span><br><span class=\"line\">        path &#x3D; path.strip()</span><br><span class=\"line\">        dir_path &#x3D; self.path + path</span><br><span class=\"line\">        exists &#x3D; os.path.exists(dir_path)</span><br><span class=\"line\">        if not exists:</span><br><span class=\"line\">            os.makedirs(dir_path)</span><br><span class=\"line\">            return dir_path</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return dir_path</span><br><span class=\"line\"></span><br><span class=\"line\">    def saveImg(self, content, path):</span><br><span class=\"line\">        f &#x3D; open(path, &#39;wb&#39;)</span><br><span class=\"line\">        f.write(content)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    def saveBrief(self, content, dir_path, name):</span><br><span class=\"line\">        file_name &#x3D; dir_path + &quot;&#x2F;&quot; + name + &quot;.txt&quot;</span><br><span class=\"line\">        f &#x3D; open(file_name, &quot;w+&quot;)</span><br><span class=\"line\">        f.write(content.encode(&#39;utf-8&#39;))</span><br><span class=\"line\"></span><br><span class=\"line\">    def getExtension(self, url):</span><br><span class=\"line\">        extension &#x3D; url.split(&#39;.&#39;)[-1]</span><br><span class=\"line\">        return extension</span><br><span class=\"line\"></span><br><span class=\"line\">#        return &#123;</span><br><span class=\"line\">#            &quot;title&quot;: title,</span><br><span class=\"line\">#            &quot;contenttext&quot;: contenttext,</span><br><span class=\"line\">#            </span><br><span class=\"line\">#        &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Ubuntu中配置Mail命令使用外部STMP发送邮件","date":"2020-08-17T04:15:43.000Z","_content":"# Ubuntu中配置mail命令使用外部的stmp发送邮件\n因为在日常运维过程中我们需要使用mail命令，实时的发送服务器的一些状态参数或者监控服务器的运行状态，所以在mail的日常应用中还是非常的高频，鉴于我们做的站点大部分不开启自己本身的邮箱服务所以我们还是尽量使用外部的stmp邮箱服务来完成我们这个发信过程。\n\n！！！注意！！！Ubuntu于其他发行版的不同，需要注意安装mail命令和相关软件包时的几个坑\n\n### 1.安装heirloom-mailx mailutils\n需要将\n```\ndeb http://cz.archive.ubuntu.com/ubuntu xenial main universe\n```\n添加到/etc/apt/sources.list中并执行apt-get update后再apt install heirloom-mailx mailutils\n\n因为heirloom-mailx并不在官方的源内。\n\n### 2.修改配置文件 /etc/s-nail.rc\n添加如下配置\n```\nset from=xxx@xxx.com                  #设置发送邮箱\nset smtp=smtps://smtp.xxx.com         #设置smtp服务器和端口\nset smtp-auth-user=cm@xxx.com         #设置用户名，记得加域名啊\nset smtp-auth-password=xxxxx          #邮箱授权码\nset smtp-auth=xxx@xxx.com             #用户名\n```\n\n### 3.修改服务器的主机名称\n```\n$> hostname\nxxxxx\n```\n一般VPS的名称大部分为一个无序字符串组成，这个字符串在发信时会不符合目的邮件服务器的要求一般会出现550错误，126会出现以下的：\n```\n<<< 550 MI:IMF 126 mx2,IMmowACXz0un8TlfJMPIAg--.47921S3 1597632936 http://mail.163.com/help/help_spam_16.htm?ip=173.82.56.165&hostid=mx2&time=1597632936\n```\ngoogle也是会出现类似的550错误，这个错误是因为我们的主机名不符合邮件服务器的要求，将你的主机名修改xxx.com类似的形式即可发信成功\n\n```\nhostname xxx.xxx.com\n#临时修改主机名，重启后恢复原字符串主机名\n```\n或者可以\n```\nvim /etc/hostname\n#永久修改为xxx.xxx.com 注意需reboot重启。\n```\n\n### 4.注意尽量使用邮箱给的授权码，不要使用邮箱的登录码\n","source":"_posts/Ubuntu中配置Mail命令使用外部STMP发送邮件.md","raw":"---\ntitle: Ubuntu中配置Mail命令使用外部STMP发送邮件\ndate: 2020-08-17 12:15:43\ntags:\n- Ubuntu\n- Linux\ncategories:\n- 运维\n---\n# Ubuntu中配置mail命令使用外部的stmp发送邮件\n因为在日常运维过程中我们需要使用mail命令，实时的发送服务器的一些状态参数或者监控服务器的运行状态，所以在mail的日常应用中还是非常的高频，鉴于我们做的站点大部分不开启自己本身的邮箱服务所以我们还是尽量使用外部的stmp邮箱服务来完成我们这个发信过程。\n\n！！！注意！！！Ubuntu于其他发行版的不同，需要注意安装mail命令和相关软件包时的几个坑\n\n### 1.安装heirloom-mailx mailutils\n需要将\n```\ndeb http://cz.archive.ubuntu.com/ubuntu xenial main universe\n```\n添加到/etc/apt/sources.list中并执行apt-get update后再apt install heirloom-mailx mailutils\n\n因为heirloom-mailx并不在官方的源内。\n\n### 2.修改配置文件 /etc/s-nail.rc\n添加如下配置\n```\nset from=xxx@xxx.com                  #设置发送邮箱\nset smtp=smtps://smtp.xxx.com         #设置smtp服务器和端口\nset smtp-auth-user=cm@xxx.com         #设置用户名，记得加域名啊\nset smtp-auth-password=xxxxx          #邮箱授权码\nset smtp-auth=xxx@xxx.com             #用户名\n```\n\n### 3.修改服务器的主机名称\n```\n$> hostname\nxxxxx\n```\n一般VPS的名称大部分为一个无序字符串组成，这个字符串在发信时会不符合目的邮件服务器的要求一般会出现550错误，126会出现以下的：\n```\n<<< 550 MI:IMF 126 mx2,IMmowACXz0un8TlfJMPIAg--.47921S3 1597632936 http://mail.163.com/help/help_spam_16.htm?ip=173.82.56.165&hostid=mx2&time=1597632936\n```\ngoogle也是会出现类似的550错误，这个错误是因为我们的主机名不符合邮件服务器的要求，将你的主机名修改xxx.com类似的形式即可发信成功\n\n```\nhostname xxx.xxx.com\n#临时修改主机名，重启后恢复原字符串主机名\n```\n或者可以\n```\nvim /etc/hostname\n#永久修改为xxx.xxx.com 注意需reboot重启。\n```\n\n### 4.注意尽量使用邮箱给的授权码，不要使用邮箱的登录码\n","slug":"Ubuntu中配置Mail命令使用外部STMP发送邮件","published":1,"updated":"2020-08-17T04:37:03.645Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke7zqgbp0007in3dbimn2r8t","content":"<h1 id=\"Ubuntu中配置mail命令使用外部的stmp发送邮件\"><a href=\"#Ubuntu中配置mail命令使用外部的stmp发送邮件\" class=\"headerlink\" title=\"Ubuntu中配置mail命令使用外部的stmp发送邮件\"></a>Ubuntu中配置mail命令使用外部的stmp发送邮件</h1><p>因为在日常运维过程中我们需要使用mail命令，实时的发送服务器的一些状态参数或者监控服务器的运行状态，所以在mail的日常应用中还是非常的高频，鉴于我们做的站点大部分不开启自己本身的邮箱服务所以我们还是尽量使用外部的stmp邮箱服务来完成我们这个发信过程。</p>\n<p>！！！注意！！！Ubuntu于其他发行版的不同，需要注意安装mail命令和相关软件包时的几个坑</p>\n<h3 id=\"1-安装heirloom-mailx-mailutils\"><a href=\"#1-安装heirloom-mailx-mailutils\" class=\"headerlink\" title=\"1.安装heirloom-mailx mailutils\"></a>1.安装heirloom-mailx mailutils</h3><p>需要将</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http:&#x2F;&#x2F;cz.archive.ubuntu.com&#x2F;ubuntu xenial main universe</span><br></pre></td></tr></table></figure>\n<p>添加到/etc/apt/sources.list中并执行apt-get update后再apt install heirloom-mailx mailutils</p>\n<p>因为heirloom-mailx并不在官方的源内。</p>\n<h3 id=\"2-修改配置文件-etc-s-nail-rc\"><a href=\"#2-修改配置文件-etc-s-nail-rc\" class=\"headerlink\" title=\"2.修改配置文件 /etc/s-nail.rc\"></a>2.修改配置文件 /etc/s-nail.rc</h3><p>添加如下配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set from&#x3D;xxx@xxx.com                  #设置发送邮箱</span><br><span class=\"line\">set smtp&#x3D;smtps:&#x2F;&#x2F;smtp.xxx.com         #设置smtp服务器和端口</span><br><span class=\"line\">set smtp-auth-user&#x3D;cm@xxx.com         #设置用户名，记得加域名啊</span><br><span class=\"line\">set smtp-auth-password&#x3D;xxxxx          #邮箱授权码</span><br><span class=\"line\">set smtp-auth&#x3D;xxx@xxx.com             #用户名</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-修改服务器的主机名称\"><a href=\"#3-修改服务器的主机名称\" class=\"headerlink\" title=\"3.修改服务器的主机名称\"></a>3.修改服务器的主机名称</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; hostname</span><br><span class=\"line\">xxxxx</span><br></pre></td></tr></table></figure>\n<p>一般VPS的名称大部分为一个无序字符串组成，这个字符串在发信时会不符合目的邮件服务器的要求一般会出现550错误，126会出现以下的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;&lt; 550 MI:IMF 126 mx2,IMmowACXz0un8TlfJMPIAg--.47921S3 1597632936 http:&#x2F;&#x2F;mail.163.com&#x2F;help&#x2F;help_spam_16.htm?ip&#x3D;173.82.56.165&amp;hostid&#x3D;mx2&amp;time&#x3D;1597632936</span><br></pre></td></tr></table></figure>\n<p>google也是会出现类似的550错误，这个错误是因为我们的主机名不符合邮件服务器的要求，将你的主机名修改xxx.com类似的形式即可发信成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostname xxx.xxx.com</span><br><span class=\"line\">#临时修改主机名，重启后恢复原字符串主机名</span><br></pre></td></tr></table></figure>\n<p>或者可以</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;hostname</span><br><span class=\"line\">#永久修改为xxx.xxx.com 注意需reboot重启。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-注意尽量使用邮箱给的授权码，不要使用邮箱的登录码\"><a href=\"#4-注意尽量使用邮箱给的授权码，不要使用邮箱的登录码\" class=\"headerlink\" title=\"4.注意尽量使用邮箱给的授权码，不要使用邮箱的登录码\"></a>4.注意尽量使用邮箱给的授权码，不要使用邮箱的登录码</h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Ubuntu中配置mail命令使用外部的stmp发送邮件\"><a href=\"#Ubuntu中配置mail命令使用外部的stmp发送邮件\" class=\"headerlink\" title=\"Ubuntu中配置mail命令使用外部的stmp发送邮件\"></a>Ubuntu中配置mail命令使用外部的stmp发送邮件</h1><p>因为在日常运维过程中我们需要使用mail命令，实时的发送服务器的一些状态参数或者监控服务器的运行状态，所以在mail的日常应用中还是非常的高频，鉴于我们做的站点大部分不开启自己本身的邮箱服务所以我们还是尽量使用外部的stmp邮箱服务来完成我们这个发信过程。</p>\n<p>！！！注意！！！Ubuntu于其他发行版的不同，需要注意安装mail命令和相关软件包时的几个坑</p>\n<h3 id=\"1-安装heirloom-mailx-mailutils\"><a href=\"#1-安装heirloom-mailx-mailutils\" class=\"headerlink\" title=\"1.安装heirloom-mailx mailutils\"></a>1.安装heirloom-mailx mailutils</h3><p>需要将</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http:&#x2F;&#x2F;cz.archive.ubuntu.com&#x2F;ubuntu xenial main universe</span><br></pre></td></tr></table></figure>\n<p>添加到/etc/apt/sources.list中并执行apt-get update后再apt install heirloom-mailx mailutils</p>\n<p>因为heirloom-mailx并不在官方的源内。</p>\n<h3 id=\"2-修改配置文件-etc-s-nail-rc\"><a href=\"#2-修改配置文件-etc-s-nail-rc\" class=\"headerlink\" title=\"2.修改配置文件 /etc/s-nail.rc\"></a>2.修改配置文件 /etc/s-nail.rc</h3><p>添加如下配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set from&#x3D;xxx@xxx.com                  #设置发送邮箱</span><br><span class=\"line\">set smtp&#x3D;smtps:&#x2F;&#x2F;smtp.xxx.com         #设置smtp服务器和端口</span><br><span class=\"line\">set smtp-auth-user&#x3D;cm@xxx.com         #设置用户名，记得加域名啊</span><br><span class=\"line\">set smtp-auth-password&#x3D;xxxxx          #邮箱授权码</span><br><span class=\"line\">set smtp-auth&#x3D;xxx@xxx.com             #用户名</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-修改服务器的主机名称\"><a href=\"#3-修改服务器的主机名称\" class=\"headerlink\" title=\"3.修改服务器的主机名称\"></a>3.修改服务器的主机名称</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&gt; hostname</span><br><span class=\"line\">xxxxx</span><br></pre></td></tr></table></figure>\n<p>一般VPS的名称大部分为一个无序字符串组成，这个字符串在发信时会不符合目的邮件服务器的要求一般会出现550错误，126会出现以下的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt;&lt; 550 MI:IMF 126 mx2,IMmowACXz0un8TlfJMPIAg--.47921S3 1597632936 http:&#x2F;&#x2F;mail.163.com&#x2F;help&#x2F;help_spam_16.htm?ip&#x3D;173.82.56.165&amp;hostid&#x3D;mx2&amp;time&#x3D;1597632936</span><br></pre></td></tr></table></figure>\n<p>google也是会出现类似的550错误，这个错误是因为我们的主机名不符合邮件服务器的要求，将你的主机名修改xxx.com类似的形式即可发信成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostname xxx.xxx.com</span><br><span class=\"line\">#临时修改主机名，重启后恢复原字符串主机名</span><br></pre></td></tr></table></figure>\n<p>或者可以</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;hostname</span><br><span class=\"line\">#永久修改为xxx.xxx.com 注意需reboot重启。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-注意尽量使用邮箱给的授权码，不要使用邮箱的登录码\"><a href=\"#4-注意尽量使用邮箱给的授权码，不要使用邮箱的登录码\" class=\"headerlink\" title=\"4.注意尽量使用邮箱给的授权码，不要使用邮箱的登录码\"></a>4.注意尽量使用邮箱给的授权码，不要使用邮箱的登录码</h3>"},{"title":"MySQL8.0x的主从同步设置","date":"2020-08-14T02:47:37.000Z","_content":"手动导出主数据库sql文件导入到从数据库中保持数据和表结构的一致性。\n```\nmysqldump　-t　数据库名　-uroot　-p　>　xxx.sql　\n```\n主数据库\n```\nmysql>create user 'syncdata'@'localhost' identified by '1234567';\nmysql>grant replication slave on *.* to 'syncdata'@'127.0.0.1';\nmysql> show master status;\n+------------------+----------+--------------+------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n| mysql-bin.000001 |     1454 |              |                  |                   |\n+------------------+----------+--------------+------------------+-------------------+\n```\n从数据库\n```\nmysql --ssl-mode=DISABLED -h172.17.0.2 -uroot -p123456 --get-server-public-key\n#先获取主数据库秘钥，因为mysql修改了验证方式，不然会报错。\n```\n```\nmysql> change master to master_host='ip', master_port=16123, master_user='syncdata',master_password='1234567',master_log_file='mysql-bin.000001';\nmysql> show slave status\\G; #查看从数据库状态\n```\n指定数据库同步\n```\n从服务器\nmysql> change replication filter replicate_do_db=(base_name);\n```","source":"_posts/mysql8.0.x的主从同步设置.md","raw":"---\ntitle: MySQL8.0x的主从同步设置\ndate: 2020-08-14 10:47:37\ntags:\n---\n手动导出主数据库sql文件导入到从数据库中保持数据和表结构的一致性。\n```\nmysqldump　-t　数据库名　-uroot　-p　>　xxx.sql　\n```\n主数据库\n```\nmysql>create user 'syncdata'@'localhost' identified by '1234567';\nmysql>grant replication slave on *.* to 'syncdata'@'127.0.0.1';\nmysql> show master status;\n+------------------+----------+--------------+------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n| mysql-bin.000001 |     1454 |              |                  |                   |\n+------------------+----------+--------------+------------------+-------------------+\n```\n从数据库\n```\nmysql --ssl-mode=DISABLED -h172.17.0.2 -uroot -p123456 --get-server-public-key\n#先获取主数据库秘钥，因为mysql修改了验证方式，不然会报错。\n```\n```\nmysql> change master to master_host='ip', master_port=16123, master_user='syncdata',master_password='1234567',master_log_file='mysql-bin.000001';\nmysql> show slave status\\G; #查看从数据库状态\n```\n指定数据库同步\n```\n从服务器\nmysql> change replication filter replicate_do_db=(base_name);\n```","slug":"mysql8.0.x的主从同步设置","published":1,"updated":"2020-08-14T06:31:52.376Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke7zqgbq0008in3d0a8sbcnh","content":"<p>手动导出主数据库sql文件导入到从数据库中保持数据和表结构的一致性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump　-t　数据库名　-uroot　-p　&gt;　xxx.sql　</span><br></pre></td></tr></table></figure>\n<p>主数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;create user &#39;syncdata&#39;@&#39;localhost&#39; identified by &#39;1234567&#39;;</span><br><span class=\"line\">mysql&gt;grant replication slave on *.* to &#39;syncdata&#39;@&#39;127.0.0.1&#39;;</span><br><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| mysql-bin.000001 |     1454 |              |                  |                   |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br></pre></td></tr></table></figure>\n<p>从数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql --ssl-mode&#x3D;DISABLED -h172.17.0.2 -uroot -p123456 --get-server-public-key</span><br><span class=\"line\">#先获取主数据库秘钥，因为mysql修改了验证方式，不然会报错。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; change master to master_host&#x3D;&#39;ip&#39;, master_port&#x3D;16123, master_user&#x3D;&#39;syncdata&#39;,master_password&#x3D;&#39;1234567&#39;,master_log_file&#x3D;&#39;mysql-bin.000001&#39;;</span><br><span class=\"line\">mysql&gt; show slave status\\G; #查看从数据库状态</span><br></pre></td></tr></table></figure>\n<p>指定数据库同步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从服务器</span><br><span class=\"line\">mysql&gt; change replication filter replicate_do_db&#x3D;(base_name);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>手动导出主数据库sql文件导入到从数据库中保持数据和表结构的一致性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump　-t　数据库名　-uroot　-p　&gt;　xxx.sql　</span><br></pre></td></tr></table></figure>\n<p>主数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;create user &#39;syncdata&#39;@&#39;localhost&#39; identified by &#39;1234567&#39;;</span><br><span class=\"line\">mysql&gt;grant replication slave on *.* to &#39;syncdata&#39;@&#39;127.0.0.1&#39;;</span><br><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| mysql-bin.000001 |     1454 |              |                  |                   |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br></pre></td></tr></table></figure>\n<p>从数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql --ssl-mode&#x3D;DISABLED -h172.17.0.2 -uroot -p123456 --get-server-public-key</span><br><span class=\"line\">#先获取主数据库秘钥，因为mysql修改了验证方式，不然会报错。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; change master to master_host&#x3D;&#39;ip&#39;, master_port&#x3D;16123, master_user&#x3D;&#39;syncdata&#39;,master_password&#x3D;&#39;1234567&#39;,master_log_file&#x3D;&#39;mysql-bin.000001&#39;;</span><br><span class=\"line\">mysql&gt; show slave status\\G; #查看从数据库状态</span><br></pre></td></tr></table></figure>\n<p>指定数据库同步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从服务器</span><br><span class=\"line\">mysql&gt; change replication filter replicate_do_db&#x3D;(base_name);</span><br></pre></td></tr></table></figure>"},{"title":"rsync同步基本配置（基础知识）","date":"2020-08-03T02:04:38.000Z","_content":"\n## rrsync同步基本配置（基础知识）\n### Ubuntu 20.x 环境\n### 服务器端：\n```\n\t[123]\n  comment = 123 static html files server\n\tpath = /var/www/html/site\n\tuse chroot = no\n\tmax connections=20\n\tlock file = /var/lock/rsyncd\n\tread only = yes\n\tlist = yes\n\tuid = 0\n\tgid = 0\n      auth users = 123clint\n      secrets file = /etc/rsyncd.secrets\n      strict modes = yes\n      port=873\n\tignore errors = yes\n\tignore nonreadable = yes\n\ttransfer logging = yes\n\ttimeout = 600\n\trefuse options = checksum dry-run\n\tdont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz\n```\n增加/etc/rsyncd.secrets文件\n```\n123clint：密码123456\n```\n启动服务器：\n```\n/etc/init.d/rsync --daemon\n```\n### 客户端：\n增加/etc/rsyncd.secrets文件\n```\n密码123456\n```\n\n客户端连接服务器命令\n```\nrsync -vzrtopg --delete --progress 123clint@服务器地址::123 /var/www/staichtml（客户端备份目录位置） --password-file=/etc/rsyncd.secrets\n```\n **注意**\n客户端和服务器端的rsyncd.secrets 文件均需要chmod 600 权限\n```\nchmod 600 rsyncd.secrets \n```\n","source":"_posts/rsync同步基本配置（基础知识）.md","raw":"---\ntitle: 'rsync同步基本配置（基础知识）'\ndate: 2020-08-03 10:04:38\ntags: \n- Ubuntu\n- rsync\ncategories:\n- 运维\n---\n\n## rrsync同步基本配置（基础知识）\n### Ubuntu 20.x 环境\n### 服务器端：\n```\n\t[123]\n  comment = 123 static html files server\n\tpath = /var/www/html/site\n\tuse chroot = no\n\tmax connections=20\n\tlock file = /var/lock/rsyncd\n\tread only = yes\n\tlist = yes\n\tuid = 0\n\tgid = 0\n      auth users = 123clint\n      secrets file = /etc/rsyncd.secrets\n      strict modes = yes\n      port=873\n\tignore errors = yes\n\tignore nonreadable = yes\n\ttransfer logging = yes\n\ttimeout = 600\n\trefuse options = checksum dry-run\n\tdont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz\n```\n增加/etc/rsyncd.secrets文件\n```\n123clint：密码123456\n```\n启动服务器：\n```\n/etc/init.d/rsync --daemon\n```\n### 客户端：\n增加/etc/rsyncd.secrets文件\n```\n密码123456\n```\n\n客户端连接服务器命令\n```\nrsync -vzrtopg --delete --progress 123clint@服务器地址::123 /var/www/staichtml（客户端备份目录位置） --password-file=/etc/rsyncd.secrets\n```\n **注意**\n客户端和服务器端的rsyncd.secrets 文件均需要chmod 600 权限\n```\nchmod 600 rsyncd.secrets \n```\n","slug":"rsync同步基本配置（基础知识）","published":1,"updated":"2020-08-03T03:58:21.709Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke7zqgbs000bin3d7c758fcp","content":"<h2 id=\"rrsync同步基本配置（基础知识）\"><a href=\"#rrsync同步基本配置（基础知识）\" class=\"headerlink\" title=\"rrsync同步基本配置（基础知识）\"></a>rrsync同步基本配置（基础知识）</h2><h3 id=\"Ubuntu-20-x-环境\"><a href=\"#Ubuntu-20-x-环境\" class=\"headerlink\" title=\"Ubuntu 20.x 环境\"></a>Ubuntu 20.x 环境</h3><h3 id=\"服务器端：\"><a href=\"#服务器端：\" class=\"headerlink\" title=\"服务器端：\"></a>服务器端：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[123]</span><br><span class=\"line\"> comment &#x3D; 123 static html files server</span><br><span class=\"line\">path &#x3D; &#x2F;var&#x2F;www&#x2F;html&#x2F;site</span><br><span class=\"line\">use chroot &#x3D; no</span><br><span class=\"line\">max connections&#x3D;20</span><br><span class=\"line\">lock file &#x3D; &#x2F;var&#x2F;lock&#x2F;rsyncd</span><br><span class=\"line\">read only &#x3D; yes</span><br><span class=\"line\">list &#x3D; yes</span><br><span class=\"line\">uid &#x3D; 0</span><br><span class=\"line\">gid &#x3D; 0</span><br><span class=\"line\">     auth users &#x3D; 123clint</span><br><span class=\"line\">     secrets file &#x3D; &#x2F;etc&#x2F;rsyncd.secrets</span><br><span class=\"line\">     strict modes &#x3D; yes</span><br><span class=\"line\">     port&#x3D;873</span><br><span class=\"line\">ignore errors &#x3D; yes</span><br><span class=\"line\">ignore nonreadable &#x3D; yes</span><br><span class=\"line\">transfer logging &#x3D; yes</span><br><span class=\"line\">timeout &#x3D; 600</span><br><span class=\"line\">refuse options &#x3D; checksum dry-run</span><br><span class=\"line\">dont compress &#x3D; *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz</span><br></pre></td></tr></table></figure>\n<p>增加/etc/rsyncd.secrets文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">123clint：密码123456</span><br></pre></td></tr></table></figure>\n<p>启动服务器：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;etc&#x2F;init.d&#x2F;rsync --daemon</span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端：\"><a href=\"#客户端：\" class=\"headerlink\" title=\"客户端：\"></a>客户端：</h3><p>增加/etc/rsyncd.secrets文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">密码123456</span><br></pre></td></tr></table></figure>\n\n<p>客户端连接服务器命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync -vzrtopg --delete --progress 123clint@服务器地址::123 &#x2F;var&#x2F;www&#x2F;staichtml（客户端备份目录位置） --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br></pre></td></tr></table></figure>\n<p> <strong>注意</strong><br>客户端和服务器端的rsyncd.secrets 文件均需要chmod 600 权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 600 rsyncd.secrets </span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"rrsync同步基本配置（基础知识）\"><a href=\"#rrsync同步基本配置（基础知识）\" class=\"headerlink\" title=\"rrsync同步基本配置（基础知识）\"></a>rrsync同步基本配置（基础知识）</h2><h3 id=\"Ubuntu-20-x-环境\"><a href=\"#Ubuntu-20-x-环境\" class=\"headerlink\" title=\"Ubuntu 20.x 环境\"></a>Ubuntu 20.x 环境</h3><h3 id=\"服务器端：\"><a href=\"#服务器端：\" class=\"headerlink\" title=\"服务器端：\"></a>服务器端：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[123]</span><br><span class=\"line\"> comment &#x3D; 123 static html files server</span><br><span class=\"line\">path &#x3D; &#x2F;var&#x2F;www&#x2F;html&#x2F;site</span><br><span class=\"line\">use chroot &#x3D; no</span><br><span class=\"line\">max connections&#x3D;20</span><br><span class=\"line\">lock file &#x3D; &#x2F;var&#x2F;lock&#x2F;rsyncd</span><br><span class=\"line\">read only &#x3D; yes</span><br><span class=\"line\">list &#x3D; yes</span><br><span class=\"line\">uid &#x3D; 0</span><br><span class=\"line\">gid &#x3D; 0</span><br><span class=\"line\">     auth users &#x3D; 123clint</span><br><span class=\"line\">     secrets file &#x3D; &#x2F;etc&#x2F;rsyncd.secrets</span><br><span class=\"line\">     strict modes &#x3D; yes</span><br><span class=\"line\">     port&#x3D;873</span><br><span class=\"line\">ignore errors &#x3D; yes</span><br><span class=\"line\">ignore nonreadable &#x3D; yes</span><br><span class=\"line\">transfer logging &#x3D; yes</span><br><span class=\"line\">timeout &#x3D; 600</span><br><span class=\"line\">refuse options &#x3D; checksum dry-run</span><br><span class=\"line\">dont compress &#x3D; *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz</span><br></pre></td></tr></table></figure>\n<p>增加/etc/rsyncd.secrets文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">123clint：密码123456</span><br></pre></td></tr></table></figure>\n<p>启动服务器：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;etc&#x2F;init.d&#x2F;rsync --daemon</span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端：\"><a href=\"#客户端：\" class=\"headerlink\" title=\"客户端：\"></a>客户端：</h3><p>增加/etc/rsyncd.secrets文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">密码123456</span><br></pre></td></tr></table></figure>\n\n<p>客户端连接服务器命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync -vzrtopg --delete --progress 123clint@服务器地址::123 &#x2F;var&#x2F;www&#x2F;staichtml（客户端备份目录位置） --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br></pre></td></tr></table></figure>\n<p> <strong>注意</strong><br>客户端和服务器端的rsyncd.secrets 文件均需要chmod 600 权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 600 rsyncd.secrets </span><br></pre></td></tr></table></figure>\n"},{"title":"rsync+inofity内网向外网同步数据(一)","date":"2020-08-03T03:22:53.000Z","_content":"## 设计要求 \n- 内网web服务器生成html页面\n- 内网向外网同步生成的html页面和目录\n- 外网服务器纯静态资源访问\n\n## 系统环境\n- 内网 Ubuntu 20.x + Ngnix + PHP + Mysql + Wordpress\n- 外网 Ubuntu 20.x + Ngnix \n\n### 外网服务器配置\n外网服务器必须提供rsync --daemon服务以监听内网服务器发出的同步指令\n```\n[123]\n  comment = 123 static html files server\n\tpath = /var/www/staichtml/\n\tuse chroot = no\n\tmax connections=20\n\tlock file = /var/lock/rsyncd\n\tread only = no\n  write only = no\n\tlist = yes\n\tuid = rsync\n\tgid = rsync\n  auth users = rsync_clint\n  secrets file = /etc/rsyncd.secrets\n\tstrict modes = yes\n  port=873\n  pid file = /var/run/rsyncd.pid\n  log file = /var/log/rsyncd.log\n  log format = %t %a %m %f %b\n\tignore errors = yes\n\tignore nonreadable = yes\n\ttransfer logging = yes\n\ttimeout = 600\n\trefuse options = checksum dry-run\n\tdont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz\n\n```\n创建 /etc/rsyncd.secrets 并 chmod 600 权限\n```\nrsync_clint:密码123\n```\n添加一个系统用户为rsync的用户 *该用户不具备登录权限*\n\n    ```\n    useradd -s /sbin/nologin -M rsync\n    ```\n**！！！注意！！！必须 chmod 777 /var/www/staichtml/ 在实际操作中发现没有x权限rsync服务无法写入文件**\n\n### 内网服务器配置\n*略过相关web服务配置*\n创建 /etc/rsyncd.secrets 并 chmod 600 权限，仅存放密码使用\n```\n密码123\n```\n安装apt install inofity-tool\n\n编写简单实现的.sh文件并 chmod +x xxxx.sh\n```\n##测试代码：\n#!/bin/bash\nsrc=/var/www/html/mystaticsite/ #同步目录路径\nip=111.111.111.111\n\n/usr/bin/inotifywait -rm  --timefmt '%d/%m/%y %H:%M' --format '%T %w%f%e' -e modify,delete,create,attrib,move $src | while read file\n   do\n     rsync -avz --delete --progress $src rsync_clint@$ip::123 --password-file=/etc/rsyncd.secrets\n    echo \"${file} was rsynced\" >> /tmp/rsync.log 2>&1\n   done\n```\n```\n！！！注意！！！\n必须将$src的位置写在连接之前不能放在连接之后，不然外网服务器无法接受到文件。\n这一点与网上很多教程向左，卡了我两天多的时间才发现的:(\n```\n\n### 生产环境代码：\n```\n#!/bin/bash\n\nsrc=/var/www/html/ #同步目录路径\nuser=rsync_clint\nip1=7xx.xxx.xxx.xxx\nip2=1xx.xx.xxx.xx\ndes=123\npswfile=/etc/rsyncd.secrets\n\ncd ${src}\n/usr/bin/inotifywait -rmq  --format '%Xe %w%f' -e modify,delete,create,attrib,close_write,move ./ | while read file\n   do\n      INO_EVENT=$(echo $file | awk'{print $1}')\n      INO_FILE=$(echo $file | awk'{print $2}')\n      echo \"----------------${data}-----------------\"\n      echo $file\n      \n      if [[$INO_EVENT =~ 'CREATE']] || [[$INO_EVENT =~ 'MODIFY']] || [[$INO_EVENT =~ 'CLOSE_WRITE']] || [[$INO_EVENT =~ 'MOVE_TO']]\n      then\n          echo 'Creat or Modify or Close_write or Moved_to'\n          rsync -avzcR --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{1}::${des} &&\n          rsync -avzcR --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{2}::${des} \n      fi\n\n      if [[$INO_EVENT =~ 'DELETE']] || [[$INO_EVENT =~ 'MOVE_FROM']]\n      then\n          echo 'Delete or Moved_from'\n          rsync -avzR --delete --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{1}::${des} &&\n          rsync -avzR --delete --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{2}::${des}  \n      fi\n\n      if [[$INO_EVENT =~ 'ATTRIB']]\n      then\n          echo 'Attrib'\n          if [ !-d \"$INO_FILE\" ]\n          then\n            rsync -avzcR  --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{1}::${des} &&\n            rsync -avzcR  --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{2}::${des}\n          fi\n      fi\n\n   done\n```\n因为inotify不会监控到为启动时的变化，所以直接在crontab里增加一个2小时全量目录同步\n```\ncrontab -e\n* */2 * * * rsync -avz --password-file=/etc/rsyncd.secrets/var/www/html/  rsync_clint@1xxx.xxx.xxx.xxx::123 && rsync -avz --password-file=/etc/rsyncd.secrets /var/www/html/ rrsync_clint@7xx.xxx.xxx.xx::123\n\n```","source":"_posts/rsync-inofity内网向外网同步数据.md","raw":"---\ntitle: rsync+inofity内网向外网同步数据(一)\ndate: 2020-08-03 11:22:53\ntags:\n- Ubuntu\n- rsync\n- inotify\ncategories:\n- 运维\n---\n## 设计要求 \n- 内网web服务器生成html页面\n- 内网向外网同步生成的html页面和目录\n- 外网服务器纯静态资源访问\n\n## 系统环境\n- 内网 Ubuntu 20.x + Ngnix + PHP + Mysql + Wordpress\n- 外网 Ubuntu 20.x + Ngnix \n\n### 外网服务器配置\n外网服务器必须提供rsync --daemon服务以监听内网服务器发出的同步指令\n```\n[123]\n  comment = 123 static html files server\n\tpath = /var/www/staichtml/\n\tuse chroot = no\n\tmax connections=20\n\tlock file = /var/lock/rsyncd\n\tread only = no\n  write only = no\n\tlist = yes\n\tuid = rsync\n\tgid = rsync\n  auth users = rsync_clint\n  secrets file = /etc/rsyncd.secrets\n\tstrict modes = yes\n  port=873\n  pid file = /var/run/rsyncd.pid\n  log file = /var/log/rsyncd.log\n  log format = %t %a %m %f %b\n\tignore errors = yes\n\tignore nonreadable = yes\n\ttransfer logging = yes\n\ttimeout = 600\n\trefuse options = checksum dry-run\n\tdont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz\n\n```\n创建 /etc/rsyncd.secrets 并 chmod 600 权限\n```\nrsync_clint:密码123\n```\n添加一个系统用户为rsync的用户 *该用户不具备登录权限*\n\n    ```\n    useradd -s /sbin/nologin -M rsync\n    ```\n**！！！注意！！！必须 chmod 777 /var/www/staichtml/ 在实际操作中发现没有x权限rsync服务无法写入文件**\n\n### 内网服务器配置\n*略过相关web服务配置*\n创建 /etc/rsyncd.secrets 并 chmod 600 权限，仅存放密码使用\n```\n密码123\n```\n安装apt install inofity-tool\n\n编写简单实现的.sh文件并 chmod +x xxxx.sh\n```\n##测试代码：\n#!/bin/bash\nsrc=/var/www/html/mystaticsite/ #同步目录路径\nip=111.111.111.111\n\n/usr/bin/inotifywait -rm  --timefmt '%d/%m/%y %H:%M' --format '%T %w%f%e' -e modify,delete,create,attrib,move $src | while read file\n   do\n     rsync -avz --delete --progress $src rsync_clint@$ip::123 --password-file=/etc/rsyncd.secrets\n    echo \"${file} was rsynced\" >> /tmp/rsync.log 2>&1\n   done\n```\n```\n！！！注意！！！\n必须将$src的位置写在连接之前不能放在连接之后，不然外网服务器无法接受到文件。\n这一点与网上很多教程向左，卡了我两天多的时间才发现的:(\n```\n\n### 生产环境代码：\n```\n#!/bin/bash\n\nsrc=/var/www/html/ #同步目录路径\nuser=rsync_clint\nip1=7xx.xxx.xxx.xxx\nip2=1xx.xx.xxx.xx\ndes=123\npswfile=/etc/rsyncd.secrets\n\ncd ${src}\n/usr/bin/inotifywait -rmq  --format '%Xe %w%f' -e modify,delete,create,attrib,close_write,move ./ | while read file\n   do\n      INO_EVENT=$(echo $file | awk'{print $1}')\n      INO_FILE=$(echo $file | awk'{print $2}')\n      echo \"----------------${data}-----------------\"\n      echo $file\n      \n      if [[$INO_EVENT =~ 'CREATE']] || [[$INO_EVENT =~ 'MODIFY']] || [[$INO_EVENT =~ 'CLOSE_WRITE']] || [[$INO_EVENT =~ 'MOVE_TO']]\n      then\n          echo 'Creat or Modify or Close_write or Moved_to'\n          rsync -avzcR --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{1}::${des} &&\n          rsync -avzcR --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{2}::${des} \n      fi\n\n      if [[$INO_EVENT =~ 'DELETE']] || [[$INO_EVENT =~ 'MOVE_FROM']]\n      then\n          echo 'Delete or Moved_from'\n          rsync -avzR --delete --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{1}::${des} &&\n          rsync -avzR --delete --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{2}::${des}  \n      fi\n\n      if [[$INO_EVENT =~ 'ATTRIB']]\n      then\n          echo 'Attrib'\n          if [ !-d \"$INO_FILE\" ]\n          then\n            rsync -avzcR  --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{1}::${des} &&\n            rsync -avzcR  --password-file=${pswfile} $(dirname ${INO_FILE}) ${user}@$ip{2}::${des}\n          fi\n      fi\n\n   done\n```\n因为inotify不会监控到为启动时的变化，所以直接在crontab里增加一个2小时全量目录同步\n```\ncrontab -e\n* */2 * * * rsync -avz --password-file=/etc/rsyncd.secrets/var/www/html/  rsync_clint@1xxx.xxx.xxx.xxx::123 && rsync -avz --password-file=/etc/rsyncd.secrets /var/www/html/ rrsync_clint@7xx.xxx.xxx.xx::123\n\n```","slug":"rsync-inofity内网向外网同步数据","published":1,"updated":"2020-08-12T06:41:33.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke7zqgbt000cin3d4sqc0ek0","content":"<h2 id=\"设计要求\"><a href=\"#设计要求\" class=\"headerlink\" title=\"设计要求\"></a>设计要求</h2><ul>\n<li>内网web服务器生成html页面</li>\n<li>内网向外网同步生成的html页面和目录</li>\n<li>外网服务器纯静态资源访问</li>\n</ul>\n<h2 id=\"系统环境\"><a href=\"#系统环境\" class=\"headerlink\" title=\"系统环境\"></a>系统环境</h2><ul>\n<li>内网 Ubuntu 20.x + Ngnix + PHP + Mysql + Wordpress</li>\n<li>外网 Ubuntu 20.x + Ngnix </li>\n</ul>\n<h3 id=\"外网服务器配置\"><a href=\"#外网服务器配置\" class=\"headerlink\" title=\"外网服务器配置\"></a>外网服务器配置</h3><p>外网服务器必须提供rsync –daemon服务以监听内网服务器发出的同步指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[123]</span><br><span class=\"line\">  comment &#x3D; 123 static html files server</span><br><span class=\"line\">    path &#x3D; &#x2F;var&#x2F;www&#x2F;staichtml&#x2F;</span><br><span class=\"line\">    use chroot &#x3D; no</span><br><span class=\"line\">    max connections&#x3D;20</span><br><span class=\"line\">    lock file &#x3D; &#x2F;var&#x2F;lock&#x2F;rsyncd</span><br><span class=\"line\">    read only &#x3D; no</span><br><span class=\"line\">  write only &#x3D; no</span><br><span class=\"line\">    list &#x3D; yes</span><br><span class=\"line\">    uid &#x3D; rsync</span><br><span class=\"line\">    gid &#x3D; rsync</span><br><span class=\"line\">  auth users &#x3D; rsync_clint</span><br><span class=\"line\">  secrets file &#x3D; &#x2F;etc&#x2F;rsyncd.secrets</span><br><span class=\"line\">    strict modes &#x3D; yes</span><br><span class=\"line\">  port&#x3D;873</span><br><span class=\"line\">  pid file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.pid</span><br><span class=\"line\">  log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log</span><br><span class=\"line\">  log format &#x3D; %t %a %m %f %b</span><br><span class=\"line\">    ignore errors &#x3D; yes</span><br><span class=\"line\">    ignore nonreadable &#x3D; yes</span><br><span class=\"line\">    transfer logging &#x3D; yes</span><br><span class=\"line\">    timeout &#x3D; 600</span><br><span class=\"line\">    refuse options &#x3D; checksum dry-run</span><br><span class=\"line\">    dont compress &#x3D; *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>创建 /etc/rsyncd.secrets 并 chmod 600 权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync_clint:密码123</span><br></pre></td></tr></table></figure>\n<p>添加一个系统用户为rsync的用户 <em>该用户不具备登录权限</em></p>\n<pre><code>&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;useradd -s &amp;#x2F;sbin&amp;#x2F;nologin -M rsync&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre>\n<p><strong>！！！注意！！！必须 chmod 777 /var/www/staichtml/ 在实际操作中发现没有x权限rsync服务无法写入文件</strong></p>\n<h3 id=\"内网服务器配置\"><a href=\"#内网服务器配置\" class=\"headerlink\" title=\"内网服务器配置\"></a>内网服务器配置</h3><p><em>略过相关web服务配置</em><br>创建 /etc/rsyncd.secrets 并 chmod 600 权限，仅存放密码使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">密码123</span><br></pre></td></tr></table></figure>\n<p>安装apt install inofity-tool</p>\n<p>编写简单实现的.sh文件并 chmod +x xxxx.sh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##测试代码：</span><br><span class=\"line\">#!&#x2F;bin&#x2F;bash</span><br><span class=\"line\">src&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;mystaticsite&#x2F; #同步目录路径</span><br><span class=\"line\">ip&#x3D;111.111.111.111</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;inotifywait -rm  --timefmt &#39;%d&#x2F;%m&#x2F;%y %H:%M&#39; --format &#39;%T %w%f%e&#39; -e modify,delete,create,attrib,move $src | while read file</span><br><span class=\"line\">   do</span><br><span class=\"line\">     rsync -avz --delete --progress $src rsync_clint@$ip::123 --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br><span class=\"line\">    echo &quot;$&#123;file&#125; was rsynced&quot; &gt;&gt; &#x2F;tmp&#x2F;rsync.log 2&gt;&amp;1</span><br><span class=\"line\">   done</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">！！！注意！！！</span><br><span class=\"line\">必须将$src的位置写在连接之前不能放在连接之后，不然外网服务器无法接受到文件。</span><br><span class=\"line\">这一点与网上很多教程向左，卡了我两天多的时间才发现的:(</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生产环境代码：\"><a href=\"#生产环境代码：\" class=\"headerlink\" title=\"生产环境代码：\"></a>生产环境代码：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;bash</span><br><span class=\"line\"></span><br><span class=\"line\">src&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F; #同步目录路径</span><br><span class=\"line\">user&#x3D;rsync_clint</span><br><span class=\"line\">ip1&#x3D;7xx.xxx.xxx.xxx</span><br><span class=\"line\">ip2&#x3D;1xx.xx.xxx.xx</span><br><span class=\"line\">des&#x3D;123</span><br><span class=\"line\">pswfile&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br><span class=\"line\"></span><br><span class=\"line\">cd $&#123;src&#125;</span><br><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;inotifywait -rmq  --format &#39;%Xe %w%f&#39; -e modify,delete,create,attrib,close_write,move .&#x2F; | while read file</span><br><span class=\"line\">   do</span><br><span class=\"line\">      INO_EVENT&#x3D;$(echo $file | awk&#39;&#123;print $1&#125;&#39;)</span><br><span class=\"line\">      INO_FILE&#x3D;$(echo $file | awk&#39;&#123;print $2&#125;&#39;)</span><br><span class=\"line\">      echo &quot;----------------$&#123;data&#125;-----------------&quot;</span><br><span class=\"line\">      echo $file</span><br><span class=\"line\">      </span><br><span class=\"line\">      if [[$INO_EVENT &#x3D;~ &#39;CREATE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MODIFY&#39;]] || [[$INO_EVENT &#x3D;~ &#39;CLOSE_WRITE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MOVE_TO&#39;]]</span><br><span class=\"line\">      then</span><br><span class=\"line\">          echo &#39;Creat or Modify or Close_write or Moved_to&#39;</span><br><span class=\"line\">          rsync -avzcR --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class=\"line\">          rsync -avzcR --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125; </span><br><span class=\"line\">      fi</span><br><span class=\"line\"></span><br><span class=\"line\">      if [[$INO_EVENT &#x3D;~ &#39;DELETE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MOVE_FROM&#39;]]</span><br><span class=\"line\">      then</span><br><span class=\"line\">          echo &#39;Delete or Moved_from&#39;</span><br><span class=\"line\">          rsync -avzR --delete --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class=\"line\">          rsync -avzR --delete --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125;  </span><br><span class=\"line\">      fi</span><br><span class=\"line\"></span><br><span class=\"line\">      if [[$INO_EVENT &#x3D;~ &#39;ATTRIB&#39;]]</span><br><span class=\"line\">      then</span><br><span class=\"line\">          echo &#39;Attrib&#39;</span><br><span class=\"line\">          if [ !-d &quot;$INO_FILE&quot; ]</span><br><span class=\"line\">          then</span><br><span class=\"line\">            rsync -avzcR  --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class=\"line\">            rsync -avzcR  --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125;</span><br><span class=\"line\">          fi</span><br><span class=\"line\">      fi</span><br><span class=\"line\"></span><br><span class=\"line\">   done</span><br></pre></td></tr></table></figure>\n<p>因为inotify不会监控到为启动时的变化，所以直接在crontab里增加一个2小时全量目录同步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e</span><br><span class=\"line\">* *&#x2F;2 * * * rsync -avz --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets&#x2F;var&#x2F;www&#x2F;html&#x2F;  rsync_clint@1xxx.xxx.xxx.xxx::123 &amp;&amp; rsync -avz --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets &#x2F;var&#x2F;www&#x2F;html&#x2F; rrsync_clint@7xx.xxx.xxx.xx::123</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"设计要求\"><a href=\"#设计要求\" class=\"headerlink\" title=\"设计要求\"></a>设计要求</h2><ul>\n<li>内网web服务器生成html页面</li>\n<li>内网向外网同步生成的html页面和目录</li>\n<li>外网服务器纯静态资源访问</li>\n</ul>\n<h2 id=\"系统环境\"><a href=\"#系统环境\" class=\"headerlink\" title=\"系统环境\"></a>系统环境</h2><ul>\n<li>内网 Ubuntu 20.x + Ngnix + PHP + Mysql + Wordpress</li>\n<li>外网 Ubuntu 20.x + Ngnix </li>\n</ul>\n<h3 id=\"外网服务器配置\"><a href=\"#外网服务器配置\" class=\"headerlink\" title=\"外网服务器配置\"></a>外网服务器配置</h3><p>外网服务器必须提供rsync –daemon服务以监听内网服务器发出的同步指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[123]</span><br><span class=\"line\">  comment &#x3D; 123 static html files server</span><br><span class=\"line\">    path &#x3D; &#x2F;var&#x2F;www&#x2F;staichtml&#x2F;</span><br><span class=\"line\">    use chroot &#x3D; no</span><br><span class=\"line\">    max connections&#x3D;20</span><br><span class=\"line\">    lock file &#x3D; &#x2F;var&#x2F;lock&#x2F;rsyncd</span><br><span class=\"line\">    read only &#x3D; no</span><br><span class=\"line\">  write only &#x3D; no</span><br><span class=\"line\">    list &#x3D; yes</span><br><span class=\"line\">    uid &#x3D; rsync</span><br><span class=\"line\">    gid &#x3D; rsync</span><br><span class=\"line\">  auth users &#x3D; rsync_clint</span><br><span class=\"line\">  secrets file &#x3D; &#x2F;etc&#x2F;rsyncd.secrets</span><br><span class=\"line\">    strict modes &#x3D; yes</span><br><span class=\"line\">  port&#x3D;873</span><br><span class=\"line\">  pid file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.pid</span><br><span class=\"line\">  log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log</span><br><span class=\"line\">  log format &#x3D; %t %a %m %f %b</span><br><span class=\"line\">    ignore errors &#x3D; yes</span><br><span class=\"line\">    ignore nonreadable &#x3D; yes</span><br><span class=\"line\">    transfer logging &#x3D; yes</span><br><span class=\"line\">    timeout &#x3D; 600</span><br><span class=\"line\">    refuse options &#x3D; checksum dry-run</span><br><span class=\"line\">    dont compress &#x3D; *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>创建 /etc/rsyncd.secrets 并 chmod 600 权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync_clint:密码123</span><br></pre></td></tr></table></figure>\n<p>添加一个系统用户为rsync的用户 <em>该用户不具备登录权限</em></p>\n<pre><code>&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;useradd -s &amp;#x2F;sbin&amp;#x2F;nologin -M rsync&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre>\n<p><strong>！！！注意！！！必须 chmod 777 /var/www/staichtml/ 在实际操作中发现没有x权限rsync服务无法写入文件</strong></p>\n<h3 id=\"内网服务器配置\"><a href=\"#内网服务器配置\" class=\"headerlink\" title=\"内网服务器配置\"></a>内网服务器配置</h3><p><em>略过相关web服务配置</em><br>创建 /etc/rsyncd.secrets 并 chmod 600 权限，仅存放密码使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">密码123</span><br></pre></td></tr></table></figure>\n<p>安装apt install inofity-tool</p>\n<p>编写简单实现的.sh文件并 chmod +x xxxx.sh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##测试代码：</span><br><span class=\"line\">#!&#x2F;bin&#x2F;bash</span><br><span class=\"line\">src&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;mystaticsite&#x2F; #同步目录路径</span><br><span class=\"line\">ip&#x3D;111.111.111.111</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;inotifywait -rm  --timefmt &#39;%d&#x2F;%m&#x2F;%y %H:%M&#39; --format &#39;%T %w%f%e&#39; -e modify,delete,create,attrib,move $src | while read file</span><br><span class=\"line\">   do</span><br><span class=\"line\">     rsync -avz --delete --progress $src rsync_clint@$ip::123 --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br><span class=\"line\">    echo &quot;$&#123;file&#125; was rsynced&quot; &gt;&gt; &#x2F;tmp&#x2F;rsync.log 2&gt;&amp;1</span><br><span class=\"line\">   done</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">！！！注意！！！</span><br><span class=\"line\">必须将$src的位置写在连接之前不能放在连接之后，不然外网服务器无法接受到文件。</span><br><span class=\"line\">这一点与网上很多教程向左，卡了我两天多的时间才发现的:(</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生产环境代码：\"><a href=\"#生产环境代码：\" class=\"headerlink\" title=\"生产环境代码：\"></a>生产环境代码：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;bin&#x2F;bash</span><br><span class=\"line\"></span><br><span class=\"line\">src&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F; #同步目录路径</span><br><span class=\"line\">user&#x3D;rsync_clint</span><br><span class=\"line\">ip1&#x3D;7xx.xxx.xxx.xxx</span><br><span class=\"line\">ip2&#x3D;1xx.xx.xxx.xx</span><br><span class=\"line\">des&#x3D;123</span><br><span class=\"line\">pswfile&#x3D;&#x2F;etc&#x2F;rsyncd.secrets</span><br><span class=\"line\"></span><br><span class=\"line\">cd $&#123;src&#125;</span><br><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;inotifywait -rmq  --format &#39;%Xe %w%f&#39; -e modify,delete,create,attrib,close_write,move .&#x2F; | while read file</span><br><span class=\"line\">   do</span><br><span class=\"line\">      INO_EVENT&#x3D;$(echo $file | awk&#39;&#123;print $1&#125;&#39;)</span><br><span class=\"line\">      INO_FILE&#x3D;$(echo $file | awk&#39;&#123;print $2&#125;&#39;)</span><br><span class=\"line\">      echo &quot;----------------$&#123;data&#125;-----------------&quot;</span><br><span class=\"line\">      echo $file</span><br><span class=\"line\">      </span><br><span class=\"line\">      if [[$INO_EVENT &#x3D;~ &#39;CREATE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MODIFY&#39;]] || [[$INO_EVENT &#x3D;~ &#39;CLOSE_WRITE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MOVE_TO&#39;]]</span><br><span class=\"line\">      then</span><br><span class=\"line\">          echo &#39;Creat or Modify or Close_write or Moved_to&#39;</span><br><span class=\"line\">          rsync -avzcR --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class=\"line\">          rsync -avzcR --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125; </span><br><span class=\"line\">      fi</span><br><span class=\"line\"></span><br><span class=\"line\">      if [[$INO_EVENT &#x3D;~ &#39;DELETE&#39;]] || [[$INO_EVENT &#x3D;~ &#39;MOVE_FROM&#39;]]</span><br><span class=\"line\">      then</span><br><span class=\"line\">          echo &#39;Delete or Moved_from&#39;</span><br><span class=\"line\">          rsync -avzR --delete --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class=\"line\">          rsync -avzR --delete --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125;  </span><br><span class=\"line\">      fi</span><br><span class=\"line\"></span><br><span class=\"line\">      if [[$INO_EVENT &#x3D;~ &#39;ATTRIB&#39;]]</span><br><span class=\"line\">      then</span><br><span class=\"line\">          echo &#39;Attrib&#39;</span><br><span class=\"line\">          if [ !-d &quot;$INO_FILE&quot; ]</span><br><span class=\"line\">          then</span><br><span class=\"line\">            rsync -avzcR  --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;1&#125;::$&#123;des&#125; &amp;&amp;</span><br><span class=\"line\">            rsync -avzcR  --password-file&#x3D;$&#123;pswfile&#125; $(dirname $&#123;INO_FILE&#125;) $&#123;user&#125;@$ip&#123;2&#125;::$&#123;des&#125;</span><br><span class=\"line\">          fi</span><br><span class=\"line\">      fi</span><br><span class=\"line\"></span><br><span class=\"line\">   done</span><br></pre></td></tr></table></figure>\n<p>因为inotify不会监控到为启动时的变化，所以直接在crontab里增加一个2小时全量目录同步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e</span><br><span class=\"line\">* *&#x2F;2 * * * rsync -avz --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets&#x2F;var&#x2F;www&#x2F;html&#x2F;  rsync_clint@1xxx.xxx.xxx.xxx::123 &amp;&amp; rsync -avz --password-file&#x3D;&#x2F;etc&#x2F;rsyncd.secrets &#x2F;var&#x2F;www&#x2F;html&#x2F; rrsync_clint@7xx.xxx.xxx.xx::123</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"高负载web站点设计 (一)","date":"2020-08-05T06:08:38.000Z","_content":"\n## A.负载平衡服务器\n\n- A.1. ngnix反向代理服务根据B服务组的最短时间或负载来自动均衡。\n\n## B.静态页面服务器集群\n\n### b.1. nginx WEB业务集群\n\n- 使用rsync服务同步C.1.服务器生成的静态页面和相关的静态资源。（扩展思路：将GIF，JPG等静态资源单独使用dfs服务器分流）\n\n## C.内网动态服务器\n\n### c.1.  Wordpress内容生产服务器\n\n- wordpress服务器使用wp2static插件生成静态页面，wp2static插件可以识别之前生成的页面从而减少服务器负载。\n\n- wordpress服务器使用inonifywait脚本监控wp2static插件生成的静态页面目录，如果产生文件的变更（创建、删除、修改、移动）和目录结构的变更后，则通过rsync服务器同步远程服务器。\n\n### c.2.   Pyspider爬虫服务器\n\n- Pyspider爬虫框架爬取需要的数据\n- 安装python-wordpress-xmlrpc库， 使用wordpress的rpc服务接受Pyspider爬取经过清洗后的数据发布到wordpress服务器。\n\n```mermaid\ngraph TD\nA[用户] -->|访问| B((负载平衡服务器))\nB --> |用户搜索动作|C{动态服务器}\nB --> |静态页面|D{静态服务器组}\nD -->|权重平衡| E[nginx 1]\nD -->|权重平衡| F[ngnix 2]\nD -->|权重平衡| I[ngnix 3]\nD -.-|内网服务器组|G[WP内容生产发布服务器]\nG -.-|爬取自动发布|H(Pyspider服务器)\nG -->|MySQL主从同步|C\n```","source":"_posts/高负载web站点设计.md","raw":"---\ntitle: '高负载web站点设计 (一)'\ndate: 2020-08-05 14:08:38\ntags:\n- Ubuntu\n- nginx\ncategories:\n- 运维\n---\n\n## A.负载平衡服务器\n\n- A.1. ngnix反向代理服务根据B服务组的最短时间或负载来自动均衡。\n\n## B.静态页面服务器集群\n\n### b.1. nginx WEB业务集群\n\n- 使用rsync服务同步C.1.服务器生成的静态页面和相关的静态资源。（扩展思路：将GIF，JPG等静态资源单独使用dfs服务器分流）\n\n## C.内网动态服务器\n\n### c.1.  Wordpress内容生产服务器\n\n- wordpress服务器使用wp2static插件生成静态页面，wp2static插件可以识别之前生成的页面从而减少服务器负载。\n\n- wordpress服务器使用inonifywait脚本监控wp2static插件生成的静态页面目录，如果产生文件的变更（创建、删除、修改、移动）和目录结构的变更后，则通过rsync服务器同步远程服务器。\n\n### c.2.   Pyspider爬虫服务器\n\n- Pyspider爬虫框架爬取需要的数据\n- 安装python-wordpress-xmlrpc库， 使用wordpress的rpc服务接受Pyspider爬取经过清洗后的数据发布到wordpress服务器。\n\n```mermaid\ngraph TD\nA[用户] -->|访问| B((负载平衡服务器))\nB --> |用户搜索动作|C{动态服务器}\nB --> |静态页面|D{静态服务器组}\nD -->|权重平衡| E[nginx 1]\nD -->|权重平衡| F[ngnix 2]\nD -->|权重平衡| I[ngnix 3]\nD -.-|内网服务器组|G[WP内容生产发布服务器]\nG -.-|爬取自动发布|H(Pyspider服务器)\nG -->|MySQL主从同步|C\n```","slug":"高负载web站点设计","published":1,"updated":"2020-08-24T03:57:54.954Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke7zqgbv000gin3d20nn7tyg","content":"<h2 id=\"A-负载平衡服务器\"><a href=\"#A-负载平衡服务器\" class=\"headerlink\" title=\"A.负载平衡服务器\"></a>A.负载平衡服务器</h2><ul>\n<li>A.1. ngnix反向代理服务根据B服务组的最短时间或负载来自动均衡。</li>\n</ul>\n<h2 id=\"B-静态页面服务器集群\"><a href=\"#B-静态页面服务器集群\" class=\"headerlink\" title=\"B.静态页面服务器集群\"></a>B.静态页面服务器集群</h2><h3 id=\"b-1-nginx-WEB业务集群\"><a href=\"#b-1-nginx-WEB业务集群\" class=\"headerlink\" title=\"b.1. nginx WEB业务集群\"></a>b.1. nginx WEB业务集群</h3><ul>\n<li>使用rsync服务同步C.1.服务器生成的静态页面和相关的静态资源。（扩展思路：将GIF，JPG等静态资源单独使用dfs服务器分流）</li>\n</ul>\n<h2 id=\"C-内网动态服务器\"><a href=\"#C-内网动态服务器\" class=\"headerlink\" title=\"C.内网动态服务器\"></a>C.内网动态服务器</h2><h3 id=\"c-1-Wordpress内容生产服务器\"><a href=\"#c-1-Wordpress内容生产服务器\" class=\"headerlink\" title=\"c.1.  Wordpress内容生产服务器\"></a>c.1.  Wordpress内容生产服务器</h3><ul>\n<li><p>wordpress服务器使用wp2static插件生成静态页面，wp2static插件可以识别之前生成的页面从而减少服务器负载。</p>\n</li>\n<li><p>wordpress服务器使用inonifywait脚本监控wp2static插件生成的静态页面目录，如果产生文件的变更（创建、删除、修改、移动）和目录结构的变更后，则通过rsync服务器同步远程服务器。</p>\n</li>\n</ul>\n<h3 id=\"c-2-Pyspider爬虫服务器\"><a href=\"#c-2-Pyspider爬虫服务器\" class=\"headerlink\" title=\"c.2.   Pyspider爬虫服务器\"></a>c.2.   Pyspider爬虫服务器</h3><ul>\n<li>Pyspider爬虫框架爬取需要的数据</li>\n<li>安装python-wordpress-xmlrpc库， 使用wordpress的rpc服务接受Pyspider爬取经过清洗后的数据发布到wordpress服务器。</li>\n</ul>\n<pre class=\"mermaid\">graph TD\nA[用户] -->|访问| B((负载平衡服务器))\nB --> |用户搜索动作|C{动态服务器}\nB --> |静态页面|D{静态服务器组}\nD -->|权重平衡| E[nginx 1]\nD -->|权重平衡| F[ngnix 2]\nD -->|权重平衡| I[ngnix 3]\nD -.-|内网服务器组|G[WP内容生产发布服务器]\nG -.-|爬取自动发布|H(Pyspider服务器)\nG -->|MySQL主从同步|C</pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"A-负载平衡服务器\"><a href=\"#A-负载平衡服务器\" class=\"headerlink\" title=\"A.负载平衡服务器\"></a>A.负载平衡服务器</h2><ul>\n<li>A.1. ngnix反向代理服务根据B服务组的最短时间或负载来自动均衡。</li>\n</ul>\n<h2 id=\"B-静态页面服务器集群\"><a href=\"#B-静态页面服务器集群\" class=\"headerlink\" title=\"B.静态页面服务器集群\"></a>B.静态页面服务器集群</h2><h3 id=\"b-1-nginx-WEB业务集群\"><a href=\"#b-1-nginx-WEB业务集群\" class=\"headerlink\" title=\"b.1. nginx WEB业务集群\"></a>b.1. nginx WEB业务集群</h3><ul>\n<li>使用rsync服务同步C.1.服务器生成的静态页面和相关的静态资源。（扩展思路：将GIF，JPG等静态资源单独使用dfs服务器分流）</li>\n</ul>\n<h2 id=\"C-内网动态服务器\"><a href=\"#C-内网动态服务器\" class=\"headerlink\" title=\"C.内网动态服务器\"></a>C.内网动态服务器</h2><h3 id=\"c-1-Wordpress内容生产服务器\"><a href=\"#c-1-Wordpress内容生产服务器\" class=\"headerlink\" title=\"c.1.  Wordpress内容生产服务器\"></a>c.1.  Wordpress内容生产服务器</h3><ul>\n<li><p>wordpress服务器使用wp2static插件生成静态页面，wp2static插件可以识别之前生成的页面从而减少服务器负载。</p>\n</li>\n<li><p>wordpress服务器使用inonifywait脚本监控wp2static插件生成的静态页面目录，如果产生文件的变更（创建、删除、修改、移动）和目录结构的变更后，则通过rsync服务器同步远程服务器。</p>\n</li>\n</ul>\n<h3 id=\"c-2-Pyspider爬虫服务器\"><a href=\"#c-2-Pyspider爬虫服务器\" class=\"headerlink\" title=\"c.2.   Pyspider爬虫服务器\"></a>c.2.   Pyspider爬虫服务器</h3><ul>\n<li>Pyspider爬虫框架爬取需要的数据</li>\n<li>安装python-wordpress-xmlrpc库， 使用wordpress的rpc服务接受Pyspider爬取经过清洗后的数据发布到wordpress服务器。</li>\n</ul>\n<pre class=\"mermaid\">graph TD\nA[用户] -->|访问| B((负载平衡服务器))\nB --> |用户搜索动作|C{动态服务器}\nB --> |静态页面|D{静态服务器组}\nD -->|权重平衡| E[nginx 1]\nD -->|权重平衡| F[ngnix 2]\nD -->|权重平衡| I[ngnix 3]\nD -.-|内网服务器组|G[WP内容生产发布服务器]\nG -.-|爬取自动发布|H(Pyspider服务器)\nG -->|MySQL主从同步|C</pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"cke7zqgbp0007in3dbimn2r8t","category_id":"cke7zqgbm0004in3d31nffs57","_id":"cke7zqgbu000din3d0vnxdiym"},{"post_id":"cke7zqgbi0001in3dh91qemew","category_id":"cke7zqgbm0004in3d31nffs57","_id":"cke7zqgbw000hin3de870g5zo"},{"post_id":"cke7zqgbs000bin3d7c758fcp","category_id":"cke7zqgbm0004in3d31nffs57","_id":"cke7zqgbw000jin3d2ipa75lo"},{"post_id":"cke7zqgbl0003in3dcch35k21","category_id":"cke7zqgbm0004in3d31nffs57","_id":"cke7zqgbx000min3d3ugabkkt"},{"post_id":"cke7zqgbt000cin3d4sqc0ek0","category_id":"cke7zqgbm0004in3d31nffs57","_id":"cke7zqgbx000nin3d23xwhd61"},{"post_id":"cke7zqgbv000gin3d20nn7tyg","category_id":"cke7zqgbm0004in3d31nffs57","_id":"cke7zqgbx000pin3d66p1h8ql"},{"post_id":"cke7zqgbo0006in3d6c78bgdb","category_id":"cke7zqgbu000ein3dd8wacr8u","_id":"cke7zqgbx000rin3d519b078g"}],"PostTag":[{"post_id":"cke7zqgbi0001in3dh91qemew","tag_id":"cke7zqgbn0005in3d125yg9fm","_id":"cke7zqgbw000iin3d6r40c3c8"},{"post_id":"cke7zqgbi0001in3dh91qemew","tag_id":"cke7zqgbr000ain3d9lyf4oq6","_id":"cke7zqgbw000kin3d7zue4wag"},{"post_id":"cke7zqgbl0003in3dcch35k21","tag_id":"cke7zqgbu000fin3d5sof2uxz","_id":"cke7zqgbx000qin3dcfwu6g8d"},{"post_id":"cke7zqgbl0003in3dcch35k21","tag_id":"cke7zqgbw000lin3dedda4fjs","_id":"cke7zqgby000sin3da0lmaw6a"},{"post_id":"cke7zqgbo0006in3d6c78bgdb","tag_id":"cke7zqgbx000oin3d8wf1crq1","_id":"cke7zqgby000vin3d624l59c6"},{"post_id":"cke7zqgbo0006in3d6c78bgdb","tag_id":"cke7zqgbw000lin3dedda4fjs","_id":"cke7zqgby000win3dbx4p1rpq"},{"post_id":"cke7zqgbp0007in3dbimn2r8t","tag_id":"cke7zqgby000uin3d3n7h4lkk","_id":"cke7zqgbz000zin3d92ac1lt2"},{"post_id":"cke7zqgbp0007in3dbimn2r8t","tag_id":"cke7zqgbz000xin3d6y7l5wen","_id":"cke7zqgbz0010in3d1tcy5jnk"},{"post_id":"cke7zqgbs000bin3d7c758fcp","tag_id":"cke7zqgby000uin3d3n7h4lkk","_id":"cke7zqgc00013in3d5vtwf32k"},{"post_id":"cke7zqgbs000bin3d7c758fcp","tag_id":"cke7zqgbz0011in3dhwu5bdwz","_id":"cke7zqgc00014in3decxf436u"},{"post_id":"cke7zqgbt000cin3d4sqc0ek0","tag_id":"cke7zqgby000uin3d3n7h4lkk","_id":"cke7zqgc10018in3dgczlal0s"},{"post_id":"cke7zqgbt000cin3d4sqc0ek0","tag_id":"cke7zqgbz0011in3dhwu5bdwz","_id":"cke7zqgc10019in3dg7p5hisf"},{"post_id":"cke7zqgbt000cin3d4sqc0ek0","tag_id":"cke7zqgc10016in3d44e3fog9","_id":"cke7zqgc2001ain3db02y1ygt"},{"post_id":"cke7zqgbv000gin3d20nn7tyg","tag_id":"cke7zqgby000uin3d3n7h4lkk","_id":"cke7zqgc2001bin3d137p2jbb"},{"post_id":"cke7zqgbv000gin3d20nn7tyg","tag_id":"cke7zqgbu000fin3d5sof2uxz","_id":"cke7zqgc2001cin3d9cxfeqpn"}],"Tag":[{"name":"Google","_id":"cke7zqgbn0005in3d125yg9fm"},{"name":"VPS","_id":"cke7zqgbr000ain3d9lyf4oq6"},{"name":"nginx","_id":"cke7zqgbu000fin3d5sof2uxz"},{"name":"wordpress","_id":"cke7zqgbw000lin3dedda4fjs"},{"name":"pyspider","_id":"cke7zqgbx000oin3d8wf1crq1"},{"name":"Ubuntu","_id":"cke7zqgby000uin3d3n7h4lkk"},{"name":"Linux","_id":"cke7zqgbz000xin3d6y7l5wen"},{"name":"rsync","_id":"cke7zqgbz0011in3dhwu5bdwz"},{"name":"inotify","_id":"cke7zqgc10016in3d44e3fog9"}]}}